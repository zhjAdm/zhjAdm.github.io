{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/css/noscript.styl","path":"css/noscript.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next1.png","path":"images/favicon-16x16-next1.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next1.png","path":"images/favicon-32x32-next1.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo-algolia-nebula-blue-full.svg","path":"images/logo-algolia-nebula-blue-full.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/tx.png","path":"images/tx.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/yourbackground.png","path":"images/yourbackground.png","modified":0,"renderable":1},{"_id":"themes/next/source/js/bookmark.js","path":"js/bookmark.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/comments-buttons.js","path":"js/comments-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/comments.js","path":"js/comments.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/config.js","path":"js/config.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/motion.js","path":"js/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/next-boot.js","path":"js/next-boot.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/pjax.js","path":"js/pjax.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/schedule.js","path":"js/schedule.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/quicklink.js","path":"js/third-party/quicklink.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/nprogress.js","path":"js/third-party/nprogress.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/rating.js","path":"js/third-party/rating.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/LICENSE","path":"lib/pace/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/README.md","path":"lib/pace/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flat-top.min.css","path":"lib/pace/pace-theme-flat-top.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-material.min.css","path":"lib/pace/pace-theme-material.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/CHANGELOG.md","path":"lib/pjax/CHANGELOG.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/LICENSE","path":"lib/pjax/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/README.md","path":"lib/pjax/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/index.d.ts","path":"lib/pjax/index.d.ts","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/index.js","path":"lib/pjax/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/package.json","path":"lib/pjax/package.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/pjax.js","path":"lib/pjax/pjax.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/pjax.min.js","path":"lib/pjax/pjax.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/reading_progress/LICENSE","path":"lib/reading_progress/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/reading_progress/README.md","path":"lib/reading_progress/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/reading_progress/package.json","path":"lib/reading_progress/package.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/reading_progress/reading_progress.js","path":"lib/reading_progress/reading_progress.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/reading_progress/reading_progress.min.js","path":"lib/reading_progress/reading_progress.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/reading_progress/renovate.json","path":"lib/reading_progress/renovate.json","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/analytics/baidu-analytics.js","path":"js/third-party/analytics/baidu-analytics.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/analytics/growingio.js","path":"js/third-party/analytics/growingio.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/analytics/google-analytics.js","path":"js/third-party/analytics/google-analytics.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/comments/changyan.js","path":"js/third-party/comments/changyan.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/comments/disqus.js","path":"js/third-party/comments/disqus.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/comments/disqusjs.js","path":"js/third-party/comments/disqusjs.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/comments/gitalk.js","path":"js/third-party/comments/gitalk.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/comments/isso.js","path":"js/third-party/comments/isso.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/comments/livere.js","path":"js/third-party/comments/livere.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/comments/utterances.js","path":"js/third-party/comments/utterances.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/math/katex.js","path":"js/third-party/math/katex.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/math/mathjax.js","path":"js/third-party/math/mathjax.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/chat/chatra.js","path":"js/third-party/chat/chatra.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/statistics/firestore.js","path":"js/third-party/statistics/firestore.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/statistics/lean-analytics.js","path":"js/third-party/statistics/lean-analytics.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/search/algolia-search.js","path":"js/third-party/search/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/search/local-search.js","path":"js/third-party/search/local-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/tags/mermaid.js","path":"js/third-party/tags/mermaid.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/tags/pdf.js","path":"js/third-party/tags/pdf.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/example/example.js","path":"lib/pjax/example/example.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/example/forms.html","path":"lib/pjax/example/forms.html","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/example/index.html","path":"lib/pjax/example/index.html","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/example/page2.html","path":"lib/pjax/example/page2.html","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/example/page3.html","path":"lib/pjax/example/page3.html","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/abort-request.js","path":"lib/pjax/lib/abort-request.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/eval-script.js","path":"lib/pjax/lib/eval-script.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/execute-scripts.js","path":"lib/pjax/lib/execute-scripts.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/foreach-els.js","path":"lib/pjax/lib/foreach-els.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/foreach-selectors.js","path":"lib/pjax/lib/foreach-selectors.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/parse-options.js","path":"lib/pjax/lib/parse-options.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/send-request.js","path":"lib/pjax/lib/send-request.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/is-supported.js","path":"lib/pjax/lib/is-supported.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/switches-selectors.js","path":"lib/pjax/lib/switches-selectors.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/switches.js","path":"lib/pjax/lib/switches.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/uniqueid.js","path":"lib/pjax/lib/uniqueid.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/setup.js","path":"lib/pjax/tests/setup.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/test.ts","path":"lib/pjax/tests/test.ts","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/events/off.js","path":"lib/pjax/lib/events/off.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/events/on.js","path":"lib/pjax/lib/events/on.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/events/trigger.js","path":"lib/pjax/lib/events/trigger.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/proto/attach-form.js","path":"lib/pjax/lib/proto/attach-form.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/proto/attach-link.js","path":"lib/pjax/lib/proto/attach-link.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/proto/log.js","path":"lib/pjax/lib/proto/log.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/proto/handle-response.js","path":"lib/pjax/lib/proto/handle-response.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/proto/parse-element.js","path":"lib/pjax/lib/proto/parse-element.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/util/clone.js","path":"lib/pjax/lib/util/clone.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/util/contains.js","path":"lib/pjax/lib/util/contains.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/util/extend.js","path":"lib/pjax/lib/util/extend.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/util/noop.js","path":"lib/pjax/lib/util/noop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/util/update-query-string.js","path":"lib/pjax/lib/util/update-query-string.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/lib/abort-request.js","path":"lib/pjax/tests/lib/abort-request.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/lib/eval-scripts.js","path":"lib/pjax/tests/lib/eval-scripts.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/lib/events.js","path":"lib/pjax/tests/lib/events.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/lib/execute-scripts.js","path":"lib/pjax/tests/lib/execute-scripts.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/lib/foreach-selectors.js","path":"lib/pjax/tests/lib/foreach-selectors.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/lib/foreach-els.js","path":"lib/pjax/tests/lib/foreach-els.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/lib/parse-options.js","path":"lib/pjax/tests/lib/parse-options.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/lib/is-supported.js","path":"lib/pjax/tests/lib/is-supported.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/lib/send-request.js","path":"lib/pjax/tests/lib/send-request.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/lib/switch-selectors.js","path":"lib/pjax/tests/lib/switch-selectors.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/lib/uniqueid.js","path":"lib/pjax/tests/lib/uniqueid.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/lib/switches.js","path":"lib/pjax/tests/lib/switches.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/lib/proto/attach-form.js","path":"lib/pjax/tests/lib/proto/attach-form.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/lib/proto/attach-link.js","path":"lib/pjax/tests/lib/proto/attach-link.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/lib/proto/handle-response.js","path":"lib/pjax/tests/lib/proto/handle-response.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/lib/proto/parse-element.js","path":"lib/pjax/tests/lib/proto/parse-element.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/lib/util/clone.js","path":"lib/pjax/tests/lib/util/clone.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/lib/util/contains.js","path":"lib/pjax/tests/lib/util/contains.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/lib/util/noop.js","path":"lib/pjax/tests/lib/util/noop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/lib/util/extend.js","path":"lib/pjax/tests/lib/util/extend.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/lib/util/update-query-string.js","path":"lib/pjax/tests/lib/util/update-query-string.js","modified":0,"renderable":1}],"Cache":[{"_id":"source/_posts/Java导出之Excel.md","hash":"5163591c9e5ad8acdcbc75be96fc256a0451d297","modified":1635734810790},{"_id":"source/_posts/Java中的异常（Error与Exception）.md","hash":"90bd32f2307867db36abeb45b0e6eb308a7d10a1","modified":1635335519543},{"_id":"source/_posts/滚动条探索之美化.md","hash":"5dd61652bf5c06d88c1f58f750932f927472819c","modified":1624195525791},{"_id":"source/_data/styles.styl","hash":"0ea6726e95e0cae970b801700beacaa53453e987","modified":1624195525789},{"_id":"source/_data/variables.styl","hash":"adfbd2ee51aee4e64a6f7973b04ee15ed5f9fc40","modified":1624195525789},{"_id":"source/about/index.md","hash":"10baee6ff3c25472f1e03ce370047db7afc7aecd","modified":1624195525792},{"_id":"source/categories/index.md","hash":"785d97576650d7756d5eba637db805274925e89e","modified":1624195525792},{"_id":"source/tags/index.md","hash":"9917902dca5d55f7938aa73369b61502f25c4dc6","modified":1624195525793},{"_id":"themes/next/.editorconfig","hash":"731c650ddad6eb0fc7c3d4a91cad1698fe7ad311","modified":1624195525797},{"_id":"themes/next/.eslintrc.json","hash":"611e15c3fcb41dc68fa8532ee595a1262a1b5a8a","modified":1624195525798},{"_id":"themes/next/.gitattributes","hash":"aeeca2f1e987d83232d7870d1435a4e3ed66b648","modified":1624195525798},{"_id":"themes/next/.gitignore","hash":"af1447cca691e5a4d68234b4adf7f591716d1b97","modified":1624195525799},{"_id":"themes/next/_config.yml","hash":"bfe0400581edf532dcc25b91891318c120b640dd","modified":1635735347468},{"_id":"themes/next/.stylintrc","hash":"6259e2a0b65d46865ab89564b88fc67638668295","modified":1624195525799},{"_id":"themes/next/_vendors.yml","hash":"d3927e508b7cbb81a2e725ee79f7048bdb778202","modified":1624195525803},{"_id":"themes/next/LICENSE.md","hash":"8cfb03967dd4cbaf3b825271ffce0039aa3fc22a","modified":1624195525800},{"_id":"themes/next/package.json","hash":"145b933d58ad7a0310f2138e985e097f361b9597","modified":1624195525868},{"_id":"themes/next/README.md","hash":"43fe29330352545446a532e6630866251129882a","modified":1624195525801},{"_id":"themes/next/renovate.json","hash":"767b077c7b615e20af3cf865813cd64674a9bea6","modified":1624195525869},{"_id":"themes/next/crowdin.yml","hash":"4a53f5985e545c635cb56b2a57ed290cb8cf8942","modified":1624195525804},{"_id":"themes/next/languages/README.md","hash":"b1c96465b3bc139bf5ba6200974b66581d8ff85a","modified":1624195525812},{"_id":"themes/next/main.yml","hash":"9eae6ce20854257c7185191db4fe465e87e77947","modified":1624195525868},{"_id":"themes/next/languages/ar.yml","hash":"cc7e3e2855348563d746f15c4752b9c63fcdd91a","modified":1624195525812},{"_id":"themes/next/languages/de.yml","hash":"83023c4246b93a2f89f342afe29a7b9e1185f74f","modified":1624195525813},{"_id":"themes/next/languages/en.yml","hash":"66445143decfbb5eb7031eb370698e31d5222a7a","modified":1624195525814},{"_id":"themes/next/languages/es.yml","hash":"07955d78028cea2a590c63fdc2c01ca3ee05a727","modified":1624195525814},{"_id":"themes/next/languages/default.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1624195525813},{"_id":"themes/next/languages/fa.yml","hash":"e09fad889ab3ae87874093e1acd51edc9297d869","modified":1624195525815},{"_id":"themes/next/languages/id.yml","hash":"d7c337ca72efb0bd02ade8b5560c559384ad84dd","modified":1624195525816},{"_id":"themes/next/languages/fr.yml","hash":"328c255c82e9b561e20a9f51a4d84abc63d1b90a","modified":1624195525816},{"_id":"themes/next/languages/it.yml","hash":"c038ff0cadbe405750d980bcacfd3900acf96905","modified":1624195525817},{"_id":"themes/next/languages/ja.yml","hash":"57a35b21aca04ce8bca64fb5933f35626c462ea3","modified":1624195525817},{"_id":"themes/next/languages/ko.yml","hash":"d6e2add7488065ec4f7d21cfcf7f0eaa877a84f4","modified":1624195525818},{"_id":"themes/next/languages/nl.yml","hash":"e47858bd1e0d0622c15366ae6c0513d996f589e3","modified":1624195525818},{"_id":"themes/next/languages/pt-BR.yml","hash":"305025e932832328b7e2a8a584638a23c462e68f","modified":1624195525819},{"_id":"themes/next/languages/pt.yml","hash":"ff93459250c33d3c7ba06c30164cc4208edf9b33","modified":1624195525820},{"_id":"themes/next/languages/ru.yml","hash":"7d13108f4a70ff6a162508a49678e4a477fa7b56","modified":1624195525821},{"_id":"themes/next/languages/tr.yml","hash":"59507ba6ae0cb7ef5685043d341841c73d427c04","modified":1624195525822},{"_id":"themes/next/languages/si.yml","hash":"40512abdf7b5b4dcb45030c1fb4cba72ccf5cbfc","modified":1624195525821},{"_id":"themes/next/languages/uk.yml","hash":"f32871f67c63d26bc4e3e15df9b01f5a41236a50","modified":1624195525823},{"_id":"themes/next/languages/vi.yml","hash":"e452ea8c48993262a3e8fce9d92072cafabfc734","modified":1624195525823},{"_id":"themes/next/languages/zh-CN.yml","hash":"8c670f8398524aa34d49bacd04ab08b8f37b76ae","modified":1624205142141},{"_id":"themes/next/languages/zh-HK.yml","hash":"c1ee97ceb56da76ecdc7b69fa975f28c8574441b","modified":1624195525825},{"_id":"themes/next/languages/zh-TW.yml","hash":"70c45076ad722b777956048fcc430eac37844c11","modified":1624195525826},{"_id":"themes/next/layout/_layout.njk","hash":"077ad70bea6fac69b4737a99740751aac133602d","modified":1624195525827},{"_id":"themes/next/docs/AGPL3.md","hash":"f463f95b169d64983f59fa6f3e4b6760290a0e6b","modified":1624195525805},{"_id":"themes/next/layout/archive.njk","hash":"aa491dba8f746e626c273a920effedf7d0b32170","modified":1624195525864},{"_id":"themes/next/layout/category.njk","hash":"c243c94abe62ec1e7da73067ac2db147f9a42416","modified":1624195525865},{"_id":"themes/next/docs/LICENSE.txt","hash":"d1cd5a8e83d3bbdb50f902d2b487813da95ddfd3","modified":1624195525807},{"_id":"themes/next/docs/AUTHORS.md","hash":"579014d47f45b27fd1618b9709f0efe9585c7449","modified":1624195525806},{"_id":"themes/next/layout/index.njk","hash":"92db3756ad46718a0cbb0d2bda02218bd865a63d","modified":1624195525865},{"_id":"themes/next/layout/page.njk","hash":"5fd0c362019eac987e17954dc85287b682195c76","modified":1624195525866},{"_id":"themes/next/layout/post.njk","hash":"707a50e50b90df5fbeaf8407d12895d04163a290","modified":1624195525867},{"_id":"themes/next/layout/tag.njk","hash":"64148c8f6b623391433595ae691ff64d7941d8af","modified":1624195525867},{"_id":"themes/next/test/index.js","hash":"983a505399796b9d9e174ba46d89abbdde38f8ee","modified":1624195526040},{"_id":"themes/next/docs/ru/README.md","hash":"e1d6bf38cf34972ca2ee5331a727787fe14082a3","modified":1624195525809},{"_id":"themes/next/layout/_macro/post-collapse.njk","hash":"d9d8e6d7a6a8c80009dd5334cc17fd3e4977a008","modified":1624195525828},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"7befb4325b107dd668d9eae3d7e86a34910ce3f2","modified":1624195525810},{"_id":"themes/next/layout/_macro/post.njk","hash":"e81c2c9f6f7c8c1395b6dd3ff67ed424a1c62394","modified":1624195525828},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"c1ba78b246349f79adcf06a940961bba8a8350cb","modified":1624195525810},{"_id":"themes/next/docs/zh-CN/README.md","hash":"354b0b0a24cbe97cccf2ec8bd97eb7d624fa0dea","modified":1624195525811},{"_id":"themes/next/layout/_macro/sidebar.njk","hash":"eec74e135d01948361020140c3798769e1e7363b","modified":1624195525828},{"_id":"themes/next/layout/_partials/comments.njk","hash":"26ff22211075c9d8ed286ddd889c71a43bad0525","modified":1624195525830},{"_id":"themes/next/layout/_partials/footer.njk","hash":"cdca32c5c8e5ddc74930ae6ba085df539cf63f2e","modified":1624195525830},{"_id":"themes/next/layout/_partials/languages.njk","hash":"537026fc120adeef9148c98ebf074207e3810538","modified":1624195525835},{"_id":"themes/next/layout/_partials/pagination.njk","hash":"2de77d533c91532a8a4052000244d0c1693370df","modified":1624195525838},{"_id":"themes/next/layout/_partials/widgets.njk","hash":"967594ee64805e27b7ff9d957e23ab3f5c948600","modified":1624195525845},{"_id":"themes/next/layout/_scripts/index.njk","hash":"d257b540f1f3ebb36042e0d0562ad7877e38f78a","modified":1624195525846},{"_id":"themes/next/layout/_scripts/vendors.njk","hash":"0a1470440f11362df2b1cd6b6228e273d9f999d6","modified":1624195525847},{"_id":"themes/next/layout/_third-party/index.njk","hash":"36ab0ca7b44b28e91a63332a512ba310fed18fd0","modified":1624195525856},{"_id":"themes/next/layout/_third-party/nprogress.njk","hash":"709a20d09bc30cf3184e4c10a590e755cd8960f5","modified":1624195525858},{"_id":"themes/next/layout/_third-party/quicklink.njk","hash":"73bc15a9c3c5c239ab90efa19a1e721f41f3cb93","modified":1624195525859},{"_id":"themes/next/layout/_third-party/rating.njk","hash":"d0444179fec512760ab1d4f76928d795b971c884","modified":1624195525859},{"_id":"themes/next/scripts/events/index.js","hash":"fb3feea03bacd679bccc1ec0a1ddeede5d2703df","modified":1624195525870},{"_id":"themes/next/scripts/filters/default-injects.js","hash":"0c9a1fe9906672724dbf274154a37bac1915ca2c","modified":1624195525878},{"_id":"themes/next/scripts/filters/locals.js","hash":"bc72911802afd6717adb0cb6605bef74712a04b1","modified":1624195525879},{"_id":"themes/next/scripts/filters/minify.js","hash":"571ecbafdd8c2f50e9f56fcad94466014525d343","modified":1624195525879},{"_id":"themes/next/scripts/filters/post.js","hash":"4666e8e040c4689fbdef15dfc1275ad62e0828e3","modified":1624195525880},{"_id":"themes/next/scripts/tags/button.js","hash":"86c71c73a63744efbbbb367612871fede0d69529","modified":1624195525884},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"b4d12e6fe29089be0f43bafc9eea736602cd16bf","modified":1624195525885},{"_id":"themes/next/scripts/tags/caniuse.js","hash":"8e912c715702addaf0cefe63e580e45b97ae8c3f","modified":1624195525885},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"4cf2002bcd5a6851aea68e9a1971e6399f5c3ed2","modified":1624195525886},{"_id":"themes/next/scripts/tags/index.js","hash":"255dd1090e8319b557eeca43571f0e4f8aab013b","modified":1624195525886},{"_id":"themes/next/scripts/tags/link-grid.js","hash":"3f358bb78c5c6fdf45de287f3ead553e3a6a93c2","modified":1624195525887},{"_id":"themes/next/scripts/tags/mermaid.js","hash":"b3844e168b51a99d495ca05562ffac47677f5728","modified":1624195525888},{"_id":"themes/next/scripts/tags/note.js","hash":"a12fd53e421400836a3722ae69130969558d6ac0","modified":1624195525888},{"_id":"themes/next/scripts/tags/pdf.js","hash":"317ba4611020cc840854386dde098dbbe452777e","modified":1624195525889},{"_id":"themes/next/scripts/tags/label.js","hash":"c18b0e619a779ed40be7f014db92af18f45fbd5c","modified":1624195525887},{"_id":"themes/next/scripts/tags/tabs.js","hash":"e0ed5fe1bc9d2957952a1aacdf3252d6ef3f9743","modified":1624195525889},{"_id":"themes/next/scripts/tags/video.js","hash":"f6ad3f52779f0636251238d3cbdc5b6f91cc5aba","modified":1624195525890},{"_id":"themes/next/scripts/helpers/engine.js","hash":"e58e1418215b2e6b218ed62efd5606a13f975ebe","modified":1624195525881},{"_id":"themes/next/scripts/helpers/font.js","hash":"0a6fa582a0890ecaf5f03f758a730936e48aeca1","modified":1624195525881},{"_id":"themes/next/scripts/helpers/next-config.js","hash":"a08ed43b0542e764c49c3948569d4d97077a6f9f","modified":1624195525882},{"_id":"themes/next/scripts/helpers/next-url.js","hash":"98fc68cf3fcd6253bbb94068ab1d86578a4ef9ea","modified":1624195525883},{"_id":"themes/next/scripts/helpers/next-vendors.js","hash":"52acbc74c1ead8a77cd3bbcba4e033053683f7d0","modified":1624195525883},{"_id":"themes/next/source/css/_colors.styl","hash":"f3368760774a02969bca9f99a97b5650be7daa88","modified":1624195525891},{"_id":"themes/next/source/css/_mixins.styl","hash":"ad47594c5f625f1cc9d6f839bd8a7ad5b090c6cb","modified":1624195525926},{"_id":"themes/next/source/css/main.styl","hash":"38b8a12681a3a04bed02aa1659054912ed6def11","modified":1624195525939},{"_id":"themes/next/source/css/noscript.styl","hash":"7dc97674c232f6ca71e48b95e3f66472cd8e9c05","modified":1624195525940},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1624195525940},{"_id":"themes/next/source/images/avatar.gif","hash":"2dbc3e2f2d624b2ca1afe6edc2ca17307f1950c8","modified":1624195525941},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"38478fb29a229a444b9b9e0ebf3a2fd5d943e476","modified":1624195525943},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"29bf23bccef6fc85ceafe721dd394bc287770495","modified":1624195525942},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"7cf99976f1162a385c2a85eca3a43ce928d4d60e","modified":1624195525943},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"b796fa30ced3ddb228af19955fe6491b81f0ccc8","modified":1624195525944},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"c2e9d5ac5d93f63398357016df7a0ba0483aad75","modified":1624195525945},{"_id":"themes/next/source/images/cc-by.svg","hash":"a003f30369698b2a2f45d8c460d2956fb6d1eb15","modified":1624195525946},{"_id":"themes/next/source/images/cc-zero.svg","hash":"bccb103bb13e990db9b0487bb72abaa3d2b09960","modified":1624195525947},{"_id":"themes/next/source/images/favicon-16x16-next1.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1624195525948},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"2bf7b1347e81ade507a8e2f919ed004f214ab1ca","modified":1624195525947},{"_id":"themes/next/source/images/favicon-32x32-next1.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1624195525948},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"7c3faed7ee21178b50143703822103810743e4ed","modified":1624195525948},{"_id":"themes/next/source/images/logo.svg","hash":"2cb74fd3ea2635e015eabc58a8d488aed6cf6417","modified":1624195525949},{"_id":"themes/next/source/images/logo-algolia-nebula-blue-full.svg","hash":"b85e274207b1392782476a0430feac98db1e7da0","modified":1624195525948},{"_id":"themes/next/source/js/comments.js","hash":"0b4daf0ce610760bd52e95d423f61f3e1c72442a","modified":1624195525966},{"_id":"themes/next/source/js/config.js","hash":"90095bbfe106772bd1f8b5598f111591907388b4","modified":1624195525966},{"_id":"themes/next/source/js/motion.js","hash":"20b979ebe3671cb415e6e7171485d65cc347086e","modified":1624195525966},{"_id":"themes/next/source/js/next-boot.js","hash":"97fbec4d18dcd1fa3960c56df1cd774c1e019b48","modified":1624195525967},{"_id":"themes/next/source/js/comments-buttons.js","hash":"81ea6cbcdf0357094753d7523919c1eafa38e79f","modified":1624195525965},{"_id":"themes/next/source/js/bookmark.js","hash":"e808854cb650f5cd8b4ed97f41df122328b5bf08","modified":1624195525964},{"_id":"themes/next/source/js/utils.js","hash":"da4290680aef45f0804bedc3d3b46f999ead1b94","modified":1624195525983},{"_id":"themes/next/source/js/pjax.js","hash":"113196655a1629908af320c90c7d21bc247726cd","modified":1624195525968},{"_id":"themes/next/source/js/schedule.js","hash":"2d461e93f8802463941eff5c2b05ae4a4e38ae24","modified":1624195525968},{"_id":"themes/next/test/tags/button.js","hash":"a50ca44eaec3d91c2958e3157d624cd3e68828c7","modified":1624195526040},{"_id":"themes/next/test/tags/center-quote.js","hash":"2ac4b5a358681691a17e736de06fce0b640a7023","modified":1624195526041},{"_id":"themes/next/test/tags/caniuse.js","hash":"2852be850d9103c25114253a45e6c62e32517de4","modified":1624195526041},{"_id":"themes/next/test/tags/index.js","hash":"5cad001936a694bf32d59751cc2b68a66199f976","modified":1624195526042},{"_id":"themes/next/test/tags/label.js","hash":"6cad7d84c42511459a89cda3971e8ea5cdee0125","modified":1624195526043},{"_id":"themes/next/test/tags/group-pictures.js","hash":"d7eb1d4402bf96485e69d5944db6aef8f10c8097","modified":1624195526042},{"_id":"themes/next/test/tags/mermaid.js","hash":"f718a3d0e303d842e2ca5a3b162539a49e45a520","modified":1624195526044},{"_id":"themes/next/test/tags/link-grid.js","hash":"41730266306c02362258384cd73659223928361f","modified":1624195526044},{"_id":"themes/next/test/tags/pdf.js","hash":"2d114596a8a180b2f3cd2a9c6528a328961f12d4","modified":1624195526045},{"_id":"themes/next/test/tags/note.js","hash":"161a81ce749e239d2403681372d48ecc1b51d7b9","modified":1624195526045},{"_id":"themes/next/test/tags/tabs.js","hash":"b19d2592347eae5d6a7a97ca7e8cec03e8f25b51","modified":1624195526045},{"_id":"themes/next/test/helpers/index.js","hash":"2fb58dca3df2fe53116ee2b1232fa26ebe7b2ce5","modified":1624195526039},{"_id":"themes/next/test/helpers/font.js","hash":"6f5076bd3f2724e47b46ca69028393a9b6275cd1","modified":1624195526038},{"_id":"themes/next/test/tags/video.js","hash":"88db9a3a26cd35525c43c0339fcd1c5965ec9518","modified":1624195526046},{"_id":"themes/next/layout/_partials/head/head-unique.njk","hash":"2de62b14511cd96f5698695159a43ec94b3c42cf","modified":1624195525831},{"_id":"themes/next/test/helpers/next-url.js","hash":"08e84781f1cd54e5634b86877ad9cefae4a78e95","modified":1624195526039},{"_id":"themes/next/layout/_partials/head/head.njk","hash":"e20950425e51d78d3740ad399e2e5359e3806617","modified":1624195525831},{"_id":"themes/next/test/validate/index.js","hash":"560862194991c5963da5a411629d8e6c71d20ee2","modified":1624195526047},{"_id":"themes/next/layout/_partials/header/brand.njk","hash":"5d02ca876f25038c9f9e1d789c6ebae9ef71ae00","modified":1624195525832},{"_id":"themes/next/layout/_partials/header/index.njk","hash":"2f550b53372ec150c2538f216399995b8c003a21","modified":1624195525832},{"_id":"themes/next/layout/_partials/header/menu-item.njk","hash":"f066390762faf6684a523e2eb943420023aac2b1","modified":1624195525833},{"_id":"themes/next/layout/_partials/header/menu.njk","hash":"cb841a7a5db322dacd18c23074be300460aa6353","modified":1624195525834},{"_id":"themes/next/layout/_partials/header/sub-menu.njk","hash":"940cad08a67e6c361214045096bd3cdffdf44fcf","modified":1624195525835},{"_id":"themes/next/layout/_partials/page/breadcrumb.njk","hash":"9c136edd2248e2d50c1f6110b75e2b75c299bbd7","modified":1624195525836},{"_id":"themes/next/layout/_partials/page/categories.njk","hash":"b352346dd2cb42f7eeaec5e39d9a2a353b029775","modified":1624195525836},{"_id":"themes/next/layout/_partials/page/page-header.njk","hash":"92553feb26f30f7fc9147bc4ef122908a9da06be","modified":1624195525837},{"_id":"themes/next/layout/_partials/page/schedule.njk","hash":"130e776575d634201d4f8ef3d78dc12624f19fde","modified":1624195525837},{"_id":"themes/next/layout/_partials/page/tags.njk","hash":"752df7d12360a077c51a25609916a3ecc1763bb3","modified":1624195525838},{"_id":"themes/next/layout/_partials/post/post-copyright.njk","hash":"0ebc0142abebbeef4278e32abb543c7d7fa75d88","modified":1624195525839},{"_id":"themes/next/layout/_partials/post/post-followme.njk","hash":"ebf83083856f8bd81ad47ffb985d44e338b4e6bb","modified":1624195525840},{"_id":"themes/next/layout/_partials/post/post-footer.njk","hash":"ce712c110b5ce8aacba7a86b0558ff89700675c9","modified":1624195525840},{"_id":"themes/next/layout/_partials/post/post-meta.njk","hash":"5ca644f912fe71ee2bb7c0b8dd328e59faafc20b","modified":1624195525841},{"_id":"themes/next/layout/_partials/post/post-related.njk","hash":"bc7b047a6246df07767373644b1637d91c3a88b1","modified":1624195525841},{"_id":"themes/next/layout/_partials/post/post-reward.njk","hash":"6c80003141c9fe5f7621ba9eff12d15e1361db67","modified":1624195525842},{"_id":"themes/next/layout/_partials/search/algolia-search.njk","hash":"93fbb449fbd599cb4315d7eb0daeb239811b233f","modified":1624195525843},{"_id":"themes/next/layout/_partials/search/index.njk","hash":"9766852e72c1809d8c1eea71ac6116b4cc0886d2","modified":1624195525843},{"_id":"themes/next/layout/_partials/search/localsearch.njk","hash":"f73d25a8ccfdd5d4ca2953dc434ff8ce36034c57","modified":1624195525843},{"_id":"themes/next/layout/_partials/sidebar/site-overview.njk","hash":"14bdca97aca2065703546dde47a715f0c51320bc","modified":1624195525844},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.njk","hash":"3e80332f88b101141be69f2a07f54ed8c053eabb","modified":1624195525848},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.njk","hash":"52ad137450f7b3d6a330e16b3ed1c6174290f0eb","modified":1624195525849},{"_id":"themes/next/layout/_third-party/analytics/cloudflare.njk","hash":"c7cea42f6db2137c11ca1d83e43fcb7ad7ccfb89","modified":1624195525849},{"_id":"themes/next/layout/_third-party/analytics/growingio.njk","hash":"9ff9ec05c2037beea229a6bb698f9e3546973220","modified":1624195525850},{"_id":"themes/next/layout/_third-party/analytics/index.njk","hash":"465fcffd4216f8ca0ea2613fe9cf7308f71b9da5","modified":1624195525850},{"_id":"themes/next/layout/_third-party/chat/chatra.njk","hash":"d7e10e3eff03a27b3bdb76295958fa3477e0d2f3","modified":1624195525851},{"_id":"themes/next/layout/_third-party/chat/tidio.njk","hash":"fb94ee487d75e484e59b7fba96e989f699ff8a83","modified":1624195525852},{"_id":"themes/next/layout/_third-party/comments/changyan.njk","hash":"5f7967bd946060f4102263a552ddfbae9975e7ea","modified":1624195525853},{"_id":"themes/next/layout/_third-party/comments/disqus.njk","hash":"b0828dd1b1fd66ecd612d9e886a08e7579e9a4f7","modified":1624195525853},{"_id":"themes/next/layout/_third-party/comments/disqusjs.njk","hash":"c5086b4c35f730f82c99c4a8317f2f153ebde869","modified":1624195525853},{"_id":"themes/next/layout/_third-party/comments/gitalk.njk","hash":"6fd4df5c21cfe530dbb0c012bc0b202f2c362b9c","modified":1624195525854},{"_id":"themes/next/layout/_third-party/comments/isso.njk","hash":"38badcc7624a13961381c2465478056b9602aee5","modified":1624195525854},{"_id":"themes/next/layout/_third-party/comments/livere.njk","hash":"b8e0d5de584cece5e05b03db5b86145aa1e422b4","modified":1624195525855},{"_id":"themes/next/layout/_third-party/comments/utterances.njk","hash":"a7921be7328e1509d33b435175f5333a9aada66f","modified":1624195525856},{"_id":"themes/next/layout/_third-party/math/katex.njk","hash":"a84db8bc8804335f95609a221ac1746433dcdc89","modified":1624195525857},{"_id":"themes/next/layout/_third-party/math/index.njk","hash":"1856c4b035c5b8e64300a11af0461b519dfc4cf4","modified":1624195525857},{"_id":"themes/next/layout/_third-party/math/mathjax.njk","hash":"a62aa1ed4e35b8d0451d83f341bf0a97538bc9a4","modified":1624195525858},{"_id":"themes/next/layout/_third-party/search/algolia-search.njk","hash":"67f67a77f27103177b9940446f43610229536d82","modified":1624195525860},{"_id":"themes/next/layout/_third-party/search/localsearch.njk","hash":"d128b35536bfc68582b87de3984c870c503313ad","modified":1624195525860},{"_id":"themes/next/layout/_third-party/statistics/busuanzi-counter.njk","hash":"d97790e4b442a1e3ded7d7b4f84b8ee6cdb6e8ea","modified":1624195525861},{"_id":"themes/next/layout/_third-party/statistics/firestore.njk","hash":"af5336e8bbdc4638435971da115bb7443d374ade","modified":1624195525861},{"_id":"themes/next/layout/_third-party/statistics/index.njk","hash":"866ffa15a3250678eb8a90aa6f609fa965db90fd","modified":1624195525863},{"_id":"themes/next/layout/_third-party/statistics/lean-analytics.njk","hash":"8703d1855bb8d251c9b7c2940b7e3be525e53000","modified":1624195525863},{"_id":"themes/next/layout/_third-party/tags/mermaid.njk","hash":"dd8f963acd5a3685be46fd5319c06df0308d99b2","modified":1624195525864},{"_id":"themes/next/layout/_third-party/tags/pdf.njk","hash":"0386c708975cc5faea4f782611c5d2c6b8ac2850","modified":1624195525864},{"_id":"themes/next/scripts/events/lib/config.js","hash":"f67199585cab3ff632d3974181b592fbd112b278","modified":1624195525870},{"_id":"themes/next/scripts/events/lib/highlight.js","hash":"00cec6980cafd417def885f496371856cd524a25","modified":1624195525871},{"_id":"themes/next/scripts/events/lib/injects.js","hash":"a150d57c6373a7cac7a18606d127173ee3d71884","modified":1624195525871},{"_id":"themes/next/scripts/events/lib/utils.js","hash":"8508e96a5f883a5a57d8c1b8b5ea438fa29aafd3","modified":1624195525872},{"_id":"themes/next/scripts/events/lib/vendors.js","hash":"d617d53d9d4561a8c665bc01b4527ac71143a12d","modified":1624195525873},{"_id":"themes/next/scripts/filters/comment/changyan.js","hash":"8ad312021c5e24452ee3f57df4857b057214e205","modified":1624195525874},{"_id":"themes/next/scripts/filters/comment/common.js","hash":"713056d33dbcd8e9748205c5680b456c21174f4e","modified":1624195525874},{"_id":"themes/next/scripts/filters/comment/disqus.js","hash":"307e9c0a1593c52c6fe8a3044984f3b7b1e076fc","modified":1624195525876},{"_id":"themes/next/scripts/filters/comment/default-config.js","hash":"1cb58aa6b88f7461c3c3f9605273686adcc30979","modified":1624195525875},{"_id":"themes/next/scripts/filters/comment/disqusjs.js","hash":"c0b6653584456704ae1628248eb8bce27bb1ec4f","modified":1624195525876},{"_id":"themes/next/scripts/filters/comment/gitalk.js","hash":"e1471b538885a73ba74e943b0598d68989e8e265","modified":1624195525876},{"_id":"themes/next/scripts/filters/comment/isso.js","hash":"c22cbccd7d514947e084eeac6a3af1aa41ec857a","modified":1624195525877},{"_id":"themes/next/scripts/filters/comment/utterances.js","hash":"a50718c081685fd35ff8ea9ca13682c284399ed8","modified":1624195525878},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"c4537fa2de33d98baff2c87a73801770414e0b69","modified":1624195525937},{"_id":"themes/next/scripts/filters/comment/livere.js","hash":"4739364a127cc982993b530e9f2c3dc9d930ce4d","modified":1624195525878},{"_id":"themes/next/source/css/_variables/base.styl","hash":"8e4fa8b2bc30a87f972b0648f70db2ea32dc128a","modified":1624195525939},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"d3a8f6e71c86926d0c2a247a31d7446d829736d5","modified":1624195525938},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"58014a2d087c4126058a99b5b1cb7d8a2eb6224d","modified":1624195525939},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"ee5024be8e39605f0c6d71db038e15e0693d0f41","modified":1624195525938},{"_id":"themes/next/source/js/schemes/muse.js","hash":"7ecaf3d5d0896fec7b6e37d98acfba40442634d0","modified":1624195525969},{"_id":"themes/next/source/js/third-party/nprogress.js","hash":"a6b74d8fc5551dbaa1ac9de907d23a4e1bb5f5c6","modified":1624195525977},{"_id":"themes/next/source/js/third-party/quicklink.js","hash":"539c5bb51244f7f4aa98884f3229d128c1cefc40","modified":1624195525978},{"_id":"themes/next/source/js/third-party/rating.js","hash":"f9373aed6c3f8e4460028953a11e274047134d44","modified":1624195525978},{"_id":"themes/next/source/lib/pace/LICENSE","hash":"336611e76f0638d3d8aeca6b1b97138d2a07523f","modified":1624195525984},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1624195525984},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1624195525985},{"_id":"themes/next/source/lib/pace/README.md","hash":"6f22149ab4cd861d653970591c81670625aa1fdc","modified":1624195525984},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1624195525985},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1624195525986},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1624195525986},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1624195525987},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1624195525988},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1624195525987},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1624195525988},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1624195525988},{"_id":"themes/next/source/lib/pace/pace-theme-flat-top.min.css","hash":"544f038c983e2be5f7fc04ce6615f7b70e4554fe","modified":1624195525989},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1624195525990},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1624195525989},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1624195525991},{"_id":"themes/next/source/lib/pjax/.eslintignore","hash":"72a528c49453bc417123c12a5482f9a3dec8e1a5","modified":1624195525993},{"_id":"themes/next/source/lib/pjax/.editorconfig","hash":"8c81c4efc1ebde69b4c084c370c29071af62ed2f","modified":1624195525993},{"_id":"themes/next/source/lib/pace/pace-theme-material.min.css","hash":"131747a1e6982312ae3777998a99763b684d3290","modified":1624195525990},{"_id":"themes/next/source/lib/pjax/.eslintrc.json","hash":"37eb8287500c9f2d4e1b887bec1c7636791a31dc","modified":1624195525994},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"8aaa675f577d5501f5f22d5ccb07c2b76310b690","modified":1624195525991},{"_id":"themes/next/source/lib/pjax/.prettierignore","hash":"72a528c49453bc417123c12a5482f9a3dec8e1a5","modified":1624195525995},{"_id":"themes/next/source/lib/pjax/.gitignore","hash":"37a0d5efc8a1eaa132681e1c2bf9f68333c2fbff","modified":1624195525995},{"_id":"themes/next/source/lib/pjax/.travis.yml","hash":"a8afaf403ef826c018803df13ed5a36943320983","modified":1624195525996},{"_id":"themes/next/source/lib/pjax/CHANGELOG.md","hash":"c6bec1421c73c2b33eb0f2974566351968eac342","modified":1624195525997},{"_id":"themes/next/source/lib/pjax/LICENSE","hash":"2c7168814d9d35ea9500809b0904962f511eb4a8","modified":1624195525998},{"_id":"themes/next/source/lib/pjax/index.d.ts","hash":"c452cd6e990eeeea10f7dbf17fefbc6845585bf6","modified":1624195526003},{"_id":"themes/next/source/lib/pjax/README.md","hash":"f3f023db70ec08d0e8602e091c9aee621978a23d","modified":1624195525998},{"_id":"themes/next/source/lib/pjax/index.js","hash":"e6fc3fb4501520bae1505c5d95214d3318810c2d","modified":1624195526004},{"_id":"themes/next/source/lib/pjax/package.json","hash":"c3670a3576aa4bc6d0818edda3723e034b647e52","modified":1624195526016},{"_id":"themes/next/source/lib/reading_progress/.gitignore","hash":"09cde1060b4213a7eee528b54560777d2d3756e8","modified":1624195526034},{"_id":"themes/next/source/lib/reading_progress/.editorconfig","hash":"b1fd3a1cdad8120ed818833be00ea9b9cab2845a","modified":1624195526033},{"_id":"themes/next/source/lib/reading_progress/LICENSE","hash":"336611e76f0638d3d8aeca6b1b97138d2a07523f","modified":1624195526034},{"_id":"themes/next/source/lib/pjax/pjax.js","hash":"39b3063839a090bf3224c0c4776ffcedf2faf327","modified":1624195526016},{"_id":"themes/next/source/lib/pjax/pjax.min.js","hash":"68d0c6ad28f042c78fc18a6e9d782a7047c01905","modified":1624195526017},{"_id":"themes/next/source/lib/reading_progress/reading_progress.min.js","hash":"b768dc009e6d37dd952632c317f6c33e6e2d89ad","modified":1624195526037},{"_id":"themes/next/source/lib/reading_progress/reading_progress.js","hash":"3b5cb40d2b53b282920f7fe7e206570462c1c72a","modified":1624195526036},{"_id":"themes/next/source/lib/reading_progress/package.json","hash":"53749d03cd219c405800134219a52b97a2a80576","modified":1624195526036},{"_id":"themes/next/source/lib/reading_progress/README.md","hash":"2c2ef6cb8e7fb916b0518b7dc60f0db0143ba742","modified":1624195526035},{"_id":"themes/next/source/lib/reading_progress/renovate.json","hash":"767b077c7b615e20af3cf865813cd64674a9bea6","modified":1624195526037},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"ad044edaf6d3d9402559129841061e3eaea173cb","modified":1624195525892},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"4f692c9d937bb82e6067ee3b9350d32f452c2567","modified":1624195525892},{"_id":"themes/next/source/css/_common/components/index.styl","hash":"5ec6081092feda51fdfd0bd91d9e3730100331c0","modified":1624195525893},{"_id":"themes/next/source/css/_common/components/reading-progress.styl","hash":"bddb49e62134d1321629755ff6b96f0044569cc0","modified":1624195525901},{"_id":"themes/next/source/css/_common/outline/index.styl","hash":"b39a58d63606be5076bbbb2d9e20300a5dcfcde2","modified":1624195525910},{"_id":"themes/next/source/css/_common/scaffolding/buttons.styl","hash":"f768ecb2fe3e9384777c1c115cd7409e9155edd7","modified":1624195525917},{"_id":"themes/next/source/css/_common/scaffolding/comments.styl","hash":"cf8446f4378dcab27b55ede1635c608ae6b8a5c8","modified":1624195525918},{"_id":"themes/next/source/css/_common/outline/mobile.styl","hash":"fef59a95584be575e17617d138d351b71de1b52e","modified":1624195525910},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"36cea5ab33eddbceaed7bbc2bba25df72604a137","modified":1624195525916},{"_id":"themes/next/source/css/_common/scaffolding/index.styl","hash":"43045d115f8fe95732c446aa45bf1c97609ff2a5","modified":1624195525919},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"6d740699fb6a7640647a8fd77c4ea4992d8d6437","modified":1624195525919},{"_id":"themes/next/source/css/_common/scaffolding/pagination.styl","hash":"3caa80aa2aba30f2e1b58b39de23ed5c8c55184e","modified":1624195525920},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"b9388016f8d9274703e77e306a1feaad1b7b9d6c","modified":1624195525920},{"_id":"themes/next/source/css/_common/scaffolding/toggles.styl","hash":"90f7d3baab061e860172b536c9edc38c7fd2ef5c","modified":1624195525926},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"f51b6a4f06359ed56b2d10caa6f15362d3b3751d","modified":1624195525927},{"_id":"themes/next/source/css/_schemes/Muse/_header.styl","hash":"fd89988442f380cba907752fe3f608e3498f8c93","modified":1624195525931},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"018b6a761e197086174c9f06b4d5ea21cc230951","modified":1624195525932},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"28030c61288cc0e1321b18373a5c79029fd76a53","modified":1624195525932},{"_id":"themes/next/source/css/_schemes/Muse/_sub-menu.styl","hash":"2d3e05015796a790abd9d68957a5c698c0c9f9b6","modified":1624195525933},{"_id":"themes/next/source/css/_schemes/Muse/_sidebar.styl","hash":"134272cb8096156c9e32fbbe085394633c7509cd","modified":1624195525932},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"25c2a7930da14f023329df20f38df2728057fb4d","modified":1624195525933},{"_id":"themes/next/source/css/_schemes/Mist/_layout.styl","hash":"00366a6bd1a66f99f845c5ebfc9e8cf56651b815","modified":1624195525929},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"b1054313ca9419e76fea0451417c881616f50a38","modified":1624195525928},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"f337981f8f20944ed366694aea88146c7b0a13ab","modified":1624195525930},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"89bf3f6b82cb0fafbbd483431df8f450857c5a0b","modified":1624195525931},{"_id":"themes/next/source/css/_schemes/Pisces/_header.styl","hash":"6f87f78f90bac7e5275948cb21632ba99d3e5928","modified":1624195525934},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"9f60d501808f67d151af437221d0dfacc27c180c","modified":1624195525934},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expand.styl","hash":"c9a9e07b721bb2376e24753ae0a9452431439114","modified":1624195525930},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"56201e3963e8696c917b56c234bf3a193f4eb56d","modified":1624195525935},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"1d29eca70fa686d895f8e98a283e4a159e40905a","modified":1624195525935},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"b5c3dd08c520a16ee49f85fa12b4935e725ef261","modified":1624195525936},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"7905f428b46d100ac5928875cb1e2b99fa86fc0b","modified":1624195525936},{"_id":"themes/next/source/js/third-party/analytics/baidu-analytics.js","hash":"f9579a02599de063ccff336177ba964a2931a6e9","modified":1624195525970},{"_id":"themes/next/source/js/third-party/analytics/growingio.js","hash":"f755e8537ccbbb0bd84c26923f320d4e206e7428","modified":1624195525972},{"_id":"themes/next/source/js/third-party/comments/disqusjs.js","hash":"1c282d6c2151346d1f0aa95055d17abe77054ec9","modified":1624195525974},{"_id":"themes/next/source/js/third-party/analytics/google-analytics.js","hash":"d77d4934d959e7125128754b568f1d041c3fbfff","modified":1624195525971},{"_id":"themes/next/source/js/third-party/comments/changyan.js","hash":"de37091cba9acac5fdb9523d4971bb4906313555","modified":1624195525973},{"_id":"themes/next/source/js/third-party/comments/disqus.js","hash":"e5230826e345457b97d3b3f925e26d4b3896190a","modified":1624195525973},{"_id":"themes/next/source/js/third-party/comments/isso.js","hash":"b9b9fd2f0e098a123b34a4932da912a9485ffe6c","modified":1624195525975},{"_id":"themes/next/source/js/third-party/comments/livere.js","hash":"68892d74ef5fc308c6e7e6b4f190826d79f3055d","modified":1624195525975},{"_id":"themes/next/source/js/third-party/comments/gitalk.js","hash":"1e8509356fb027d948d118ab220d9631f4d482fa","modified":1624195525974},{"_id":"themes/next/source/js/third-party/comments/utterances.js","hash":"ec44d7f1c8b51b0aa3cccba099a78f3575ac828c","modified":1624195525976},{"_id":"themes/next/source/js/third-party/math/katex.js","hash":"5c63ec71458b4fe0cd98fd4a04e11c3746764f11","modified":1624195525976},{"_id":"themes/next/source/js/third-party/chat/chatra.js","hash":"bb3cbd27a3b0bc55622822332450572aa886930d","modified":1624195525972},{"_id":"themes/next/source/js/third-party/math/mathjax.js","hash":"cfab759ffbaf1c04d61988aecf14ad6747af6a06","modified":1624195525977},{"_id":"themes/next/source/js/third-party/statistics/firestore.js","hash":"a7c0bdb891d5939c42e935f3b20ef7e06488feae","modified":1624195525980},{"_id":"themes/next/source/js/third-party/search/local-search.js","hash":"45f41089a95defe406636ede46a84c96989bde9c","modified":1624195525980},{"_id":"themes/next/source/js/third-party/statistics/lean-analytics.js","hash":"e263c2a4ae5c0dd3fe963e68cc41966e00eeac3e","modified":1624195525981},{"_id":"themes/next/source/js/third-party/search/algolia-search.js","hash":"ea94731438d8c518d946601f8f46a65b92381fac","modified":1624195525979},{"_id":"themes/next/source/js/third-party/tags/pdf.js","hash":"e109c2d6828f527f0289d5fa3bb02fce63ee6d93","modified":1624195525982},{"_id":"themes/next/source/js/third-party/tags/mermaid.js","hash":"caf12dc551414583959fc3964e69c04d6b6eca2f","modified":1624195525982},{"_id":"themes/next/source/lib/pjax/example/example.js","hash":"4d9fea820f1a91590b0d49099e8a79d3984ba9bf","modified":1624195525999},{"_id":"themes/next/source/lib/pjax/example/page2.html","hash":"5396196c9179746716ef02833504b1172332243f","modified":1624195526001},{"_id":"themes/next/source/lib/pjax/example/forms.html","hash":"35769b826750d64ad649f93ee2272961d65a61c7","modified":1624195526000},{"_id":"themes/next/source/lib/pjax/lib/abort-request.js","hash":"a6eae74d5b80dccde2ee4485ee427aca39dbe66b","modified":1624195526005},{"_id":"themes/next/source/lib/pjax/example/page3.html","hash":"703e2d34011c3d8918ba811ead26f1734d4d74fb","modified":1624195526002},{"_id":"themes/next/source/lib/pjax/example/index.html","hash":"1cc0a16040597669b26e8a7168a620520c98f4a1","modified":1624195526000},{"_id":"themes/next/source/lib/pjax/lib/execute-scripts.js","hash":"b16da782b37eb0538ac267f4ec4d478e79e96fa6","modified":1624195526007},{"_id":"themes/next/source/lib/pjax/lib/eval-script.js","hash":"773d5fddaad11e76df9354f3cf8078f26ad760ff","modified":1624195526005},{"_id":"themes/next/source/lib/pjax/lib/foreach-els.js","hash":"95df8390d94be89f23f50e2acbde8e08a6264096","modified":1624195526007},{"_id":"themes/next/source/lib/pjax/lib/foreach-selectors.js","hash":"e79ce0bccb20e9245605ae7b2d7dc35fa4213c45","modified":1624195526008},{"_id":"themes/next/source/lib/pjax/lib/parse-options.js","hash":"0b29aa13306a0462d5c6ba0761acd75e65bb1691","modified":1624195526009},{"_id":"themes/next/source/lib/pjax/lib/is-supported.js","hash":"dea4eb52b70fd285ba3df161b51496d30677d9e9","modified":1624195526009},{"_id":"themes/next/source/lib/pjax/lib/send-request.js","hash":"ca86271d363eecd1abc854bf03491130101b427d","modified":1624195526012},{"_id":"themes/next/source/lib/pjax/lib/uniqueid.js","hash":"643336dc475999234b7843b1e7b38c60a48041bc","modified":1624195526013},{"_id":"themes/next/source/lib/pjax/tests/setup.js","hash":"de561f5d8212d10ae79188b294c94264e6f96386","modified":1624195526031},{"_id":"themes/next/source/lib/pjax/lib/switches-selectors.js","hash":"1348fec349076f4ccf72bb6f01999988764bdafd","modified":1624195526012},{"_id":"themes/next/source/lib/pjax/lib/switches.js","hash":"29ea82638d566d41dc6562873fb3d58310ca34d0","modified":1624195526013},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"fde10ce94e9ae21a03b60d41d532835b54abdcb1","modified":1624195525894},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"80595d274f593b321c0b644a06f3165fe07b16f5","modified":1624195525894},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"091b8c763e43447d087c122a86538f290f83136a","modified":1624195525895},{"_id":"themes/next/source/lib/pjax/tests/test.ts","hash":"5fc54ab37b36965037b2476e62adbc684cdd5537","modified":1624195526032},{"_id":"themes/next/source/css/_common/components/pages/tag-cloud.styl","hash":"56d719bcdcba3d725141c55bbd4b168f3942f912","modified":1624195525895},{"_id":"themes/next/source/css/_common/components/post/post-body.styl","hash":"d8bbe8571b9032b544d84430420a29247235fad8","modified":1624195525896},{"_id":"themes/next/source/css/_common/components/post/index.styl","hash":"942943c7d5ea06b99d4e084aeb0ec2476f8586b6","modified":1624195525896},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"eebe3013a9a976011570dce2d04dfeae4c31d790","modified":1624195525897},{"_id":"themes/next/source/css/_common/components/pages/index.styl","hash":"6cf78a379bb656cc0abb4ab80fcae60152ce41ad","modified":1624195525895},{"_id":"themes/next/source/css/_common/components/post/post-followme.styl","hash":"b49e233cddd82804f58ebd772fcd3fc8bad24f3b","modified":1624195525897},{"_id":"themes/next/source/css/_common/components/post/post-footer.styl","hash":"e53a5eb1d1771e284044bdb0bc0ed2de27923669","modified":1624195525898},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"69dff7cf231d01f85671758455726dd666664a73","modified":1624195525899},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"c34936a17c3d8af6c0988ac6746d7509dc0b50eb","modified":1624195525899},{"_id":"themes/next/source/css/_common/components/post/post-header.styl","hash":"a90077eeca0a3c4887a534ddc625817dc7a51546","modified":1624195525899},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"249bfa5449f590367ce8592fa37bf10c4186891c","modified":1624195525900},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"b266d2ce5e2b117be01537889e839a69004dc0bb","modified":1624195525901},{"_id":"themes/next/source/css/_common/components/third-party/gitalk.styl","hash":"f067696465a5f812dcc178b4e294794445a59e67","modified":1624195525903},{"_id":"themes/next/source/css/_common/components/third-party/math.styl","hash":"033b8beefc9f4ac7f08ee309d4ce9039ddd7b542","modified":1624195525904},{"_id":"themes/next/source/css/_common/components/third-party/index.styl","hash":"6d46ac9b2260291bd562f181e5ea63821ae1af37","modified":1624195525903},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"fe0f1edf277b0cd23a8a4635cb0f476d165c17b7","modified":1624195525904},{"_id":"themes/next/source/css/_common/components/third-party/search.styl","hash":"f6bd6c941f76394b43bfa883613729940587213c","modified":1624195525904},{"_id":"themes/next/source/css/_common/components/third-party/utterances.styl","hash":"aa3543cfb412130ec392a58e60fc39723cbdfbc6","modified":1624195525904},{"_id":"themes/next/source/css/_common/outline/header/bookmark.styl","hash":"a2333025b130945b22094c2f9d854ab2485de0dc","modified":1624195525906},{"_id":"themes/next/source/css/_common/outline/header/index.styl","hash":"46567765e0617189e09893ce017db01526bf3d2c","modified":1624195525907},{"_id":"themes/next/source/css/_common/outline/header/site-meta.styl","hash":"aa1de16f693dd6aa66adc5728cce112f0b6fbe38","modified":1624195525909},{"_id":"themes/next/source/css/_common/outline/header/menu.styl","hash":"2db695204d39e4c7daa7b91585a0ea4b06b49f11","modified":1624195525908},{"_id":"themes/next/source/css/_common/outline/header/github-banner.styl","hash":"d4d2a828868056e69812e7f76d7c4f9ba47f74b2","modified":1624195525906},{"_id":"themes/next/source/css/_common/outline/header/site-nav.styl","hash":"d9bc2b520636b9df7f946295cd430593df4118ff","modified":1624195525909},{"_id":"themes/next/source/css/_common/outline/footer/index.styl","hash":"e9b54085452539ba59d5066616e7fc999105d087","modified":1624195525905},{"_id":"themes/next/source/css/_common/outline/sidebar/index.styl","hash":"3ba2aa924171875212434fb1e93932538d826df6","modified":1624195525911},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-button.styl","hash":"0ff44ba9cec150aa204dd0b8c006b663f562dd8d","modified":1624195525914},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author-links.styl","hash":"2c2bfbc34b6f19d262ae7c041474985e12f4f4ad","modified":1624195525911},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author.styl","hash":"d8a028f532d562e6a86bb3b9c7b992e4b6dbbb51","modified":1624195525912},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-dimmer.styl","hash":"57ed6770535ecb2e6485a0c87d4de6d6476368b9","modified":1624195525914},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-blogroll.styl","hash":"1c324d56ae83e96db2c4c6d63edd7ee51c936fc1","modified":1624195525913},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toc.styl","hash":"4ecadcc8b8b162a02175e9fa33cbdea376c39d6a","modified":1624195525915},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-nav.styl","hash":"1c3d0b9c58cf6b9b09232ef749f036b1360a98c5","modified":1624195525914},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toggle.styl","hash":"782b06aad720a6225776a0c72e4a8b04633606ae","modified":1624195525915},{"_id":"themes/next/source/css/_common/outline/sidebar/site-state.styl","hash":"195cfc10c3093054c601310f989119cbcfad01f6","modified":1624195525916},{"_id":"themes/next/source/css/_common/scaffolding/highlight/copy-code.styl","hash":"a4003e1408844568cb5102a5a111046cb19b2d31","modified":1624195525918},{"_id":"themes/next/source/css/_common/scaffolding/highlight/index.styl","hash":"b9ee15cb65f36e7286e051f9bb60014a357abaaf","modified":1624195525919},{"_id":"themes/next/source/css/_common/scaffolding/tags/blockquote-center.styl","hash":"899fed183460e4648f1ffc5fab16909c70c022b7","modified":1624195525921},{"_id":"themes/next/source/css/_common/scaffolding/tags/group-pictures.styl","hash":"8d9218980e185210ce034e9769ab639b9630fd88","modified":1624195525921},{"_id":"themes/next/source/css/_common/scaffolding/tags/label.styl","hash":"531daf2612c6217950677a2d03924459ce57c291","modified":1624195525922},{"_id":"themes/next/source/css/_common/scaffolding/tags/index.styl","hash":"25c639ea7fccc2982459e07ac9ceb8f1224c307d","modified":1624195525922},{"_id":"themes/next/source/css/_common/scaffolding/tags/mermaid.styl","hash":"fd5af9b40afc126fea71d569b50b1fcfec8328a8","modified":1624195525923},{"_id":"themes/next/source/css/_common/scaffolding/tags/link-grid.styl","hash":"a366545c8d0ddfdb8ea648dd95ed221ab927fbe6","modified":1624195525923},{"_id":"themes/next/source/css/_common/scaffolding/tags/note.styl","hash":"97a4b9cf8e4d5bd0b52e5cac28635649335cfa5e","modified":1624195525924},{"_id":"themes/next/source/css/_common/scaffolding/tags/pdf.styl","hash":"03a5bcecc0b12231462ef6ffe432fa77ee71beff","modified":1624195525925},{"_id":"themes/next/source/css/_common/scaffolding/tags/tabs.styl","hash":"afc2801dbfaed3004f29c3fc9bd56c0477793f64","modified":1624195525925},{"_id":"themes/next/source/lib/pjax/lib/events/off.js","hash":"edc5309f813bc323a0f470836d763aa54d996042","modified":1624195526006},{"_id":"themes/next/source/lib/pjax/lib/events/on.js","hash":"c8d6059a8117c61e64e10e65a977e6d82b866af8","modified":1624195526006},{"_id":"themes/next/source/lib/pjax/lib/proto/log.js","hash":"a61b7223e6af70a075bb7c6c5f6ebfa4adbc5f31","modified":1624195526011},{"_id":"themes/next/source/lib/pjax/lib/proto/attach-form.js","hash":"65db8791b8914ab29f2bad44202d2ee20cfaac1f","modified":1624195526010},{"_id":"themes/next/source/lib/pjax/lib/events/trigger.js","hash":"1e8b098cc0ff96a964fe90595bcf65b7d6ca1792","modified":1624195526007},{"_id":"themes/next/source/lib/pjax/lib/proto/attach-link.js","hash":"de0d6d91ecb8650e0cb49dc40470233c4bab57e9","modified":1624195526010},{"_id":"themes/next/source/lib/pjax/lib/proto/parse-element.js","hash":"fa128f4b896c22c48c748b41cd6886ac7325a2d4","modified":1624195526011},{"_id":"themes/next/source/lib/pjax/lib/util/clone.js","hash":"862544f772345622927de6a4bcb27e4ef18aec3e","modified":1624195526014},{"_id":"themes/next/source/lib/pjax/lib/util/contains.js","hash":"77fd6688fb2c1818d9b35f17b6d3b6a70cc492f7","modified":1624195526014},{"_id":"themes/next/source/lib/pjax/lib/proto/handle-response.js","hash":"43bff3061ccc910c86247735c6059ff489310a81","modified":1624195526011},{"_id":"themes/next/source/lib/pjax/lib/util/extend.js","hash":"bfd842a1c6b091b9a231652cc9aa4b59bcc4ea6f","modified":1624195526015},{"_id":"themes/next/source/lib/pjax/lib/util/noop.js","hash":"674eb07958489875f1d449b7864511f6bc70ee45","modified":1624195526015},{"_id":"themes/next/source/lib/pjax/lib/util/update-query-string.js","hash":"d505d78906844c180503c63767083d599bfbbfa8","modified":1624195526015},{"_id":"themes/next/source/lib/pjax/tests/lib/abort-request.js","hash":"edb7512db755a13b963510914152b53aaf490e40","modified":1624195526018},{"_id":"themes/next/source/lib/pjax/tests/lib/eval-scripts.js","hash":"3a11fd9978ccc4c5b5ca91699a55336633173d33","modified":1624195526019},{"_id":"themes/next/source/lib/pjax/tests/lib/events.js","hash":"6c4e2b245605bf78d84fcd596034680f6e483dee","modified":1624195526019},{"_id":"themes/next/source/lib/pjax/tests/lib/execute-scripts.js","hash":"2419bf5111e717b720643dbf5f89e49f301b4ac0","modified":1624195526019},{"_id":"themes/next/source/lib/pjax/tests/lib/foreach-selectors.js","hash":"2ca80242a94d2aab40fd0e25d91a6db4991802ce","modified":1624195526020},{"_id":"themes/next/source/lib/pjax/tests/lib/is-supported.js","hash":"19f819a9508f4ce2ce11ad8f27979fa84d7a2a52","modified":1624195526020},{"_id":"themes/next/source/lib/pjax/tests/lib/foreach-els.js","hash":"a94e48ceede2b4543e82f74ed0f2b2da3fb8357f","modified":1624195526020},{"_id":"themes/next/source/lib/pjax/tests/lib/parse-options.js","hash":"65baba099b1074521287a10f5ff3f4e99cf8f8ee","modified":1624195526021},{"_id":"themes/next/source/lib/pjax/tests/lib/send-request.js","hash":"b8fd6112a0d908c0f4c64ec898578bedbd23ed70","modified":1624195526025},{"_id":"themes/next/source/lib/pjax/tests/lib/uniqueid.js","hash":"e0bc8cf01dcc15eb72a856c4f0734f02790e3275","modified":1624195526028},{"_id":"themes/next/source/lib/pjax/tests/lib/switch-selectors.js","hash":"b3f170dd24a1d4a9aefbb5cdfbaad16dfafa6c80","modified":1624195526027},{"_id":"themes/next/source/lib/pjax/tests/lib/switches.js","hash":"0274886c7f0985da381c234a3ddca510e1a8cc0f","modified":1624195526027},{"_id":"themes/next/source/lib/pjax/tests/lib/proto/attach-form.js","hash":"93675412f1c9e4008ab5c64edcb9a08b549bb477","modified":1624195526022},{"_id":"themes/next/source/lib/pjax/tests/lib/proto/attach-link.js","hash":"9b1b047dc1d1d3d114540438511afcedb5b86528","modified":1624195526022},{"_id":"themes/next/source/lib/pjax/tests/lib/util/clone.js","hash":"306d6430ddcddf7c67c1d76ed784036713cd86a1","modified":1624195526029},{"_id":"themes/next/source/lib/pjax/tests/lib/util/noop.js","hash":"ed2fb792fe378b9b92cf7854a3e395fc6eec21bf","modified":1624195526030},{"_id":"themes/next/source/lib/pjax/tests/lib/proto/handle-response.js","hash":"1dbbfa86a360c1109fc1153bea363cfd57d05afe","modified":1624195526023},{"_id":"themes/next/source/lib/pjax/tests/lib/util/contains.js","hash":"c8b155c78944368f37715f9631115769ea1f645b","modified":1624195526029},{"_id":"themes/next/source/lib/pjax/tests/lib/util/extend.js","hash":"f46afc9bf5c2ebe3766ffeb0ee638ac610e70332","modified":1624195526030},{"_id":"themes/next/source/lib/pjax/tests/lib/proto/parse-element.js","hash":"942486a70ec1f582f456834df4f22effa2603a87","modified":1624195526023},{"_id":"themes/next/source/lib/pjax/tests/lib/util/update-query-string.js","hash":"ffd39a45f445e2f2d20593415ef31280bff7dfdd","modified":1624195526031},{"_id":"themes/next/source/images/tx.png","hash":"013fead8a1763debf7bf8bd5a1c1f2c42efb0683","modified":1624195525950},{"_id":"themes/next/source/images/yourbackground.png","hash":"f3458660ee7342f5246d2fc9a05ea72494335dc9","modified":1624195525963},{"_id":"public/search.xml","hash":"baa895adb30d2e2d903a0ed9a127dc8a24766c76","modified":1635735318051},{"_id":"public/css/injector/light.css","hash":"ee8f634eb15712c15c6f2fa0f0e3245e54fe4639","modified":1635735318051},{"_id":"public/css/injector/dark.css","hash":"f1d6a3afa54fc44c451ea6fc44e1202df150335d","modified":1635735318051},{"_id":"public/js/injector.js","hash":"bf2e6de21727aaaaf57944d2e61bb350a7ef91e4","modified":1635735318051},{"_id":"public/about/index.html","hash":"11bba183947daaf840486d864ea203794eb43a78","modified":1635735318051},{"_id":"public/tags/index.html","hash":"3d013fa7296d3b9010d770e70ccef4eea10a163e","modified":1635735318051},{"_id":"public/categories/index.html","hash":"44efe9f3b993831aa76de7332c446fb7ade9b759","modified":1635735318051},{"_id":"public/archives/index.html","hash":"b5a56e8b65a4d1d4e3c8a6c620810081429351ef","modified":1635735318051},{"_id":"public/archives/2021/index.html","hash":"dd4078822c4cee06db83534bc7aa27354bddcdaa","modified":1635735318051},{"_id":"public/archives/2021/05/index.html","hash":"cfd0f3ea651d047f11d95110db194ab44682b4b0","modified":1635735318051},{"_id":"public/archives/2021/06/index.html","hash":"be05efb24af490eacda590730a1422eee594b737","modified":1635735318051},{"_id":"public/archives/2021/10/index.html","hash":"c08a0079d28feb8ace26ef0aa0c63d6dbe634a49","modified":1635735318051},{"_id":"public/categories/Java/index.html","hash":"f35182b303c73fe838a67b1148c653e6d336aff0","modified":1635735318051},{"_id":"public/categories/前端/index.html","hash":"a68945b55a303306609c9ab8775a2b0fcdec4126","modified":1635735318051},{"_id":"public/tags/Java/index.html","hash":"bbb735137a50b67e534d9c413d52674389fef2ac","modified":1635735318051},{"_id":"public/tags/异常/index.html","hash":"2fba3cb5fd83fcacfc3d9e0cbbcc9a450c889299","modified":1635735318051},{"_id":"public/tags/POI/index.html","hash":"32c991a06572b1f43ec73b211224b46f676889fa","modified":1635735318051},{"_id":"public/tags/css/index.html","hash":"656fde0e3eae56575ef7cdb7d69471a46143fd28","modified":1635735318051},{"_id":"public/tags/滚动条/index.html","hash":"29e84695979e87e09eb3ca50eb7cbe49a9336872","modified":1635735318051},{"_id":"public/archives/55014.html","hash":"40de37a3e7e494230cf83e54b0897163c5bad80b","modified":1635735353845},{"_id":"public/archives/45192.html","hash":"854551605f3cc75d76192ca298473649cbd2023c","modified":1635735353845},{"_id":"public/archives/8599.html","hash":"ffa0b923f2bcee88bdd77c97a9f0da770a675580","modified":1635735353845},{"_id":"public/index.html","hash":"0267528ea65f37b1cae30f206f3f0607c753ec37","modified":1635735353845},{"_id":"public/images/cc-by-nc-nd.svg","hash":"29bf23bccef6fc85ceafe721dd394bc287770495","modified":1635735318051},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1635735318051},{"_id":"public/images/avatar.gif","hash":"2dbc3e2f2d624b2ca1afe6edc2ca17307f1950c8","modified":1635735318051},{"_id":"public/images/cc-by-nc.svg","hash":"7cf99976f1162a385c2a85eca3a43ce928d4d60e","modified":1635735318051},{"_id":"public/images/cc-by-sa.svg","hash":"c2e9d5ac5d93f63398357016df7a0ba0483aad75","modified":1635735318051},{"_id":"public/images/cc-by-nc-sa.svg","hash":"38478fb29a229a444b9b9e0ebf3a2fd5d943e476","modified":1635735318051},{"_id":"public/images/cc-by.svg","hash":"a003f30369698b2a2f45d8c460d2956fb6d1eb15","modified":1635735318051},{"_id":"public/images/cc-by-nd.svg","hash":"b796fa30ced3ddb228af19955fe6491b81f0ccc8","modified":1635735318051},{"_id":"public/images/cc-zero.svg","hash":"bccb103bb13e990db9b0487bb72abaa3d2b09960","modified":1635735318051},{"_id":"public/images/favicon-16x16-next1.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1635735318051},{"_id":"public/images/favicon-32x32-next.png","hash":"7c3faed7ee21178b50143703822103810743e4ed","modified":1635735318051},{"_id":"public/images/favicon-32x32-next1.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1635735318051},{"_id":"public/images/favicon-16x16-next.png","hash":"2bf7b1347e81ade507a8e2f919ed004f214ab1ca","modified":1635735318051},{"_id":"public/images/logo-algolia-nebula-blue-full.svg","hash":"b85e274207b1392782476a0430feac98db1e7da0","modified":1635735318051},{"_id":"public/images/logo.svg","hash":"2cb74fd3ea2635e015eabc58a8d488aed6cf6417","modified":1635735318051},{"_id":"public/lib/pace/LICENSE","hash":"336611e76f0638d3d8aeca6b1b97138d2a07523f","modified":1635735318051},{"_id":"public/lib/pjax/LICENSE","hash":"2c7168814d9d35ea9500809b0904962f511eb4a8","modified":1635735318051},{"_id":"public/lib/pjax/index.d.ts","hash":"c452cd6e990eeeea10f7dbf17fefbc6845585bf6","modified":1635735318051},{"_id":"public/lib/reading_progress/LICENSE","hash":"336611e76f0638d3d8aeca6b1b97138d2a07523f","modified":1635735318051},{"_id":"public/lib/pjax/tests/test.ts","hash":"5fc54ab37b36965037b2476e62adbc684cdd5537","modified":1635735318051},{"_id":"public/images/tx.png","hash":"013fead8a1763debf7bf8bd5a1c1f2c42efb0683","modified":1635735318051},{"_id":"public/lib/pace/README.html","hash":"b1db0e6c71c25fbdc5a161e1bd70382846ce99ab","modified":1635735318051},{"_id":"public/lib/pjax/CHANGELOG.html","hash":"1646dbdd1b80dcdb9b8704b1fcfe81345f5fcd6d","modified":1635735318051},{"_id":"public/lib/pjax/package.json","hash":"da55143475b12cb91a44aeb5a995c53879fe3326","modified":1635735318051},{"_id":"public/lib/reading_progress/README.html","hash":"af8a97cb3146ff6047f6deaa3e20cd583dc69259","modified":1635735318051},{"_id":"public/lib/reading_progress/package.json","hash":"8d6815f29afe52968881f536aee8d9267ba53bd2","modified":1635735318051},{"_id":"public/lib/reading_progress/renovate.json","hash":"94990e0ad04ce4a7c6f0ac3543318d9e02db1264","modified":1635735318051},{"_id":"public/lib/pjax/example/forms.html","hash":"aa62fc6e697e17e16a947eb0176dc24e2e42d72c","modified":1635735318051},{"_id":"public/lib/pjax/example/index.html","hash":"4a00b556253eeb11fc10013c8c3940a019154001","modified":1635735318051},{"_id":"public/lib/pjax/example/page2.html","hash":"7654e0a5a471bec5d74fb88d9f2f218817afdd52","modified":1635735318051},{"_id":"public/lib/pjax/example/page3.html","hash":"8d1d6a9afd80caf29e5b22f10a849b23a864a6a4","modified":1635735318051},{"_id":"public/js/bookmark.js","hash":"e45e1fbb7c6d645e9c410759486216e570d02bef","modified":1635735318051},{"_id":"public/js/comments-buttons.js","hash":"1a7344440321713426a0b2ab17e276b5bdf85ade","modified":1635735318051},{"_id":"public/js/config.js","hash":"7dad20378e907725e18007ddbad80b3366027240","modified":1635735318051},{"_id":"public/js/comments.js","hash":"66ae2e26ea36a41b72c638ea8b220296638ae952","modified":1635735318051},{"_id":"public/js/motion.js","hash":"6d4bd07a6f8e1b4083119dca0acb5b289533b619","modified":1635735318051},{"_id":"public/js/pjax.js","hash":"5bfc1cea214bd31847adc356f37df8e0b6a449df","modified":1635735318051},{"_id":"public/js/next-boot.js","hash":"873e52a851a6ce8dc61b870fa7083da4d2304b7b","modified":1635735318051},{"_id":"public/js/schedule.js","hash":"71d62fc3584c47ff2d4cc945226e412264399be9","modified":1635735318051},{"_id":"public/js/schemes/muse.js","hash":"9d15d0d6a58b1df74827288f117af22b4b6aafe5","modified":1635735318051},{"_id":"public/js/utils.js","hash":"24e161cc99ee401a47b7d125fecce51ab0566cdc","modified":1635735318051},{"_id":"public/js/third-party/nprogress.js","hash":"7d56b18a2bdece5468470c70c5f3eb79d4120964","modified":1635735318051},{"_id":"public/js/third-party/quicklink.js","hash":"6f58cd7aa8f6f1ab92d5a96551add293f4e55312","modified":1635735318051},{"_id":"public/js/third-party/rating.js","hash":"51a35e9ce91567bfc5efa31007ae694bfdfb68b5","modified":1635735318051},{"_id":"public/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1635735318051},{"_id":"public/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1635735318051},{"_id":"public/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1635735318051},{"_id":"public/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1635735318051},{"_id":"public/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1635735318051},{"_id":"public/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1635735318051},{"_id":"public/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1635735318051},{"_id":"public/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1635735318051},{"_id":"public/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1635735318051},{"_id":"public/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1635735318051},{"_id":"public/lib/pace/pace-theme-flat-top.min.css","hash":"5e1c97e232b46e48592a8e4983ae5a89e0a7da6a","modified":1635735318051},{"_id":"public/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1635735318051},{"_id":"public/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1635735318051},{"_id":"public/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1635735318051},{"_id":"public/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1635735318051},{"_id":"public/lib/pjax/index.js","hash":"4af61bcf253ce67d67bb0f524b441869301de9a5","modified":1635735318051},{"_id":"public/lib/reading_progress/reading_progress.js","hash":"ec68a79421cfba022ac53f46813d013dd48617c0","modified":1635735318051},{"_id":"public/lib/reading_progress/reading_progress.min.js","hash":"b768dc009e6d37dd952632c317f6c33e6e2d89ad","modified":1635735318051},{"_id":"public/js/third-party/analytics/baidu-analytics.js","hash":"f629acc46ff40c071ffd31b77d5c7616f0fdd778","modified":1635735318051},{"_id":"public/js/third-party/analytics/growingio.js","hash":"78dd3cf04082b7dbe6246e404b2aa8e726922402","modified":1635735318051},{"_id":"public/js/third-party/analytics/google-analytics.js","hash":"59684383385059dc4f8a1ff85dbbeb703bcdbcb5","modified":1635735318051},{"_id":"public/js/third-party/comments/changyan.js","hash":"6d9ca074f1df9e9527ec06c2963b1ad6079d821e","modified":1635735318051},{"_id":"public/js/third-party/comments/disqus.js","hash":"0da0ab95471cb73a5d467c5d1b4ce7893ace86fc","modified":1635735318051},{"_id":"public/js/third-party/comments/disqusjs.js","hash":"b6c58f098473b526d6a3cd35655caf34b77f7cff","modified":1635735318051},{"_id":"public/js/third-party/comments/gitalk.js","hash":"0ec038cf83e8ec067534f16a54041e47a3c1e59a","modified":1635735318051},{"_id":"public/js/third-party/comments/isso.js","hash":"753a873b6f566aff5ba77ca23f91b78eb880ca64","modified":1635735318051},{"_id":"public/js/third-party/comments/livere.js","hash":"2247d88c934c765c43013337860774aaa99f0b31","modified":1635735318051},{"_id":"public/js/third-party/comments/utterances.js","hash":"f67f90eb03e284c82da2b8cf2f1e31801813c16d","modified":1635735318051},{"_id":"public/js/third-party/math/katex.js","hash":"83c54ee536e487a1031783443fe0cb63b1b4767e","modified":1635735318051},{"_id":"public/js/third-party/chat/chatra.js","hash":"106f3f89f46ec96a08df5f14c31dca88a0b9b82f","modified":1635735318051},{"_id":"public/js/third-party/math/mathjax.js","hash":"87406572e6781c79146c217adc46f9199c952bbb","modified":1635735318051},{"_id":"public/js/third-party/statistics/firestore.js","hash":"e1194984b7b41ae232b57bd423c97f36bc7bdd61","modified":1635735318051},{"_id":"public/js/third-party/statistics/lean-analytics.js","hash":"34c1f2dbf5c3d4f6e9dad73addb22b648c2053c1","modified":1635735318051},{"_id":"public/js/third-party/search/algolia-search.js","hash":"ac401e3736d56a3c9cb85ab885744cce0b813c55","modified":1635735318051},{"_id":"public/js/third-party/search/local-search.js","hash":"b37f1b14aef2402d0c2d88f999ff0ce5ef6823c1","modified":1635735318051},{"_id":"public/js/third-party/tags/pdf.js","hash":"af78c22f0e61c8c8aa8794e585e0d632c6d4fcb8","modified":1635735318051},{"_id":"public/lib/pjax/example/example.js","hash":"48b27c93eb351d2fa91247c35038a9f1627e971a","modified":1635735318051},{"_id":"public/js/third-party/tags/mermaid.js","hash":"2847a80fa248c9341a049fab3205953460aedefd","modified":1635735318051},{"_id":"public/lib/pjax/lib/abort-request.js","hash":"cbae038c94f70163340801cb608f4e503640b88d","modified":1635735318051},{"_id":"public/lib/pjax/lib/eval-script.js","hash":"d5980b3c5f3c1a95427eab0d7d2263324fb72bca","modified":1635735318051},{"_id":"public/lib/pjax/lib/execute-scripts.js","hash":"8c7c18b14c11af7e2d8dd0146b7df428bf8149bb","modified":1635735318051},{"_id":"public/lib/pjax/lib/foreach-els.js","hash":"d8e50967878930891112f4acb46f47697ddc3ad7","modified":1635735318051},{"_id":"public/lib/pjax/lib/foreach-selectors.js","hash":"b11d36344a7a6aa36d533a335785772c9bfb6bc9","modified":1635735318051},{"_id":"public/lib/pjax/lib/parse-options.js","hash":"054a902e9f350f7414b80f62419da004dd90aa37","modified":1635735318051},{"_id":"public/lib/pjax/lib/send-request.js","hash":"15c341d066b0d60879ef3ca5ff858103381fb378","modified":1635735318051},{"_id":"public/css/noscript.css","hash":"cf9bf6c18b46fa565fd924a2da54677b4b8da8e0","modified":1635735318051},{"_id":"public/lib/pjax/lib/is-supported.js","hash":"62ede7268080ab7efddd64fced8b3e79af2901f6","modified":1635735318051},{"_id":"public/lib/pjax/lib/switches-selectors.js","hash":"f31b4af163db3d9a5b3bb7c7534a4a2dd5543435","modified":1635735318051},{"_id":"public/lib/pjax/lib/switches.js","hash":"4e283f667c10e0fea15e269f1c73ccb699979bb4","modified":1635735318051},{"_id":"public/lib/pjax/lib/uniqueid.js","hash":"eb127cf8936e5bdcaa7459cf5bd042ff96b5a387","modified":1635735318051},{"_id":"public/lib/pjax/tests/setup.js","hash":"4a9489e72cbe98527931d95d68b68e2d6a9bff6e","modified":1635735318051},{"_id":"public/lib/pjax/lib/events/off.js","hash":"79920b24246e150f1c73511f1a271b93b9c5d9c8","modified":1635735318051},{"_id":"public/lib/pjax/lib/events/on.js","hash":"111fba16cc4ca701aefedea2589c832b60af303d","modified":1635735318051},{"_id":"public/lib/pjax/lib/proto/attach-form.js","hash":"b41c66e58897e6371fbd04cd2b9eb7bae10e0d89","modified":1635735318051},{"_id":"public/lib/pjax/lib/events/trigger.js","hash":"c05ba73199c5e2c7682655491ed37743bd451751","modified":1635735318051},{"_id":"public/lib/pjax/lib/proto/attach-link.js","hash":"d15a61235aa8c1615e60ea34d9bbee834be804d0","modified":1635735318051},{"_id":"public/lib/pjax/lib/proto/log.js","hash":"c728730594aed7d81509787c5bb487af014415e1","modified":1635735318051},{"_id":"public/lib/pjax/lib/proto/parse-element.js","hash":"52bef8a845aab0d54907f73875fa58b4084019be","modified":1635735318051},{"_id":"public/lib/pjax/lib/proto/handle-response.js","hash":"f68bab958cce4dbbcb91920d7a8aba55b9066b41","modified":1635735318051},{"_id":"public/lib/pjax/lib/util/clone.js","hash":"55027b88e007818c6963205fcd0090a61af8237c","modified":1635735318051},{"_id":"public/lib/pjax/lib/util/contains.js","hash":"fcc9be0477d941b7c4ba71de328773e556ded7ce","modified":1635735318051},{"_id":"public/lib/pjax/lib/util/extend.js","hash":"e599aaef93e3a00ccbd92cd87df09898d712e398","modified":1635735318051},{"_id":"public/lib/pjax/lib/util/noop.js","hash":"2c9f7e231af1a62db195875ca62df7edc253c3c4","modified":1635735318051},{"_id":"public/lib/pjax/lib/util/update-query-string.js","hash":"eefcbff322f8c607865d47ee8fa49f1c8bfa8d7a","modified":1635735318051},{"_id":"public/lib/pjax/tests/lib/abort-request.js","hash":"96d7a604ca275455199bd94d16b9cdc254bee9b9","modified":1635735318051},{"_id":"public/lib/pjax/tests/lib/eval-scripts.js","hash":"3c9125a04cec9d511f16f9311656533ef6a115d1","modified":1635735318051},{"_id":"public/lib/pjax/tests/lib/execute-scripts.js","hash":"2d02a0151ead9924516cdae9308f8667b27a7ea7","modified":1635735318051},{"_id":"public/lib/pjax/tests/lib/events.js","hash":"70ca7ec140d1dcf8c4958e7b6788b09ef2b60181","modified":1635735318051},{"_id":"public/lib/pjax/tests/lib/foreach-selectors.js","hash":"898b48ef191719070488f16a54fba8a794b10057","modified":1635735318051},{"_id":"public/lib/pjax/tests/lib/foreach-els.js","hash":"85995dd27d0d866cfaf5c560732fab8b0099938c","modified":1635735318051},{"_id":"public/lib/pjax/tests/lib/is-supported.js","hash":"e25c7e69c8b7a64a44affcae317adb2b3889aee6","modified":1635735318051},{"_id":"public/lib/pjax/tests/lib/send-request.js","hash":"d6adad7f95754c53b9885c0999a5118995fdc76f","modified":1635735318051},{"_id":"public/lib/pjax/tests/lib/switch-selectors.js","hash":"993dd67b1b629288feb8d167fb12b602626cf1d5","modified":1635735318051},{"_id":"public/lib/pjax/tests/lib/uniqueid.js","hash":"430550f31b9e6356c2e3a033c1b418bd6acd9667","modified":1635735318051},{"_id":"public/lib/pjax/tests/lib/parse-options.js","hash":"45ab302da33e5457a71fd22bbd082e51f5b06b49","modified":1635735318051},{"_id":"public/lib/pjax/tests/lib/switches.js","hash":"f5dfdf57bafd2b4edd5f854d70837b5fe760756e","modified":1635735318051},{"_id":"public/lib/pjax/tests/lib/proto/attach-form.js","hash":"3614a962e3185b354a2e0d987bcecdef4a209da6","modified":1635735318051},{"_id":"public/lib/pjax/tests/lib/proto/attach-link.js","hash":"9d283cb0b09730e932673c73a3352a2d2e8939fa","modified":1635735318051},{"_id":"public/lib/pjax/tests/lib/proto/handle-response.js","hash":"26e0e334f0b20ff2fe75b3ab12a93ce44a5823f0","modified":1635735318051},{"_id":"public/lib/pjax/tests/lib/proto/parse-element.js","hash":"474edc8844028de67cbad054da79c05727620785","modified":1635735318051},{"_id":"public/lib/pjax/tests/lib/util/clone.js","hash":"4b0e62bd0f4eef3549b0da70987f63ce4953bef0","modified":1635735318051},{"_id":"public/lib/pjax/tests/lib/util/contains.js","hash":"bc0c8be855e9736cb256a2aa44fd46f3a7d1d6c5","modified":1635735318051},{"_id":"public/lib/pjax/tests/lib/util/noop.js","hash":"6959a4c02c41453a5edfa4163e36752fcfa3edf9","modified":1635735318051},{"_id":"public/lib/pjax/tests/lib/util/extend.js","hash":"d45488ff6f8e3e1b59a62d0c88c86b750fe50ed4","modified":1635735318051},{"_id":"public/lib/pjax/tests/lib/util/update-query-string.js","hash":"4158dcd877c5f229400417e0da22eb4c5b8e8e38","modified":1635735318051},{"_id":"public/lib/pjax/README.html","hash":"b00baa4b41400b5987274a6b26b096b995c63a51","modified":1635735318051},{"_id":"public/css/main.css","hash":"e296e8516080ec2b148b8e08a89297e55943270a","modified":1635735318051},{"_id":"public/lib/pace/pace-theme-material.min.css","hash":"f1ff83985c090f3a3236554c5ef69542dcceb049","modified":1635735318051},{"_id":"public/lib/pjax/pjax.min.js","hash":"68d0c6ad28f042c78fc18a6e9d782a7047c01905","modified":1635735318051},{"_id":"public/lib/pjax/pjax.js","hash":"e973e2c6ffb6f6d7b4a1730ba0ed6d3628b2b39f","modified":1635735318051},{"_id":"public/css/injector/main.css","hash":"529abf84d79b740f379288def58992f660d016b0","modified":1635735318051},{"_id":"public/images/yourbackground.png","hash":"f3458660ee7342f5246d2fc9a05ea72494335dc9","modified":1635735318051}],"Category":[{"name":"Java","_id":"ckvg2kqaz0004x0u17h59f0ml"},{"name":"前端","_id":"ckvg2kqb6000ax0u1em1r6ggw"}],"Data":[{"_id":"styles","data":"/* build time:Mon Nov 01 2021 10:55:19 GMT+0800 (中国标准时间)*/\n.sidebar{box-shadow:none;background:0 0}body{background:url(/images/yourbackground.png);background-repeat:no-repeat;background-attachment:fixed;background-size:cover;background-position:50% 50%}.back-to-top.back-to-top-on{display:none}\n/* rebuild by neat */"},{"_id":"variables","data":"/* build time:Mon Nov 01 2021 10:55:19 GMT+0800 (中国标准时间)*/\n\n/* rebuild by neat */"}],"Page":[{"title":"about","date":"2021-04-29T14:27:04.000Z","_content":"","source":"about/index.md","raw":"---\ntitle: about\ndate: 2021-04-29 22:27:04\n---\n","updated":"2021-06-20T13:25:25.792Z","path":"about/index.html","comments":1,"layout":"page","_id":"ckvg2kqao0000x0u1e00wdytj","content":"","site":{"data":{"styles":"/* build time:Mon Nov 01 2021 10:55:19 GMT+0800 (中国标准时间)*/\n.sidebar{box-shadow:none;background:0 0}body{background:url(/images/yourbackground.png);background-repeat:no-repeat;background-attachment:fixed;background-size:cover;background-position:50% 50%}.back-to-top.back-to-top-on{display:none}\n/* rebuild by neat */","variables":"/* build time:Mon Nov 01 2021 10:55:19 GMT+0800 (中国标准时间)*/\n\n/* rebuild by neat */"}},"length":0,"excerpt":"","more":""},{"title":"分类","date":"2014-12-22T04:39:04.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"title: 分类\ndate: 2014-12-22 12:39:04\ntype: \"categories\"\n---\n","updated":"2021-06-20T13:25:25.792Z","path":"categories/index.html","comments":1,"layout":"page","_id":"ckvg2kqax0002x0u10k029u97","content":"","site":{"data":{"styles":"/* build time:Mon Nov 01 2021 10:55:19 GMT+0800 (中国标准时间)*/\n.sidebar{box-shadow:none;background:0 0}body{background:url(/images/yourbackground.png);background-repeat:no-repeat;background-attachment:fixed;background-size:cover;background-position:50% 50%}.back-to-top.back-to-top-on{display:none}\n/* rebuild by neat */","variables":"/* build time:Mon Nov 01 2021 10:55:19 GMT+0800 (中国标准时间)*/\n\n/* rebuild by neat */"}},"length":0,"excerpt":"","more":""},{"title":"标签","date":"2014-12-22T04:39:04.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"title: 标签\ndate: 2014-12-22 12:39:04\ntype: \"tags\"\n---","updated":"2021-06-20T13:25:25.793Z","path":"tags/index.html","comments":1,"layout":"page","_id":"ckvg2kqb20006x0u1cce62ylo","content":"","site":{"data":{"styles":"/* build time:Mon Nov 01 2021 10:55:19 GMT+0800 (中国标准时间)*/\n.sidebar{box-shadow:none;background:0 0}body{background:url(/images/yourbackground.png);background-repeat:no-repeat;background-attachment:fixed;background-size:cover;background-position:50% 50%}.back-to-top.back-to-top-on{display:none}\n/* rebuild by neat */","variables":"/* build time:Mon Nov 01 2021 10:55:19 GMT+0800 (中国标准时间)*/\n\n/* rebuild by neat */"}},"length":0,"excerpt":"","more":""}],"Post":[{"title":"Java中的异常（Error与Exception）","description":"Java中的异常常见的异常分类与处理机制","abbrlink":45192,"date":"2021-06-20T06:59:06.000Z","_content":"# 简介\n程序在运行时，发生不被期望的事件，它影响程序的正常执行，这被称为异常。Java中拥有自己的异常处理机制，当异常发生时能够按照代码预设的处理逻辑，来减少异常对后续程序运行影响，尽可能保证程序正常的运行。这些异常有的是因为用户错误引起，有的是程序错误引起的，还有其它一些是因为物理错误引起的。\n\n# Java中的异常体系\n为万物皆对象的Java中，异常同样也是作为一个对象处理。Throwable 是 Java 语言中所有```错误（Error）```和```异常（Exception）```的超类。在 Java 中只有 Throwable 类型的实例才可以被```抛出（throw）```或者```捕获（catch）```，它是异常处理机制的基本组成类型。\n![](https://raw.githubusercontent.com/zhjAdm/ImageHosting/main/20210620155311.png)\n### 1.Error\n无法被程序所处理的错误。例如，Java 虚拟机运行错误（Virtual MachineError）、虚拟机内存不够错误(OutOfMemoryError)、类定义错误（NoClassDefFoundError）等 。这些异常发生时，Java 虚拟机（JVM）一般会选择线程终止。\n### 2.Exception\n程序本身可以处理的异常，可以通过```catch```捕获。 ```Exception```又分为```受检查异常```(必须处理) 和```不受检查异常```(可以不处理)。\n##### 受检查异常\nJava代码在编译的过程中，如果没有被```try/catch```包围处理的话，就不会被编译通过。除了```RuntimeException```及其子类以外，其他的```Exception```类及其子类都属于受检查异常 。常见的受检查异常有： ```IO 相关的异常```、```ClassNotFoundException``` 、```SQLException```等等。\n##### 不受检查异常\nJava中即使我们不做处理同样可以编译通过。```RuntimeException```git及其子类都统称为非受检查异常，例如：```NullPointerException```、```NumberFormatException```（字符串转换为数字）、```ArrayIndexOutOfBoundsException```（数组越界）、```ClassCastException```（类型转换错误）、```ArithmeticException```（算术错误）等等。\n### 3.try-catch-finally\n```try```块：用于包裹可能发生异常的代码，用来捕获异常。后面通常跟着一个或者多个```catch```块，如果没有则必须有个```finally```块。\n```catch```块：用于异常发生时处理```try```捕获到的异常。\n```finally```块：无论是否会发生异常都会执行，当存在```return```语句时，```finally```里的语句在```return```之前被执行。当```finally```内存在```return```是，其他的```return```语句就不会被执行了。","source":"_posts/Java中的异常（Error与Exception）.md","raw":"---\ntitle: Java中的异常（Error与Exception）\ntags:\n  - Java\n  - 异常\ncategories: Java\ndescription: Java中的异常常见的异常分类与处理机制\nabbrlink: 45192\ndate: 2021-06-20 14:59:06\n---\n# 简介\n程序在运行时，发生不被期望的事件，它影响程序的正常执行，这被称为异常。Java中拥有自己的异常处理机制，当异常发生时能够按照代码预设的处理逻辑，来减少异常对后续程序运行影响，尽可能保证程序正常的运行。这些异常有的是因为用户错误引起，有的是程序错误引起的，还有其它一些是因为物理错误引起的。\n\n# Java中的异常体系\n为万物皆对象的Java中，异常同样也是作为一个对象处理。Throwable 是 Java 语言中所有```错误（Error）```和```异常（Exception）```的超类。在 Java 中只有 Throwable 类型的实例才可以被```抛出（throw）```或者```捕获（catch）```，它是异常处理机制的基本组成类型。\n![](https://raw.githubusercontent.com/zhjAdm/ImageHosting/main/20210620155311.png)\n### 1.Error\n无法被程序所处理的错误。例如，Java 虚拟机运行错误（Virtual MachineError）、虚拟机内存不够错误(OutOfMemoryError)、类定义错误（NoClassDefFoundError）等 。这些异常发生时，Java 虚拟机（JVM）一般会选择线程终止。\n### 2.Exception\n程序本身可以处理的异常，可以通过```catch```捕获。 ```Exception```又分为```受检查异常```(必须处理) 和```不受检查异常```(可以不处理)。\n##### 受检查异常\nJava代码在编译的过程中，如果没有被```try/catch```包围处理的话，就不会被编译通过。除了```RuntimeException```及其子类以外，其他的```Exception```类及其子类都属于受检查异常 。常见的受检查异常有： ```IO 相关的异常```、```ClassNotFoundException``` 、```SQLException```等等。\n##### 不受检查异常\nJava中即使我们不做处理同样可以编译通过。```RuntimeException```git及其子类都统称为非受检查异常，例如：```NullPointerException```、```NumberFormatException```（字符串转换为数字）、```ArrayIndexOutOfBoundsException```（数组越界）、```ClassCastException```（类型转换错误）、```ArithmeticException```（算术错误）等等。\n### 3.try-catch-finally\n```try```块：用于包裹可能发生异常的代码，用来捕获异常。后面通常跟着一个或者多个```catch```块，如果没有则必须有个```finally```块。\n```catch```块：用于异常发生时处理```try```捕获到的异常。\n```finally```块：无论是否会发生异常都会执行，当存在```return```语句时，```finally```里的语句在```return```之前被执行。当```finally```内存在```return```是，其他的```return```语句就不会被执行了。","slug":"Java中的异常（Error与Exception）","published":1,"updated":"2021-10-27T11:51:59.543Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckvg2kqar0001x0u114wd448x","content":"<h1 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h1><p>程序在运行时，发生不被期望的事件，它影响程序的正常执行，这被称为异常。Java中拥有自己的异常处理机制，当异常发生时能够按照代码预设的处理逻辑，来减少异常对后续程序运行影响，尽可能保证程序正常的运行。这些异常有的是因为用户错误引起，有的是程序错误引起的，还有其它一些是因为物理错误引起的。</p>\n<h1 id=\"Java中的异常体系\"><a href=\"#Java中的异常体系\" class=\"headerlink\" title=\"Java中的异常体系\"></a>Java中的异常体系</h1><p>为万物皆对象的Java中，异常同样也是作为一个对象处理。Throwable 是 Java 语言中所有<code>错误（Error）</code>和<code>异常（Exception）</code>的超类。在 Java 中只有 Throwable 类型的实例才可以被<code>抛出（throw）</code>或者<code>捕获（catch）</code>，它是异常处理机制的基本组成类型。<br><img src=\"https://raw.githubusercontent.com/zhjAdm/ImageHosting/main/20210620155311.png\"></p>\n<h3 id=\"1-Error\"><a href=\"#1-Error\" class=\"headerlink\" title=\"1.Error\"></a>1.Error</h3><p>无法被程序所处理的错误。例如，Java 虚拟机运行错误（Virtual MachineError）、虚拟机内存不够错误(OutOfMemoryError)、类定义错误（NoClassDefFoundError）等 。这些异常发生时，Java 虚拟机（JVM）一般会选择线程终止。</p>\n<h3 id=\"2-Exception\"><a href=\"#2-Exception\" class=\"headerlink\" title=\"2.Exception\"></a>2.Exception</h3><p>程序本身可以处理的异常，可以通过<code>catch</code>捕获。 <code>Exception</code>又分为<code>受检查异常</code>(必须处理) 和<code>不受检查异常</code>(可以不处理)。</p>\n<h5 id=\"受检查异常\"><a href=\"#受检查异常\" class=\"headerlink\" title=\"受检查异常\"></a>受检查异常</h5><p>Java代码在编译的过程中，如果没有被<code>try/catch</code>包围处理的话，就不会被编译通过。除了<code>RuntimeException</code>及其子类以外，其他的<code>Exception</code>类及其子类都属于受检查异常 。常见的受检查异常有： <code>IO 相关的异常</code>、<code>ClassNotFoundException</code> 、<code>SQLException</code>等等。</p>\n<h5 id=\"不受检查异常\"><a href=\"#不受检查异常\" class=\"headerlink\" title=\"不受检查异常\"></a>不受检查异常</h5><p>Java中即使我们不做处理同样可以编译通过。<code>RuntimeException</code>git及其子类都统称为非受检查异常，例如：<code>NullPointerException</code>、<code>NumberFormatException</code>（字符串转换为数字）、<code>ArrayIndexOutOfBoundsException</code>（数组越界）、<code>ClassCastException</code>（类型转换错误）、<code>ArithmeticException</code>（算术错误）等等。</p>\n<h3 id=\"3-try-catch-finally\"><a href=\"#3-try-catch-finally\" class=\"headerlink\" title=\"3.try-catch-finally\"></a>3.try-catch-finally</h3><p><code>try</code>块：用于包裹可能发生异常的代码，用来捕获异常。后面通常跟着一个或者多个<code>catch</code>块，如果没有则必须有个<code>finally</code>块。<br><code>catch</code>块：用于异常发生时处理<code>try</code>捕获到的异常。<br><code>finally</code>块：无论是否会发生异常都会执行，当存在<code>return</code>语句时，<code>finally</code>里的语句在<code>return</code>之前被执行。当<code>finally</code>内存在<code>return</code>是，其他的<code>return</code>语句就不会被执行了。</p>\n","site":{"data":{"styles":"/* build time:Mon Nov 01 2021 10:55:19 GMT+0800 (中国标准时间)*/\n.sidebar{box-shadow:none;background:0 0}body{background:url(/images/yourbackground.png);background-repeat:no-repeat;background-attachment:fixed;background-size:cover;background-position:50% 50%}.back-to-top.back-to-top-on{display:none}\n/* rebuild by neat */","variables":"/* build time:Mon Nov 01 2021 10:55:19 GMT+0800 (中国标准时间)*/\n\n/* rebuild by neat */"}},"length":1080,"excerpt":"","more":"<h1 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h1><p>程序在运行时，发生不被期望的事件，它影响程序的正常执行，这被称为异常。Java中拥有自己的异常处理机制，当异常发生时能够按照代码预设的处理逻辑，来减少异常对后续程序运行影响，尽可能保证程序正常的运行。这些异常有的是因为用户错误引起，有的是程序错误引起的，还有其它一些是因为物理错误引起的。</p>\n<h1 id=\"Java中的异常体系\"><a href=\"#Java中的异常体系\" class=\"headerlink\" title=\"Java中的异常体系\"></a>Java中的异常体系</h1><p>为万物皆对象的Java中，异常同样也是作为一个对象处理。Throwable 是 Java 语言中所有<code>错误（Error）</code>和<code>异常（Exception）</code>的超类。在 Java 中只有 Throwable 类型的实例才可以被<code>抛出（throw）</code>或者<code>捕获（catch）</code>，它是异常处理机制的基本组成类型。<br><img src=\"https://raw.githubusercontent.com/zhjAdm/ImageHosting/main/20210620155311.png\"></p>\n<h3 id=\"1-Error\"><a href=\"#1-Error\" class=\"headerlink\" title=\"1.Error\"></a>1.Error</h3><p>无法被程序所处理的错误。例如，Java 虚拟机运行错误（Virtual MachineError）、虚拟机内存不够错误(OutOfMemoryError)、类定义错误（NoClassDefFoundError）等 。这些异常发生时，Java 虚拟机（JVM）一般会选择线程终止。</p>\n<h3 id=\"2-Exception\"><a href=\"#2-Exception\" class=\"headerlink\" title=\"2.Exception\"></a>2.Exception</h3><p>程序本身可以处理的异常，可以通过<code>catch</code>捕获。 <code>Exception</code>又分为<code>受检查异常</code>(必须处理) 和<code>不受检查异常</code>(可以不处理)。</p>\n<h5 id=\"受检查异常\"><a href=\"#受检查异常\" class=\"headerlink\" title=\"受检查异常\"></a>受检查异常</h5><p>Java代码在编译的过程中，如果没有被<code>try/catch</code>包围处理的话，就不会被编译通过。除了<code>RuntimeException</code>及其子类以外，其他的<code>Exception</code>类及其子类都属于受检查异常 。常见的受检查异常有： <code>IO 相关的异常</code>、<code>ClassNotFoundException</code> 、<code>SQLException</code>等等。</p>\n<h5 id=\"不受检查异常\"><a href=\"#不受检查异常\" class=\"headerlink\" title=\"不受检查异常\"></a>不受检查异常</h5><p>Java中即使我们不做处理同样可以编译通过。<code>RuntimeException</code>git及其子类都统称为非受检查异常，例如：<code>NullPointerException</code>、<code>NumberFormatException</code>（字符串转换为数字）、<code>ArrayIndexOutOfBoundsException</code>（数组越界）、<code>ClassCastException</code>（类型转换错误）、<code>ArithmeticException</code>（算术错误）等等。</p>\n<h3 id=\"3-try-catch-finally\"><a href=\"#3-try-catch-finally\" class=\"headerlink\" title=\"3.try-catch-finally\"></a>3.try-catch-finally</h3><p><code>try</code>块：用于包裹可能发生异常的代码，用来捕获异常。后面通常跟着一个或者多个<code>catch</code>块，如果没有则必须有个<code>finally</code>块。<br><code>catch</code>块：用于异常发生时处理<code>try</code>捕获到的异常。<br><code>finally</code>块：无论是否会发生异常都会执行，当存在<code>return</code>语句时，<code>finally</code>里的语句在<code>return</code>之前被执行。当<code>finally</code>内存在<code>return</code>是，其他的<code>return</code>语句就不会被执行了。</p>\n"},{"title":"Java导出之Excel","abbrlink":55014,"date":"2021-10-22T14:33:06.000Z","description":"Java通过POI生成Excel并返回前台下载","_content":"# Java通过模板导出Excel\n## POI\nApache POI是Apache软件基金会的开放源码库，POI提供API给Java程序对Microsoft Office格式文件读和写的功能。\n## HSSF和XSSF\n针对不同版本的Excel，在POI中提供了HSSF和XSSF不同的包。\nHSSF  － 提供读写Microsoft Excel XLS格式档案的功能。\nXSSF  － 提供读写Microsoft Excel OOXML XLSX格式档案的功能。\n## 相关依赖\n``` \n\t\t<dependency>\n\t\t\t<groupId>org.apache.poi</groupId>\n\t\t\t<artifactId>poi</artifactId>\n\t\t\t<version>4.1.2</version>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>org.apache.poi</groupId>\n\t\t\t<artifactId>poi-ooxml</artifactId>\n\t\t\t<version>4.1.2</version>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>org.apache.poi</groupId>\n\t\t\t<artifactId>poi-ooxml-schemas</artifactId>\n\t\t\t<version>4.1.2</version>\n\t\t</dependency>\n```\n## 工具类\nwriteExcel()f方法根据模板生成Excel，writeToResponse()方法将生成的Excel写入response中返回前端下载。\n``` java\npublic class ExcelUtils {\n    private static final String REG = \"\\\\{([a-zA-Z_1-9]+)\\\\}\";// 匹配\"{exp}\"\n    private static final String REG_LIST = \"\\\\{\\\\.([a-zA-Z_1-9]+)\\\\}\";// 匹配\"{.exp}\"\n    private static final Pattern PATTERN = Pattern.compile(REG);\n    private static final Pattern PATTERN_LIST = Pattern.compile(REG_LIST);\n\n\n\n    private ExcelUtils() {\n    }\n\n    /**\n     * 根据模板生成Excel文件\n     *\n     * @param templateFilePath 模版文件路径\n     * @param context      表头或表尾数据集合\n     * @param dataList     列表\n     * @return\n     */\n    public static byte[] writeExcel(String templateFilePath, Map<String, Object> context,\n                                    List<?> dataList) {\n       // File templateFile = null;\n        ClassPathResource classPathResource = new ClassPathResource(templateFilePath);\n        InputStream inputStream = null;\n\n        try {\n            inputStream = classPathResource.getInputStream();\n        } catch (Exception e) {\n            e.printStackTrace();\n            throw new RuntimeException(\"获取模板失败!\", e);\n        }\n        try (HSSFWorkbook workbook = new HSSFWorkbook(inputStream)) {\n            Sheet sheet = workbook.getSheetAt(0);// 获取配置文件sheet 页\n            int listStartRowNum = -1;\n            for (int i = sheet.getFirstRowNum(); i <= sheet.getLastRowNum(); i++) {\n                Row row = sheet.getRow(i);\n                if (row != null) {\n                    for (int j = 0; j < row.getLastCellNum(); j++) {\n                        Cell cell = row.getCell(j);\n                        if (cell != null && cell.getCellType() == CellType.STRING) {\n                            String cellValue = cell.getStringCellValue();\n                            // 获取到列表数据所在行\n                            if (listStartRowNum == -1 && cellValue.matches(REG_LIST)) {\n                                listStartRowNum = i;\n                            }\n\n                            Object newValue = cellValue;\n                            Matcher matcher = PATTERN.matcher(cellValue);\n                            while (matcher.find()) {\n                                String replaceExp = matcher.group();// 匹配到的表达式\n                                String key = matcher.group(1);// 获取key\n                                Object replaceValue = context.get(key);\n                                if (replaceValue == null) {\n                                    replaceValue = \"\";\n                                }\n                                if (replaceExp.equals(cellValue)) {// 单元格是一个表达式\n                                    newValue = replaceValue;\n                                } else {// 以字符串替换\n                                    newValue = ((String) newValue).replace(replaceExp, replaceValue.toString());\n                                }\n                            }\n                            setCellValue(cell, newValue);\n\n                        }\n\n                    }\n\n                }\n            }\n            if (-1 != listStartRowNum) {// 如果不为 -1 说明有需要循环的列表表达式\n                Row listStartRow = sheet.getRow(listStartRowNum);\n                if (CollectionUtils.isEmpty(dataList)) {// 列表数据为空，清空列表表达式行\n                    for (int i = 0; i < listStartRow.getLastCellNum(); i++) {\n                        Cell cell = listStartRow.getCell(i);\n                        if (cell != null) {\n                            cell.setCellValue(\"\");\n                        }\n                    }\n                } else {\n                    int lastCellNum = listStartRow.getLastCellNum();\n                    if (listStartRowNum + 1 <= sheet.getLastRowNum()) {\n                        sheet.shiftRows(listStartRowNum + 1, sheet.getLastRowNum(), dataList.size(), true, false);// 列表数据行后面行下移，留出数据填充区域\n                    }\n                    for (int i = 0; i < dataList.size(); i++) {// 循环列表数据 生成行\n                        JSONObject jsonObj  = (JSONObject) JSON.toJSON(dataList.get(i));\n                        //Map<String, Object> map = dataList.get(i);// 一行数据\n                        int newRowNum = listStartRowNum + i + 1;// 保留表达式行\n                        Row newRow = sheet.createRow(newRowNum);// 创建新行\n                        for (int j = 0; j < lastCellNum; j++) {// 循环遍历单元格\n                            Cell cell = listStartRow.getCell(j);// 列表数据行\n\n                            // 填充数据\n                            if (cell != null) {\n                                Cell newCell = newRow.createCell(j);\n                                newCell.setCellStyle(cell.getCellStyle());// 设置单元格格式\n\n                                if (cell.getCellType() == CellType.STRING\n                                        && cell.getStringCellValue().matches(REG_LIST)) {// 单元格是一个表达式\n                                    String cellExp = cell.getStringCellValue();\n                                    Matcher matcher = PATTERN_LIST.matcher(cellExp);\n                                    matcher.find();\n                                    String key = matcher.group(1);// 获取key\n                                    Object newValue = jsonObj.get(key);\n                                    if (newValue == null) {\n                                        newValue = \"\";\n                                    }\n                                    setCellValue(newCell, newValue);\n                                } else {// 不是表达式复制单元格数据\n                                    CellType cellType = cell.getCellType();\n                                    if (cellType == CellType.NUMERIC) {\n                                        newCell.setCellValue(cell.getNumericCellValue());\n                                    } else if (cellType == CellType.BOOLEAN) {\n                                        newCell.setCellValue(cell.getBooleanCellValue());\n                                    } else if (cellType == CellType.STRING) {\n                                        newCell.setCellValue(cell.getStringCellValue());\n                                    } else if (cellType == CellType.FORMULA) {\n                                        // 处理公式，待实现\n                                    } else {\n                                        newCell.setCellValue(cell.getStringCellValue());\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    sheet.removeRow(listStartRow);// 删除list表达式行\n                    sheet.shiftRows(listStartRowNum + 1, sheet.getLastRowNum(), -1, true, false);// 数据区域上移一行，覆盖表达式行\n\n                    // 合并单元格处理\n                    for (int i = 0; i < lastCellNum; i++) {\n                        CellRangeAddress mergedRangeAddress = getMergedRangeAddress(sheet, listStartRowNum, i);\n                        if (mergedRangeAddress != null) {// 合并的单元格\n                            i = mergedRangeAddress.getLastColumn();\n                            for (int j = 1; j < dataList.size(); j++) {\n                                int newRowNum = listStartRowNum + j;\n                                sheet.addMergedRegionUnsafe(new CellRangeAddress(newRowNum, newRowNum,\n                                        mergedRangeAddress.getFirstColumn(), mergedRangeAddress.getLastColumn()));\n                            }\n                        }\n                    }\n                }\n            }\n            // 公式生效\n            sheet.setForceFormulaRecalculation(true);\n            sheet.getPrintSetup().setPaperSize(PrintSetup.A4_PAPERSIZE);\n            sheet.getPrintSetup().setLandscape(true);\n            // FitHeight=1, 将所有行都缩放显示在一页上（设置1表示一页显示完，如果设置2表示分2页显示完）\n            // FitWidth=1, 将所有列都缩放显示在一页上\n            // 两个都等于1时，如果行数太多则会挤压列，一般来说只设置一个FitWidth=1，让行数自动换页\n            // 要使这两个参数有效，则需要设置FitToPage=true\n            sheet.setFitToPage(true);\n            sheet.getPrintSetup().setFitWidth((short) 1);\n//          sheet.getPrintSetup().setFitHeight((short)1);\n            // 是否显示自动换页符\n            sheet.setAutobreaks(true);\n            ByteArrayOutputStream out = new ByteArrayOutputStream();\n            workbook.write(out);\n            return out.toByteArray();\n        } catch (Exception e) {\n            throw new ExcelException(\"生成excel失败!\", e);\n        }\n    }\n\n    private static void setCellValue(Cell cell, Object value) {\n        if (value instanceof Number) {// 如果是数字类型的设置为数值\n            cell.setCellValue(Double.parseDouble(value.toString()));\n        } else if (value instanceof Date) {// 如果为时间类型的设置为时间\n            cell.setCellValue((Date) value);\n        } else if (value instanceof String) {\n            cell.setCellValue((String) value);\n        } else if (value instanceof Boolean) {\n            cell.setCellValue((Boolean) value);\n        } else {\n            cell.setCellValue(value.toString());\n        }\n    }\n\n    /**\n     * 获取指定行/列的合并单元格区域\n     *\n     * @param sheet\n     * @param row\n     * @param column\n     * @return CellRangeAddress 不是合并单元格返回null\n     */\n    private static CellRangeAddress getMergedRangeAddress(Sheet sheet, int row, int column) {\n        List<CellRangeAddress> mergedRegions = sheet.getMergedRegions();\n        for (CellRangeAddress cellAddresses : mergedRegions) {\n            if (row >= cellAddresses.getFirstRow() && row <= cellAddresses.getLastRow()\n                    && column >= cellAddresses.getFirstColumn() && column <= cellAddresses.getLastColumn()) {\n                return cellAddresses;\n            }\n        }\n        return null;\n    }\n\n\n\n    static class ExcelException extends RuntimeException {\n\n        private static final long serialVersionUID = -2772261598232964002L;\n\n        public ExcelException(String msg, Throwable e) {\n            super(msg, e);\n        }\n\n        public ExcelException(String msg) {\n            super(msg);\n        }\n    }\n\n    /**\n     * Description: 1、通过浏览器以流的形式输出,为了处理中文表名问题.\n     *\n     * @param bytes 文件对象\n     * @param request\n     * @param response\n     * @param fileName 文件名\n     */\n    public static void writeToResponse(byte[] bytes, HttpServletRequest request, HttpServletResponse response, String fileName) {\n        try {\n            String userAgent = request.getHeader(\"User-Agent\");\n            // 解决中文乱码问题\n            String fileName1 =  fileName + \".xls\";\n            String newFilename = URLEncoder.encode(fileName1, \"UTF8\");\n            // 如果没有userAgent，则默认使用IE的方式进行编码，因为毕竟IE还是占多数的\n            String rtn = \"filename=\\\"\" + newFilename + \"\\\"\";\n            if (userAgent != null) {\n                userAgent = userAgent.toLowerCase();\n                // IE浏览器，只能采用URLEncoder编码\n                if (userAgent.indexOf(\"IE\") != -1)\n                {\n                    rtn = \"filename=\\\"\" + newFilename + \"\\\"\";\n                }\n                // Opera浏览器只能采用filename*\n                else if (userAgent.indexOf(\"OPERA\") != -1)\n                {\n                    rtn = \"filename*=UTF-8''\" + newFilename;\n                }\n                // Safari浏览器，只能采用ISO编码的中文输出\n                else if (userAgent.indexOf(\"SAFARI\") != -1)\n                {\n                    rtn = \"filename=\\\"\" + new String(fileName1.getBytes(\"UTF-8\"), \"ISO8859-1\")\n                            + \"\\\"\";\n                }\n                // FireFox浏览器，可以使用MimeUtility或filename*或ISO编码的中文输出\n                else if (userAgent.indexOf(\"FIREFOX\") != -1)\n                {\n                    rtn = \"filename*=UTF-8''\" + newFilename;\n                }\n            }\n\n            String headStr = \"attachment;  \" + rtn;\n            response.setContentType(\"multipart/form-data\");\n            response.setCharacterEncoding(\"utf-8\");\n            response.setHeader(\"Content-Disposition\", headStr);\n            // 响应到客户端\n            OutputStream outputStream = response.getOutputStream();\n            outputStream.write(bytes);\n            outputStream.flush();\n\n        } catch (UnsupportedEncodingException e) {\n\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n\n    }\n\n}\n```\n## 模板制作\n制作模板时注意表格内数据与表头表尾数据变量命名区别，表格内数据变量前添加【.】用于标识表格数据。\n![](https://raw.githubusercontent.com/zhjAdm/ImageHosting/main/20211101104241.png)\n","source":"_posts/Java导出之Excel.md","raw":"---\ntitle: Java导出之Excel\ntags:\n  - Java\n  - POI\ncategories: Java\nabbrlink: 55014\ndate: 2021-10-22 22:33:06\ndescription: Java通过POI生成Excel并返回前台下载\n---\n# Java通过模板导出Excel\n## POI\nApache POI是Apache软件基金会的开放源码库，POI提供API给Java程序对Microsoft Office格式文件读和写的功能。\n## HSSF和XSSF\n针对不同版本的Excel，在POI中提供了HSSF和XSSF不同的包。\nHSSF  － 提供读写Microsoft Excel XLS格式档案的功能。\nXSSF  － 提供读写Microsoft Excel OOXML XLSX格式档案的功能。\n## 相关依赖\n``` \n\t\t<dependency>\n\t\t\t<groupId>org.apache.poi</groupId>\n\t\t\t<artifactId>poi</artifactId>\n\t\t\t<version>4.1.2</version>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>org.apache.poi</groupId>\n\t\t\t<artifactId>poi-ooxml</artifactId>\n\t\t\t<version>4.1.2</version>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>org.apache.poi</groupId>\n\t\t\t<artifactId>poi-ooxml-schemas</artifactId>\n\t\t\t<version>4.1.2</version>\n\t\t</dependency>\n```\n## 工具类\nwriteExcel()f方法根据模板生成Excel，writeToResponse()方法将生成的Excel写入response中返回前端下载。\n``` java\npublic class ExcelUtils {\n    private static final String REG = \"\\\\{([a-zA-Z_1-9]+)\\\\}\";// 匹配\"{exp}\"\n    private static final String REG_LIST = \"\\\\{\\\\.([a-zA-Z_1-9]+)\\\\}\";// 匹配\"{.exp}\"\n    private static final Pattern PATTERN = Pattern.compile(REG);\n    private static final Pattern PATTERN_LIST = Pattern.compile(REG_LIST);\n\n\n\n    private ExcelUtils() {\n    }\n\n    /**\n     * 根据模板生成Excel文件\n     *\n     * @param templateFilePath 模版文件路径\n     * @param context      表头或表尾数据集合\n     * @param dataList     列表\n     * @return\n     */\n    public static byte[] writeExcel(String templateFilePath, Map<String, Object> context,\n                                    List<?> dataList) {\n       // File templateFile = null;\n        ClassPathResource classPathResource = new ClassPathResource(templateFilePath);\n        InputStream inputStream = null;\n\n        try {\n            inputStream = classPathResource.getInputStream();\n        } catch (Exception e) {\n            e.printStackTrace();\n            throw new RuntimeException(\"获取模板失败!\", e);\n        }\n        try (HSSFWorkbook workbook = new HSSFWorkbook(inputStream)) {\n            Sheet sheet = workbook.getSheetAt(0);// 获取配置文件sheet 页\n            int listStartRowNum = -1;\n            for (int i = sheet.getFirstRowNum(); i <= sheet.getLastRowNum(); i++) {\n                Row row = sheet.getRow(i);\n                if (row != null) {\n                    for (int j = 0; j < row.getLastCellNum(); j++) {\n                        Cell cell = row.getCell(j);\n                        if (cell != null && cell.getCellType() == CellType.STRING) {\n                            String cellValue = cell.getStringCellValue();\n                            // 获取到列表数据所在行\n                            if (listStartRowNum == -1 && cellValue.matches(REG_LIST)) {\n                                listStartRowNum = i;\n                            }\n\n                            Object newValue = cellValue;\n                            Matcher matcher = PATTERN.matcher(cellValue);\n                            while (matcher.find()) {\n                                String replaceExp = matcher.group();// 匹配到的表达式\n                                String key = matcher.group(1);// 获取key\n                                Object replaceValue = context.get(key);\n                                if (replaceValue == null) {\n                                    replaceValue = \"\";\n                                }\n                                if (replaceExp.equals(cellValue)) {// 单元格是一个表达式\n                                    newValue = replaceValue;\n                                } else {// 以字符串替换\n                                    newValue = ((String) newValue).replace(replaceExp, replaceValue.toString());\n                                }\n                            }\n                            setCellValue(cell, newValue);\n\n                        }\n\n                    }\n\n                }\n            }\n            if (-1 != listStartRowNum) {// 如果不为 -1 说明有需要循环的列表表达式\n                Row listStartRow = sheet.getRow(listStartRowNum);\n                if (CollectionUtils.isEmpty(dataList)) {// 列表数据为空，清空列表表达式行\n                    for (int i = 0; i < listStartRow.getLastCellNum(); i++) {\n                        Cell cell = listStartRow.getCell(i);\n                        if (cell != null) {\n                            cell.setCellValue(\"\");\n                        }\n                    }\n                } else {\n                    int lastCellNum = listStartRow.getLastCellNum();\n                    if (listStartRowNum + 1 <= sheet.getLastRowNum()) {\n                        sheet.shiftRows(listStartRowNum + 1, sheet.getLastRowNum(), dataList.size(), true, false);// 列表数据行后面行下移，留出数据填充区域\n                    }\n                    for (int i = 0; i < dataList.size(); i++) {// 循环列表数据 生成行\n                        JSONObject jsonObj  = (JSONObject) JSON.toJSON(dataList.get(i));\n                        //Map<String, Object> map = dataList.get(i);// 一行数据\n                        int newRowNum = listStartRowNum + i + 1;// 保留表达式行\n                        Row newRow = sheet.createRow(newRowNum);// 创建新行\n                        for (int j = 0; j < lastCellNum; j++) {// 循环遍历单元格\n                            Cell cell = listStartRow.getCell(j);// 列表数据行\n\n                            // 填充数据\n                            if (cell != null) {\n                                Cell newCell = newRow.createCell(j);\n                                newCell.setCellStyle(cell.getCellStyle());// 设置单元格格式\n\n                                if (cell.getCellType() == CellType.STRING\n                                        && cell.getStringCellValue().matches(REG_LIST)) {// 单元格是一个表达式\n                                    String cellExp = cell.getStringCellValue();\n                                    Matcher matcher = PATTERN_LIST.matcher(cellExp);\n                                    matcher.find();\n                                    String key = matcher.group(1);// 获取key\n                                    Object newValue = jsonObj.get(key);\n                                    if (newValue == null) {\n                                        newValue = \"\";\n                                    }\n                                    setCellValue(newCell, newValue);\n                                } else {// 不是表达式复制单元格数据\n                                    CellType cellType = cell.getCellType();\n                                    if (cellType == CellType.NUMERIC) {\n                                        newCell.setCellValue(cell.getNumericCellValue());\n                                    } else if (cellType == CellType.BOOLEAN) {\n                                        newCell.setCellValue(cell.getBooleanCellValue());\n                                    } else if (cellType == CellType.STRING) {\n                                        newCell.setCellValue(cell.getStringCellValue());\n                                    } else if (cellType == CellType.FORMULA) {\n                                        // 处理公式，待实现\n                                    } else {\n                                        newCell.setCellValue(cell.getStringCellValue());\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    sheet.removeRow(listStartRow);// 删除list表达式行\n                    sheet.shiftRows(listStartRowNum + 1, sheet.getLastRowNum(), -1, true, false);// 数据区域上移一行，覆盖表达式行\n\n                    // 合并单元格处理\n                    for (int i = 0; i < lastCellNum; i++) {\n                        CellRangeAddress mergedRangeAddress = getMergedRangeAddress(sheet, listStartRowNum, i);\n                        if (mergedRangeAddress != null) {// 合并的单元格\n                            i = mergedRangeAddress.getLastColumn();\n                            for (int j = 1; j < dataList.size(); j++) {\n                                int newRowNum = listStartRowNum + j;\n                                sheet.addMergedRegionUnsafe(new CellRangeAddress(newRowNum, newRowNum,\n                                        mergedRangeAddress.getFirstColumn(), mergedRangeAddress.getLastColumn()));\n                            }\n                        }\n                    }\n                }\n            }\n            // 公式生效\n            sheet.setForceFormulaRecalculation(true);\n            sheet.getPrintSetup().setPaperSize(PrintSetup.A4_PAPERSIZE);\n            sheet.getPrintSetup().setLandscape(true);\n            // FitHeight=1, 将所有行都缩放显示在一页上（设置1表示一页显示完，如果设置2表示分2页显示完）\n            // FitWidth=1, 将所有列都缩放显示在一页上\n            // 两个都等于1时，如果行数太多则会挤压列，一般来说只设置一个FitWidth=1，让行数自动换页\n            // 要使这两个参数有效，则需要设置FitToPage=true\n            sheet.setFitToPage(true);\n            sheet.getPrintSetup().setFitWidth((short) 1);\n//          sheet.getPrintSetup().setFitHeight((short)1);\n            // 是否显示自动换页符\n            sheet.setAutobreaks(true);\n            ByteArrayOutputStream out = new ByteArrayOutputStream();\n            workbook.write(out);\n            return out.toByteArray();\n        } catch (Exception e) {\n            throw new ExcelException(\"生成excel失败!\", e);\n        }\n    }\n\n    private static void setCellValue(Cell cell, Object value) {\n        if (value instanceof Number) {// 如果是数字类型的设置为数值\n            cell.setCellValue(Double.parseDouble(value.toString()));\n        } else if (value instanceof Date) {// 如果为时间类型的设置为时间\n            cell.setCellValue((Date) value);\n        } else if (value instanceof String) {\n            cell.setCellValue((String) value);\n        } else if (value instanceof Boolean) {\n            cell.setCellValue((Boolean) value);\n        } else {\n            cell.setCellValue(value.toString());\n        }\n    }\n\n    /**\n     * 获取指定行/列的合并单元格区域\n     *\n     * @param sheet\n     * @param row\n     * @param column\n     * @return CellRangeAddress 不是合并单元格返回null\n     */\n    private static CellRangeAddress getMergedRangeAddress(Sheet sheet, int row, int column) {\n        List<CellRangeAddress> mergedRegions = sheet.getMergedRegions();\n        for (CellRangeAddress cellAddresses : mergedRegions) {\n            if (row >= cellAddresses.getFirstRow() && row <= cellAddresses.getLastRow()\n                    && column >= cellAddresses.getFirstColumn() && column <= cellAddresses.getLastColumn()) {\n                return cellAddresses;\n            }\n        }\n        return null;\n    }\n\n\n\n    static class ExcelException extends RuntimeException {\n\n        private static final long serialVersionUID = -2772261598232964002L;\n\n        public ExcelException(String msg, Throwable e) {\n            super(msg, e);\n        }\n\n        public ExcelException(String msg) {\n            super(msg);\n        }\n    }\n\n    /**\n     * Description: 1、通过浏览器以流的形式输出,为了处理中文表名问题.\n     *\n     * @param bytes 文件对象\n     * @param request\n     * @param response\n     * @param fileName 文件名\n     */\n    public static void writeToResponse(byte[] bytes, HttpServletRequest request, HttpServletResponse response, String fileName) {\n        try {\n            String userAgent = request.getHeader(\"User-Agent\");\n            // 解决中文乱码问题\n            String fileName1 =  fileName + \".xls\";\n            String newFilename = URLEncoder.encode(fileName1, \"UTF8\");\n            // 如果没有userAgent，则默认使用IE的方式进行编码，因为毕竟IE还是占多数的\n            String rtn = \"filename=\\\"\" + newFilename + \"\\\"\";\n            if (userAgent != null) {\n                userAgent = userAgent.toLowerCase();\n                // IE浏览器，只能采用URLEncoder编码\n                if (userAgent.indexOf(\"IE\") != -1)\n                {\n                    rtn = \"filename=\\\"\" + newFilename + \"\\\"\";\n                }\n                // Opera浏览器只能采用filename*\n                else if (userAgent.indexOf(\"OPERA\") != -1)\n                {\n                    rtn = \"filename*=UTF-8''\" + newFilename;\n                }\n                // Safari浏览器，只能采用ISO编码的中文输出\n                else if (userAgent.indexOf(\"SAFARI\") != -1)\n                {\n                    rtn = \"filename=\\\"\" + new String(fileName1.getBytes(\"UTF-8\"), \"ISO8859-1\")\n                            + \"\\\"\";\n                }\n                // FireFox浏览器，可以使用MimeUtility或filename*或ISO编码的中文输出\n                else if (userAgent.indexOf(\"FIREFOX\") != -1)\n                {\n                    rtn = \"filename*=UTF-8''\" + newFilename;\n                }\n            }\n\n            String headStr = \"attachment;  \" + rtn;\n            response.setContentType(\"multipart/form-data\");\n            response.setCharacterEncoding(\"utf-8\");\n            response.setHeader(\"Content-Disposition\", headStr);\n            // 响应到客户端\n            OutputStream outputStream = response.getOutputStream();\n            outputStream.write(bytes);\n            outputStream.flush();\n\n        } catch (UnsupportedEncodingException e) {\n\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n\n    }\n\n}\n```\n## 模板制作\n制作模板时注意表格内数据与表头表尾数据变量命名区别，表格内数据变量前添加【.】用于标识表格数据。\n![](https://raw.githubusercontent.com/zhjAdm/ImageHosting/main/20211101104241.png)\n","slug":"Java导出之Excel","published":1,"updated":"2021-11-01T02:46:50.790Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckvg2kqax0003x0u1hb3l1zgk","content":"<h1 id=\"Java通过模板导出Excel\"><a href=\"#Java通过模板导出Excel\" class=\"headerlink\" title=\"Java通过模板导出Excel\"></a>Java通过模板导出Excel</h1><h2 id=\"POI\"><a href=\"#POI\" class=\"headerlink\" title=\"POI\"></a>POI</h2><p>Apache POI是Apache软件基金会的开放源码库，POI提供API给Java程序对Microsoft Office格式文件读和写的功能。</p>\n<h2 id=\"HSSF和XSSF\"><a href=\"#HSSF和XSSF\" class=\"headerlink\" title=\"HSSF和XSSF\"></a>HSSF和XSSF</h2><p>针对不同版本的Excel，在POI中提供了HSSF和XSSF不同的包。<br>HSSF  － 提供读写Microsoft Excel XLS格式档案的功能。<br>XSSF  － 提供读写Microsoft Excel OOXML XLSX格式档案的功能。</p>\n<h2 id=\"相关依赖\"><a href=\"#相关依赖\" class=\"headerlink\" title=\"相关依赖\"></a>相关依赖</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.poi<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>poi<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>4.1.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.poi<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>poi-ooxml<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>4.1.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.poi<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>poi-ooxml-schemas<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>4.1.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"工具类\"><a href=\"#工具类\" class=\"headerlink\" title=\"工具类\"></a>工具类</h2><p>writeExcel()f方法根据模板生成Excel，writeToResponse()方法将生成的Excel写入response中返回前端下载。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ExcelUtils</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String REG = <span class=\"string\">&quot;\\\\&#123;([a-zA-Z_1-9]+)\\\\&#125;&quot;</span>;<span class=\"comment\">// 匹配&quot;&#123;exp&#125;&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String REG_LIST = <span class=\"string\">&quot;\\\\&#123;\\\\.([a-zA-Z_1-9]+)\\\\&#125;&quot;</span>;<span class=\"comment\">// 匹配&quot;&#123;.exp&#125;&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> Pattern PATTERN = Pattern.compile(REG);</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> Pattern PATTERN_LIST = Pattern.compile(REG_LIST);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"title\">ExcelUtils</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 根据模板生成Excel文件</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> templateFilePath 模版文件路径</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> context      表头或表尾数据集合</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> dataList     列表</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">byte</span>[] writeExcel(String templateFilePath, Map&lt;String, Object&gt; context,</span><br><span class=\"line\">                                    List&lt;?&gt; dataList) &#123;</span><br><span class=\"line\">       <span class=\"comment\">// File templateFile = null;</span></span><br><span class=\"line\">        ClassPathResource classPathResource = <span class=\"keyword\">new</span> ClassPathResource(templateFilePath);</span><br><span class=\"line\">        InputStream inputStream = <span class=\"keyword\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            inputStream = classPathResource.getInputStream();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> RuntimeException(<span class=\"string\">&quot;获取模板失败!&quot;</span>, e);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> (HSSFWorkbook workbook = <span class=\"keyword\">new</span> HSSFWorkbook(inputStream)) &#123;</span><br><span class=\"line\">            Sheet sheet = workbook.getSheetAt(<span class=\"number\">0</span>);<span class=\"comment\">// 获取配置文件sheet 页</span></span><br><span class=\"line\">            <span class=\"keyword\">int</span> listStartRowNum = -<span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = sheet.getFirstRowNum(); i &lt;= sheet.getLastRowNum(); i++) &#123;</span><br><span class=\"line\">                Row row = sheet.getRow(i);</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (row != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; row.getLastCellNum(); j++) &#123;</span><br><span class=\"line\">                        Cell cell = row.getCell(j);</span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (cell != <span class=\"keyword\">null</span> &amp;&amp; cell.getCellType() == CellType.STRING) &#123;</span><br><span class=\"line\">                            String cellValue = cell.getStringCellValue();</span><br><span class=\"line\">                            <span class=\"comment\">// 获取到列表数据所在行</span></span><br><span class=\"line\">                            <span class=\"keyword\">if</span> (listStartRowNum == -<span class=\"number\">1</span> &amp;&amp; cellValue.matches(REG_LIST)) &#123;</span><br><span class=\"line\">                                listStartRowNum = i;</span><br><span class=\"line\">                            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                            Object newValue = cellValue;</span><br><span class=\"line\">                            Matcher matcher = PATTERN.matcher(cellValue);</span><br><span class=\"line\">                            <span class=\"keyword\">while</span> (matcher.find()) &#123;</span><br><span class=\"line\">                                String replaceExp = matcher.group();<span class=\"comment\">// 匹配到的表达式</span></span><br><span class=\"line\">                                String key = matcher.group(<span class=\"number\">1</span>);<span class=\"comment\">// 获取key</span></span><br><span class=\"line\">                                Object replaceValue = context.get(key);</span><br><span class=\"line\">                                <span class=\"keyword\">if</span> (replaceValue == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                                    replaceValue = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">                                &#125;</span><br><span class=\"line\">                                <span class=\"keyword\">if</span> (replaceExp.equals(cellValue)) &#123;<span class=\"comment\">// 单元格是一个表达式</span></span><br><span class=\"line\">                                    newValue = replaceValue;</span><br><span class=\"line\">                                &#125; <span class=\"keyword\">else</span> &#123;<span class=\"comment\">// 以字符串替换</span></span><br><span class=\"line\">                                    newValue = ((String) newValue).replace(replaceExp, replaceValue.toString());</span><br><span class=\"line\">                                &#125;</span><br><span class=\"line\">                            &#125;</span><br><span class=\"line\">                            setCellValue(cell, newValue);</span><br><span class=\"line\"></span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (-<span class=\"number\">1</span> != listStartRowNum) &#123;<span class=\"comment\">// 如果不为 -1 说明有需要循环的列表表达式</span></span><br><span class=\"line\">                Row listStartRow = sheet.getRow(listStartRowNum);</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (CollectionUtils.isEmpty(dataList)) &#123;<span class=\"comment\">// 列表数据为空，清空列表表达式行</span></span><br><span class=\"line\">                    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; listStartRow.getLastCellNum(); i++) &#123;</span><br><span class=\"line\">                        Cell cell = listStartRow.getCell(i);</span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (cell != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                            cell.setCellValue(<span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">int</span> lastCellNum = listStartRow.getLastCellNum();</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (listStartRowNum + <span class=\"number\">1</span> &lt;= sheet.getLastRowNum()) &#123;</span><br><span class=\"line\">                        sheet.shiftRows(listStartRowNum + <span class=\"number\">1</span>, sheet.getLastRowNum(), dataList.size(), <span class=\"keyword\">true</span>, <span class=\"keyword\">false</span>);<span class=\"comment\">// 列表数据行后面行下移，留出数据填充区域</span></span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; dataList.size(); i++) &#123;<span class=\"comment\">// 循环列表数据 生成行</span></span><br><span class=\"line\">                        JSONObject jsonObj  = (JSONObject) JSON.toJSON(dataList.get(i));</span><br><span class=\"line\">                        <span class=\"comment\">//Map&lt;String, Object&gt; map = dataList.get(i);// 一行数据</span></span><br><span class=\"line\">                        <span class=\"keyword\">int</span> newRowNum = listStartRowNum + i + <span class=\"number\">1</span>;<span class=\"comment\">// 保留表达式行</span></span><br><span class=\"line\">                        Row newRow = sheet.createRow(newRowNum);<span class=\"comment\">// 创建新行</span></span><br><span class=\"line\">                        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; lastCellNum; j++) &#123;<span class=\"comment\">// 循环遍历单元格</span></span><br><span class=\"line\">                            Cell cell = listStartRow.getCell(j);<span class=\"comment\">// 列表数据行</span></span><br><span class=\"line\"></span><br><span class=\"line\">                            <span class=\"comment\">// 填充数据</span></span><br><span class=\"line\">                            <span class=\"keyword\">if</span> (cell != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                                Cell newCell = newRow.createCell(j);</span><br><span class=\"line\">                                newCell.setCellStyle(cell.getCellStyle());<span class=\"comment\">// 设置单元格格式</span></span><br><span class=\"line\"></span><br><span class=\"line\">                                <span class=\"keyword\">if</span> (cell.getCellType() == CellType.STRING</span><br><span class=\"line\">                                        &amp;&amp; cell.getStringCellValue().matches(REG_LIST)) &#123;<span class=\"comment\">// 单元格是一个表达式</span></span><br><span class=\"line\">                                    String cellExp = cell.getStringCellValue();</span><br><span class=\"line\">                                    Matcher matcher = PATTERN_LIST.matcher(cellExp);</span><br><span class=\"line\">                                    matcher.find();</span><br><span class=\"line\">                                    String key = matcher.group(<span class=\"number\">1</span>);<span class=\"comment\">// 获取key</span></span><br><span class=\"line\">                                    Object newValue = jsonObj.get(key);</span><br><span class=\"line\">                                    <span class=\"keyword\">if</span> (newValue == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                                        newValue = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">                                    &#125;</span><br><span class=\"line\">                                    setCellValue(newCell, newValue);</span><br><span class=\"line\">                                &#125; <span class=\"keyword\">else</span> &#123;<span class=\"comment\">// 不是表达式复制单元格数据</span></span><br><span class=\"line\">                                    CellType cellType = cell.getCellType();</span><br><span class=\"line\">                                    <span class=\"keyword\">if</span> (cellType == CellType.NUMERIC) &#123;</span><br><span class=\"line\">                                        newCell.setCellValue(cell.getNumericCellValue());</span><br><span class=\"line\">                                    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (cellType == CellType.BOOLEAN) &#123;</span><br><span class=\"line\">                                        newCell.setCellValue(cell.getBooleanCellValue());</span><br><span class=\"line\">                                    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (cellType == CellType.STRING) &#123;</span><br><span class=\"line\">                                        newCell.setCellValue(cell.getStringCellValue());</span><br><span class=\"line\">                                    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (cellType == CellType.FORMULA) &#123;</span><br><span class=\"line\">                                        <span class=\"comment\">// 处理公式，待实现</span></span><br><span class=\"line\">                                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                                        newCell.setCellValue(cell.getStringCellValue());</span><br><span class=\"line\">                                    &#125;</span><br><span class=\"line\">                                &#125;</span><br><span class=\"line\">                            &#125;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    sheet.removeRow(listStartRow);<span class=\"comment\">// 删除list表达式行</span></span><br><span class=\"line\">                    sheet.shiftRows(listStartRowNum + <span class=\"number\">1</span>, sheet.getLastRowNum(), -<span class=\"number\">1</span>, <span class=\"keyword\">true</span>, <span class=\"keyword\">false</span>);<span class=\"comment\">// 数据区域上移一行，覆盖表达式行</span></span><br><span class=\"line\"></span><br><span class=\"line\">                    <span class=\"comment\">// 合并单元格处理</span></span><br><span class=\"line\">                    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; lastCellNum; i++) &#123;</span><br><span class=\"line\">                        CellRangeAddress mergedRangeAddress = getMergedRangeAddress(sheet, listStartRowNum, i);</span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (mergedRangeAddress != <span class=\"keyword\">null</span>) &#123;<span class=\"comment\">// 合并的单元格</span></span><br><span class=\"line\">                            i = mergedRangeAddress.getLastColumn();</span><br><span class=\"line\">                            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">1</span>; j &lt; dataList.size(); j++) &#123;</span><br><span class=\"line\">                                <span class=\"keyword\">int</span> newRowNum = listStartRowNum + j;</span><br><span class=\"line\">                                sheet.addMergedRegionUnsafe(<span class=\"keyword\">new</span> CellRangeAddress(newRowNum, newRowNum,</span><br><span class=\"line\">                                        mergedRangeAddress.getFirstColumn(), mergedRangeAddress.getLastColumn()));</span><br><span class=\"line\">                            &#125;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">// 公式生效</span></span><br><span class=\"line\">            sheet.setForceFormulaRecalculation(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">            sheet.getPrintSetup().setPaperSize(PrintSetup.A4_PAPERSIZE);</span><br><span class=\"line\">            sheet.getPrintSetup().setLandscape(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">            <span class=\"comment\">// FitHeight=1, 将所有行都缩放显示在一页上（设置1表示一页显示完，如果设置2表示分2页显示完）</span></span><br><span class=\"line\">            <span class=\"comment\">// FitWidth=1, 将所有列都缩放显示在一页上</span></span><br><span class=\"line\">            <span class=\"comment\">// 两个都等于1时，如果行数太多则会挤压列，一般来说只设置一个FitWidth=1，让行数自动换页</span></span><br><span class=\"line\">            <span class=\"comment\">// 要使这两个参数有效，则需要设置FitToPage=true</span></span><br><span class=\"line\">            sheet.setFitToPage(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">            sheet.getPrintSetup().setFitWidth((<span class=\"keyword\">short</span>) <span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"comment\">//          sheet.getPrintSetup().setFitHeight((short)1);</span></span><br><span class=\"line\">            <span class=\"comment\">// 是否显示自动换页符</span></span><br><span class=\"line\">            sheet.setAutobreaks(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">            ByteArrayOutputStream out = <span class=\"keyword\">new</span> ByteArrayOutputStream();</span><br><span class=\"line\">            workbook.write(out);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> out.toByteArray();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> ExcelException(<span class=\"string\">&quot;生成excel失败!&quot;</span>, e);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">setCellValue</span><span class=\"params\">(Cell cell, Object value)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (value <span class=\"keyword\">instanceof</span> Number) &#123;<span class=\"comment\">// 如果是数字类型的设置为数值</span></span><br><span class=\"line\">            cell.setCellValue(Double.parseDouble(value.toString()));</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (value <span class=\"keyword\">instanceof</span> Date) &#123;<span class=\"comment\">// 如果为时间类型的设置为时间</span></span><br><span class=\"line\">            cell.setCellValue((Date) value);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (value <span class=\"keyword\">instanceof</span> String) &#123;</span><br><span class=\"line\">            cell.setCellValue((String) value);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (value <span class=\"keyword\">instanceof</span> Boolean) &#123;</span><br><span class=\"line\">            cell.setCellValue((Boolean) value);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            cell.setCellValue(value.toString());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 获取指定行/列的合并单元格区域</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> sheet</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> row</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> column</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> CellRangeAddress 不是合并单元格返回null</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> CellRangeAddress <span class=\"title\">getMergedRangeAddress</span><span class=\"params\">(Sheet sheet, <span class=\"keyword\">int</span> row, <span class=\"keyword\">int</span> column)</span> </span>&#123;</span><br><span class=\"line\">        List&lt;CellRangeAddress&gt; mergedRegions = sheet.getMergedRegions();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (CellRangeAddress cellAddresses : mergedRegions) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (row &gt;= cellAddresses.getFirstRow() &amp;&amp; row &lt;= cellAddresses.getLastRow()</span><br><span class=\"line\">                    &amp;&amp; column &gt;= cellAddresses.getFirstColumn() &amp;&amp; column &lt;= cellAddresses.getLastColumn()) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> cellAddresses;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ExcelException</span> <span class=\"keyword\">extends</span> <span class=\"title\">RuntimeException</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">long</span> serialVersionUID = -<span class=\"number\">2772261598232964002L</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ExcelException</span><span class=\"params\">(String msg, Throwable e)</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">super</span>(msg, e);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ExcelException</span><span class=\"params\">(String msg)</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">super</span>(msg);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * Description: 1、通过浏览器以流的形式输出,为了处理中文表名问题.</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> bytes 文件对象</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> request</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> response</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> fileName 文件名</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">writeToResponse</span><span class=\"params\">(<span class=\"keyword\">byte</span>[] bytes, HttpServletRequest request, HttpServletResponse response, String fileName)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            String userAgent = request.getHeader(<span class=\"string\">&quot;User-Agent&quot;</span>);</span><br><span class=\"line\">            <span class=\"comment\">// 解决中文乱码问题</span></span><br><span class=\"line\">            String fileName1 =  fileName + <span class=\"string\">&quot;.xls&quot;</span>;</span><br><span class=\"line\">            String newFilename = URLEncoder.encode(fileName1, <span class=\"string\">&quot;UTF8&quot;</span>);</span><br><span class=\"line\">            <span class=\"comment\">// 如果没有userAgent，则默认使用IE的方式进行编码，因为毕竟IE还是占多数的</span></span><br><span class=\"line\">            String rtn = <span class=\"string\">&quot;filename=\\&quot;&quot;</span> + newFilename + <span class=\"string\">&quot;\\&quot;&quot;</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (userAgent != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                userAgent = userAgent.toLowerCase();</span><br><span class=\"line\">                <span class=\"comment\">// IE浏览器，只能采用URLEncoder编码</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (userAgent.indexOf(<span class=\"string\">&quot;IE&quot;</span>) != -<span class=\"number\">1</span>)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    rtn = <span class=\"string\">&quot;filename=\\&quot;&quot;</span> + newFilename + <span class=\"string\">&quot;\\&quot;&quot;</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"comment\">// Opera浏览器只能采用filename*</span></span><br><span class=\"line\">                <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (userAgent.indexOf(<span class=\"string\">&quot;OPERA&quot;</span>) != -<span class=\"number\">1</span>)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    rtn = <span class=\"string\">&quot;filename*=UTF-8&#x27;&#x27;&quot;</span> + newFilename;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"comment\">// Safari浏览器，只能采用ISO编码的中文输出</span></span><br><span class=\"line\">                <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (userAgent.indexOf(<span class=\"string\">&quot;SAFARI&quot;</span>) != -<span class=\"number\">1</span>)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    rtn = <span class=\"string\">&quot;filename=\\&quot;&quot;</span> + <span class=\"keyword\">new</span> String(fileName1.getBytes(<span class=\"string\">&quot;UTF-8&quot;</span>), <span class=\"string\">&quot;ISO8859-1&quot;</span>)</span><br><span class=\"line\">                            + <span class=\"string\">&quot;\\&quot;&quot;</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"comment\">// FireFox浏览器，可以使用MimeUtility或filename*或ISO编码的中文输出</span></span><br><span class=\"line\">                <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (userAgent.indexOf(<span class=\"string\">&quot;FIREFOX&quot;</span>) != -<span class=\"number\">1</span>)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    rtn = <span class=\"string\">&quot;filename*=UTF-8&#x27;&#x27;&quot;</span> + newFilename;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            String headStr = <span class=\"string\">&quot;attachment;  &quot;</span> + rtn;</span><br><span class=\"line\">            response.setContentType(<span class=\"string\">&quot;multipart/form-data&quot;</span>);</span><br><span class=\"line\">            response.setCharacterEncoding(<span class=\"string\">&quot;utf-8&quot;</span>);</span><br><span class=\"line\">            response.setHeader(<span class=\"string\">&quot;Content-Disposition&quot;</span>, headStr);</span><br><span class=\"line\">            <span class=\"comment\">// 响应到客户端</span></span><br><span class=\"line\">            OutputStream outputStream = response.getOutputStream();</span><br><span class=\"line\">            outputStream.write(bytes);</span><br><span class=\"line\">            outputStream.flush();</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (UnsupportedEncodingException e) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"模板制作\"><a href=\"#模板制作\" class=\"headerlink\" title=\"模板制作\"></a>模板制作</h2><p>制作模板时注意表格内数据与表头表尾数据变量命名区别，表格内数据变量前添加【.】用于标识表格数据。<br><img src=\"https://raw.githubusercontent.com/zhjAdm/ImageHosting/main/20211101104241.png\"></p>\n","site":{"data":{"styles":"/* build time:Mon Nov 01 2021 10:55:19 GMT+0800 (中国标准时间)*/\n.sidebar{box-shadow:none;background:0 0}body{background:url(/images/yourbackground.png);background-repeat:no-repeat;background-attachment:fixed;background-size:cover;background-position:50% 50%}.back-to-top.back-to-top-on{display:none}\n/* rebuild by neat */","variables":"/* build time:Mon Nov 01 2021 10:55:19 GMT+0800 (中国标准时间)*/\n\n/* rebuild by neat */"}},"length":9452,"excerpt":"","more":"<h1 id=\"Java通过模板导出Excel\"><a href=\"#Java通过模板导出Excel\" class=\"headerlink\" title=\"Java通过模板导出Excel\"></a>Java通过模板导出Excel</h1><h2 id=\"POI\"><a href=\"#POI\" class=\"headerlink\" title=\"POI\"></a>POI</h2><p>Apache POI是Apache软件基金会的开放源码库，POI提供API给Java程序对Microsoft Office格式文件读和写的功能。</p>\n<h2 id=\"HSSF和XSSF\"><a href=\"#HSSF和XSSF\" class=\"headerlink\" title=\"HSSF和XSSF\"></a>HSSF和XSSF</h2><p>针对不同版本的Excel，在POI中提供了HSSF和XSSF不同的包。<br>HSSF  － 提供读写Microsoft Excel XLS格式档案的功能。<br>XSSF  － 提供读写Microsoft Excel OOXML XLSX格式档案的功能。</p>\n<h2 id=\"相关依赖\"><a href=\"#相关依赖\" class=\"headerlink\" title=\"相关依赖\"></a>相关依赖</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.poi<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>poi<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>4.1.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.poi<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>poi-ooxml<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>4.1.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.poi<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>poi-ooxml-schemas<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>4.1.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"工具类\"><a href=\"#工具类\" class=\"headerlink\" title=\"工具类\"></a>工具类</h2><p>writeExcel()f方法根据模板生成Excel，writeToResponse()方法将生成的Excel写入response中返回前端下载。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ExcelUtils</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String REG = <span class=\"string\">&quot;\\\\&#123;([a-zA-Z_1-9]+)\\\\&#125;&quot;</span>;<span class=\"comment\">// 匹配&quot;&#123;exp&#125;&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String REG_LIST = <span class=\"string\">&quot;\\\\&#123;\\\\.([a-zA-Z_1-9]+)\\\\&#125;&quot;</span>;<span class=\"comment\">// 匹配&quot;&#123;.exp&#125;&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> Pattern PATTERN = Pattern.compile(REG);</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> Pattern PATTERN_LIST = Pattern.compile(REG_LIST);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"title\">ExcelUtils</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 根据模板生成Excel文件</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> templateFilePath 模版文件路径</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> context      表头或表尾数据集合</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> dataList     列表</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">byte</span>[] writeExcel(String templateFilePath, Map&lt;String, Object&gt; context,</span><br><span class=\"line\">                                    List&lt;?&gt; dataList) &#123;</span><br><span class=\"line\">       <span class=\"comment\">// File templateFile = null;</span></span><br><span class=\"line\">        ClassPathResource classPathResource = <span class=\"keyword\">new</span> ClassPathResource(templateFilePath);</span><br><span class=\"line\">        InputStream inputStream = <span class=\"keyword\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            inputStream = classPathResource.getInputStream();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> RuntimeException(<span class=\"string\">&quot;获取模板失败!&quot;</span>, e);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> (HSSFWorkbook workbook = <span class=\"keyword\">new</span> HSSFWorkbook(inputStream)) &#123;</span><br><span class=\"line\">            Sheet sheet = workbook.getSheetAt(<span class=\"number\">0</span>);<span class=\"comment\">// 获取配置文件sheet 页</span></span><br><span class=\"line\">            <span class=\"keyword\">int</span> listStartRowNum = -<span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = sheet.getFirstRowNum(); i &lt;= sheet.getLastRowNum(); i++) &#123;</span><br><span class=\"line\">                Row row = sheet.getRow(i);</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (row != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; row.getLastCellNum(); j++) &#123;</span><br><span class=\"line\">                        Cell cell = row.getCell(j);</span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (cell != <span class=\"keyword\">null</span> &amp;&amp; cell.getCellType() == CellType.STRING) &#123;</span><br><span class=\"line\">                            String cellValue = cell.getStringCellValue();</span><br><span class=\"line\">                            <span class=\"comment\">// 获取到列表数据所在行</span></span><br><span class=\"line\">                            <span class=\"keyword\">if</span> (listStartRowNum == -<span class=\"number\">1</span> &amp;&amp; cellValue.matches(REG_LIST)) &#123;</span><br><span class=\"line\">                                listStartRowNum = i;</span><br><span class=\"line\">                            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                            Object newValue = cellValue;</span><br><span class=\"line\">                            Matcher matcher = PATTERN.matcher(cellValue);</span><br><span class=\"line\">                            <span class=\"keyword\">while</span> (matcher.find()) &#123;</span><br><span class=\"line\">                                String replaceExp = matcher.group();<span class=\"comment\">// 匹配到的表达式</span></span><br><span class=\"line\">                                String key = matcher.group(<span class=\"number\">1</span>);<span class=\"comment\">// 获取key</span></span><br><span class=\"line\">                                Object replaceValue = context.get(key);</span><br><span class=\"line\">                                <span class=\"keyword\">if</span> (replaceValue == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                                    replaceValue = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">                                &#125;</span><br><span class=\"line\">                                <span class=\"keyword\">if</span> (replaceExp.equals(cellValue)) &#123;<span class=\"comment\">// 单元格是一个表达式</span></span><br><span class=\"line\">                                    newValue = replaceValue;</span><br><span class=\"line\">                                &#125; <span class=\"keyword\">else</span> &#123;<span class=\"comment\">// 以字符串替换</span></span><br><span class=\"line\">                                    newValue = ((String) newValue).replace(replaceExp, replaceValue.toString());</span><br><span class=\"line\">                                &#125;</span><br><span class=\"line\">                            &#125;</span><br><span class=\"line\">                            setCellValue(cell, newValue);</span><br><span class=\"line\"></span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (-<span class=\"number\">1</span> != listStartRowNum) &#123;<span class=\"comment\">// 如果不为 -1 说明有需要循环的列表表达式</span></span><br><span class=\"line\">                Row listStartRow = sheet.getRow(listStartRowNum);</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (CollectionUtils.isEmpty(dataList)) &#123;<span class=\"comment\">// 列表数据为空，清空列表表达式行</span></span><br><span class=\"line\">                    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; listStartRow.getLastCellNum(); i++) &#123;</span><br><span class=\"line\">                        Cell cell = listStartRow.getCell(i);</span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (cell != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                            cell.setCellValue(<span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">int</span> lastCellNum = listStartRow.getLastCellNum();</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (listStartRowNum + <span class=\"number\">1</span> &lt;= sheet.getLastRowNum()) &#123;</span><br><span class=\"line\">                        sheet.shiftRows(listStartRowNum + <span class=\"number\">1</span>, sheet.getLastRowNum(), dataList.size(), <span class=\"keyword\">true</span>, <span class=\"keyword\">false</span>);<span class=\"comment\">// 列表数据行后面行下移，留出数据填充区域</span></span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; dataList.size(); i++) &#123;<span class=\"comment\">// 循环列表数据 生成行</span></span><br><span class=\"line\">                        JSONObject jsonObj  = (JSONObject) JSON.toJSON(dataList.get(i));</span><br><span class=\"line\">                        <span class=\"comment\">//Map&lt;String, Object&gt; map = dataList.get(i);// 一行数据</span></span><br><span class=\"line\">                        <span class=\"keyword\">int</span> newRowNum = listStartRowNum + i + <span class=\"number\">1</span>;<span class=\"comment\">// 保留表达式行</span></span><br><span class=\"line\">                        Row newRow = sheet.createRow(newRowNum);<span class=\"comment\">// 创建新行</span></span><br><span class=\"line\">                        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; lastCellNum; j++) &#123;<span class=\"comment\">// 循环遍历单元格</span></span><br><span class=\"line\">                            Cell cell = listStartRow.getCell(j);<span class=\"comment\">// 列表数据行</span></span><br><span class=\"line\"></span><br><span class=\"line\">                            <span class=\"comment\">// 填充数据</span></span><br><span class=\"line\">                            <span class=\"keyword\">if</span> (cell != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                                Cell newCell = newRow.createCell(j);</span><br><span class=\"line\">                                newCell.setCellStyle(cell.getCellStyle());<span class=\"comment\">// 设置单元格格式</span></span><br><span class=\"line\"></span><br><span class=\"line\">                                <span class=\"keyword\">if</span> (cell.getCellType() == CellType.STRING</span><br><span class=\"line\">                                        &amp;&amp; cell.getStringCellValue().matches(REG_LIST)) &#123;<span class=\"comment\">// 单元格是一个表达式</span></span><br><span class=\"line\">                                    String cellExp = cell.getStringCellValue();</span><br><span class=\"line\">                                    Matcher matcher = PATTERN_LIST.matcher(cellExp);</span><br><span class=\"line\">                                    matcher.find();</span><br><span class=\"line\">                                    String key = matcher.group(<span class=\"number\">1</span>);<span class=\"comment\">// 获取key</span></span><br><span class=\"line\">                                    Object newValue = jsonObj.get(key);</span><br><span class=\"line\">                                    <span class=\"keyword\">if</span> (newValue == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                                        newValue = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">                                    &#125;</span><br><span class=\"line\">                                    setCellValue(newCell, newValue);</span><br><span class=\"line\">                                &#125; <span class=\"keyword\">else</span> &#123;<span class=\"comment\">// 不是表达式复制单元格数据</span></span><br><span class=\"line\">                                    CellType cellType = cell.getCellType();</span><br><span class=\"line\">                                    <span class=\"keyword\">if</span> (cellType == CellType.NUMERIC) &#123;</span><br><span class=\"line\">                                        newCell.setCellValue(cell.getNumericCellValue());</span><br><span class=\"line\">                                    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (cellType == CellType.BOOLEAN) &#123;</span><br><span class=\"line\">                                        newCell.setCellValue(cell.getBooleanCellValue());</span><br><span class=\"line\">                                    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (cellType == CellType.STRING) &#123;</span><br><span class=\"line\">                                        newCell.setCellValue(cell.getStringCellValue());</span><br><span class=\"line\">                                    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (cellType == CellType.FORMULA) &#123;</span><br><span class=\"line\">                                        <span class=\"comment\">// 处理公式，待实现</span></span><br><span class=\"line\">                                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                                        newCell.setCellValue(cell.getStringCellValue());</span><br><span class=\"line\">                                    &#125;</span><br><span class=\"line\">                                &#125;</span><br><span class=\"line\">                            &#125;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    sheet.removeRow(listStartRow);<span class=\"comment\">// 删除list表达式行</span></span><br><span class=\"line\">                    sheet.shiftRows(listStartRowNum + <span class=\"number\">1</span>, sheet.getLastRowNum(), -<span class=\"number\">1</span>, <span class=\"keyword\">true</span>, <span class=\"keyword\">false</span>);<span class=\"comment\">// 数据区域上移一行，覆盖表达式行</span></span><br><span class=\"line\"></span><br><span class=\"line\">                    <span class=\"comment\">// 合并单元格处理</span></span><br><span class=\"line\">                    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; lastCellNum; i++) &#123;</span><br><span class=\"line\">                        CellRangeAddress mergedRangeAddress = getMergedRangeAddress(sheet, listStartRowNum, i);</span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (mergedRangeAddress != <span class=\"keyword\">null</span>) &#123;<span class=\"comment\">// 合并的单元格</span></span><br><span class=\"line\">                            i = mergedRangeAddress.getLastColumn();</span><br><span class=\"line\">                            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">1</span>; j &lt; dataList.size(); j++) &#123;</span><br><span class=\"line\">                                <span class=\"keyword\">int</span> newRowNum = listStartRowNum + j;</span><br><span class=\"line\">                                sheet.addMergedRegionUnsafe(<span class=\"keyword\">new</span> CellRangeAddress(newRowNum, newRowNum,</span><br><span class=\"line\">                                        mergedRangeAddress.getFirstColumn(), mergedRangeAddress.getLastColumn()));</span><br><span class=\"line\">                            &#125;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">// 公式生效</span></span><br><span class=\"line\">            sheet.setForceFormulaRecalculation(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">            sheet.getPrintSetup().setPaperSize(PrintSetup.A4_PAPERSIZE);</span><br><span class=\"line\">            sheet.getPrintSetup().setLandscape(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">            <span class=\"comment\">// FitHeight=1, 将所有行都缩放显示在一页上（设置1表示一页显示完，如果设置2表示分2页显示完）</span></span><br><span class=\"line\">            <span class=\"comment\">// FitWidth=1, 将所有列都缩放显示在一页上</span></span><br><span class=\"line\">            <span class=\"comment\">// 两个都等于1时，如果行数太多则会挤压列，一般来说只设置一个FitWidth=1，让行数自动换页</span></span><br><span class=\"line\">            <span class=\"comment\">// 要使这两个参数有效，则需要设置FitToPage=true</span></span><br><span class=\"line\">            sheet.setFitToPage(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">            sheet.getPrintSetup().setFitWidth((<span class=\"keyword\">short</span>) <span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"comment\">//          sheet.getPrintSetup().setFitHeight((short)1);</span></span><br><span class=\"line\">            <span class=\"comment\">// 是否显示自动换页符</span></span><br><span class=\"line\">            sheet.setAutobreaks(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">            ByteArrayOutputStream out = <span class=\"keyword\">new</span> ByteArrayOutputStream();</span><br><span class=\"line\">            workbook.write(out);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> out.toByteArray();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> ExcelException(<span class=\"string\">&quot;生成excel失败!&quot;</span>, e);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">setCellValue</span><span class=\"params\">(Cell cell, Object value)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (value <span class=\"keyword\">instanceof</span> Number) &#123;<span class=\"comment\">// 如果是数字类型的设置为数值</span></span><br><span class=\"line\">            cell.setCellValue(Double.parseDouble(value.toString()));</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (value <span class=\"keyword\">instanceof</span> Date) &#123;<span class=\"comment\">// 如果为时间类型的设置为时间</span></span><br><span class=\"line\">            cell.setCellValue((Date) value);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (value <span class=\"keyword\">instanceof</span> String) &#123;</span><br><span class=\"line\">            cell.setCellValue((String) value);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (value <span class=\"keyword\">instanceof</span> Boolean) &#123;</span><br><span class=\"line\">            cell.setCellValue((Boolean) value);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            cell.setCellValue(value.toString());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 获取指定行/列的合并单元格区域</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> sheet</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> row</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> column</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> CellRangeAddress 不是合并单元格返回null</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> CellRangeAddress <span class=\"title\">getMergedRangeAddress</span><span class=\"params\">(Sheet sheet, <span class=\"keyword\">int</span> row, <span class=\"keyword\">int</span> column)</span> </span>&#123;</span><br><span class=\"line\">        List&lt;CellRangeAddress&gt; mergedRegions = sheet.getMergedRegions();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (CellRangeAddress cellAddresses : mergedRegions) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (row &gt;= cellAddresses.getFirstRow() &amp;&amp; row &lt;= cellAddresses.getLastRow()</span><br><span class=\"line\">                    &amp;&amp; column &gt;= cellAddresses.getFirstColumn() &amp;&amp; column &lt;= cellAddresses.getLastColumn()) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> cellAddresses;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ExcelException</span> <span class=\"keyword\">extends</span> <span class=\"title\">RuntimeException</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">long</span> serialVersionUID = -<span class=\"number\">2772261598232964002L</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ExcelException</span><span class=\"params\">(String msg, Throwable e)</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">super</span>(msg, e);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ExcelException</span><span class=\"params\">(String msg)</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">super</span>(msg);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * Description: 1、通过浏览器以流的形式输出,为了处理中文表名问题.</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> bytes 文件对象</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> request</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> response</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> fileName 文件名</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">writeToResponse</span><span class=\"params\">(<span class=\"keyword\">byte</span>[] bytes, HttpServletRequest request, HttpServletResponse response, String fileName)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            String userAgent = request.getHeader(<span class=\"string\">&quot;User-Agent&quot;</span>);</span><br><span class=\"line\">            <span class=\"comment\">// 解决中文乱码问题</span></span><br><span class=\"line\">            String fileName1 =  fileName + <span class=\"string\">&quot;.xls&quot;</span>;</span><br><span class=\"line\">            String newFilename = URLEncoder.encode(fileName1, <span class=\"string\">&quot;UTF8&quot;</span>);</span><br><span class=\"line\">            <span class=\"comment\">// 如果没有userAgent，则默认使用IE的方式进行编码，因为毕竟IE还是占多数的</span></span><br><span class=\"line\">            String rtn = <span class=\"string\">&quot;filename=\\&quot;&quot;</span> + newFilename + <span class=\"string\">&quot;\\&quot;&quot;</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (userAgent != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                userAgent = userAgent.toLowerCase();</span><br><span class=\"line\">                <span class=\"comment\">// IE浏览器，只能采用URLEncoder编码</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (userAgent.indexOf(<span class=\"string\">&quot;IE&quot;</span>) != -<span class=\"number\">1</span>)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    rtn = <span class=\"string\">&quot;filename=\\&quot;&quot;</span> + newFilename + <span class=\"string\">&quot;\\&quot;&quot;</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"comment\">// Opera浏览器只能采用filename*</span></span><br><span class=\"line\">                <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (userAgent.indexOf(<span class=\"string\">&quot;OPERA&quot;</span>) != -<span class=\"number\">1</span>)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    rtn = <span class=\"string\">&quot;filename*=UTF-8&#x27;&#x27;&quot;</span> + newFilename;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"comment\">// Safari浏览器，只能采用ISO编码的中文输出</span></span><br><span class=\"line\">                <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (userAgent.indexOf(<span class=\"string\">&quot;SAFARI&quot;</span>) != -<span class=\"number\">1</span>)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    rtn = <span class=\"string\">&quot;filename=\\&quot;&quot;</span> + <span class=\"keyword\">new</span> String(fileName1.getBytes(<span class=\"string\">&quot;UTF-8&quot;</span>), <span class=\"string\">&quot;ISO8859-1&quot;</span>)</span><br><span class=\"line\">                            + <span class=\"string\">&quot;\\&quot;&quot;</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"comment\">// FireFox浏览器，可以使用MimeUtility或filename*或ISO编码的中文输出</span></span><br><span class=\"line\">                <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (userAgent.indexOf(<span class=\"string\">&quot;FIREFOX&quot;</span>) != -<span class=\"number\">1</span>)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    rtn = <span class=\"string\">&quot;filename*=UTF-8&#x27;&#x27;&quot;</span> + newFilename;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            String headStr = <span class=\"string\">&quot;attachment;  &quot;</span> + rtn;</span><br><span class=\"line\">            response.setContentType(<span class=\"string\">&quot;multipart/form-data&quot;</span>);</span><br><span class=\"line\">            response.setCharacterEncoding(<span class=\"string\">&quot;utf-8&quot;</span>);</span><br><span class=\"line\">            response.setHeader(<span class=\"string\">&quot;Content-Disposition&quot;</span>, headStr);</span><br><span class=\"line\">            <span class=\"comment\">// 响应到客户端</span></span><br><span class=\"line\">            OutputStream outputStream = response.getOutputStream();</span><br><span class=\"line\">            outputStream.write(bytes);</span><br><span class=\"line\">            outputStream.flush();</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (UnsupportedEncodingException e) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"模板制作\"><a href=\"#模板制作\" class=\"headerlink\" title=\"模板制作\"></a>模板制作</h2><p>制作模板时注意表格内数据与表头表尾数据变量命名区别，表格内数据变量前添加【.】用于标识表格数据。<br><img src=\"https://raw.githubusercontent.com/zhjAdm/ImageHosting/main/20211101104241.png\"></p>\n"},{"title":"滚动条探索之美化","abbrlink":8599,"date":"2021-05-07T13:28:37.000Z","description":"针对多种浏览器下，滚动条样式的修改。","_content":" \n# webkit下css实现样式修改\n基于webkit内核的浏览器可通过-webkit-scrollbar***伪元素***实现对滚动条样式的控制。\n``` css\n::-webkit-scrollbar — 整个滚动条.\n::-webkit-scrollbar-button — 滚动条上的按钮 (上下箭头).\n::-webkit-scrollbar-thumb — 滚动条上的滚动滑块.\n::-webkit-scrollbar-track — 滚动条轨道.\n::-webkit-scrollbar-track-piece — 滚动条没有滑块的轨道部分.\n::-webkit-scrollbar-corner — 当同时有垂直滚动条和水平滚动条时交汇的部分.\n::-webkit-resizer — 两个滚动条的交汇处上用于通过拖动调整元素大小的小控件\n```\n## 例子\n``` css\n    ::-webkit-scrollbar{/*滚动条整体*/\n        width: 45px;\n    }\n    ::-webkit-scrollbar-thumb{/*滚动条里面的小方块*/\n        background: #666666;\n        border-radius: 45px;\n    }\n    ::-webkit-scrollbar-track{/*滚动条轨道的样式*/\n        background: #ccc;\n        border-radius: 5px;\n    }\n    ::-webkit-scrollbar-track-piece{/*滚动条没有滑块的轨道样式*/\n        background: rgb(1, 117, 133);\n        border-radius: 45px;\n    }\n```\n![1-1](https://raw.githubusercontent.com/zhjAdm/ImageHosting/main/1-1.png)\n::-webkit-scrollbar 为一切的基础，并且所有的伪元素后面可通过添加:vertical和:horizontal两个***伪类***来是定所调整的为纵向还是横向滚动条。\n# IE下css实现样式修改\nIE浏览器仅支持修改颜色，无法对滚动条的形状大小进行修改。\n```css\n    scrollbar-arrow-color: color; /*三角箭头的颜色*/\n    scrollbar-face-color: color; /*立体滚动条的颜色（包括箭头部分的背景色）*/\n    scrollbar-3dlight-color: color; /*立体滚动条亮边的颜色*/\n    scrollbar-highlight-color: color; /*滚动条的高亮颜色（左阴影？）*/\n    scrollbar-shadow-color: color; /*立体滚动条阴影的颜色*/\n    scrollbar-darkshadow-color: color; /*立体滚动条外阴影的颜色*/\n    scrollbar-track-color: color; /*立体滚动条背景颜色*/\n    scrollbar-base-color:color; /*滚动条的基色*/\n```\n# NiceScroll插件实现滚动条美化\n### 介绍\n基于jQuery实现的滚动条插件，无需额外的css启用只需一行代码，灵活方便可完全自定义滚动条的样式。几乎兼容全部的浏览器，同时支持触摸事件。\n### 用法\n引入**jQuery**和**nicescroll**\n```html\n<div class=\"boxscroll\">\n    <div class=\"contentscroll\"></div>\n</div>\n```\n只需下面简单一行代码便可实现滚动条的开启,**nicescroll**不依赖原本浏览器样式。\n```js\n    $(\".boxscroll\").niceScroll();\n```\n效果如下：\n![](https://raw.githubusercontent.com/zhjAdm/ImageHosting/main/2021-05-18_20-05-41.png)\n\n修改样式也同样的方便，niceScroll()传入想修改的参数即可。\n```js\n    $(\".boxscroll\").niceScroll({cursorcolor:\"#F00\",cursoropacitymax:0.7});\n```\n![](https://raw.githubusercontent.com/zhjAdm/ImageHosting/main/2021-05-18_21-00-41.png)\n### 配置参数\n``` js\n    cursorcolor: \"#424242\", // 滚动条光标的颜色 change cursor color in hex\n    cursoropacitymin: 0, // 滚动条在不激活状态下的透明度，默认是0 change opacity when cursor is inactive (scrollabar \"hidden\" state), range from 1 to 0\n    cursoropacitymax: 1, //滚动条在激活状态下的透明度，默认是1 change opacity when cursor is active (scrollabar \"visible\" state), range from 1 to 0\n    cursorwidth: \"5px\", // 滚动条宽度 cursor width in pixel (you can also write \"5px\")\n    cursorborder: \"1px solid #fff\", //用css定义滚动条的边框 css definition for cursor border\n    cursorborderradius: \"5px\", //滚动条的圆角半径 border radius in pixel for cursor\n    zindex: \"auto\" | <number>, //改变滚动条div的z-index的值 change z-index for scrollbar div\n    scrollspeed: 60, // 滚动速度\n    mousescrollstep: 40, //使用鼠标轮滚的时候的滚动速度 scrolling speed with mouse wheel (pixel)\n    touchbehavior: false, //在桌面电脑上启用光标拖动，就像触摸设备那样 enable cursor-drag scrolling like touch devices in desktop computer\n    hwacceleration: true, //如果设备支持，则启用硬件加速 use hardware accelerated scroll when supported\n    boxzoom: false, //给盒子的内容启用放大缩小功能 enable zoom for box content\n    dblclickzoom: true, //双击放大，在boxzoom=true的情况下 (only when boxzoom=true) zoom activated when double click on box\n    gesturezoom: true, //手势放大缩小，在boxzoom=true的情况下 (only when boxzoom=true and with touch devices) zoom activated when pinch out/in on box\n    grabcursorenabled: true //这个可以禁用\"grab\"鼠标光标 (only when touchbehavior=true) display \"grab\" icon\n    autohidemode: true, //设置在什么情况下隐藏scrollbar。 how hide the scrollbar works, possible values: \n      true | // 在不滚动情况下隐藏。 hide when no scrolling\n      \"cursor\" | //只隐藏光标 only cursor hidden\n      false | //始终不隐藏 do not hide,\n      \"leave\" | //只在鼠标离开内容区是隐藏 hide only if pointer leaves content\n      \"hidden\" | //使用隐藏 hide always\n      \"scroll\", //只在滚动的情况下显示，在不滚动的时候隐藏 show only on scroll          \n    background: \"\", //设置背景颜色 change css for rail background\n    iframeautoresize: true, //在iframe的load事件中自动设置大小 autoresize iframe on load event\n    cursorminheight: 32, //设置最小的光标高度 set the minimum cursor height (pixel)\n    preservenativescrolling: true, //这个设置通过事件冒泡的方式使你能够滚动原生的滚动条。 you can scroll native scrollable areas with mouse, bubbling mouse wheel event\n    railoffset: false, //设置轨道的上或者左的偏移 you can add offset top/left for rail position\n    bouncescroll: false, //启用向手机上面的那种滚动回弹 (only hw accell) enable scroll bouncing at the end of content as mobile-like \n    spacebarenabled: true, // enable page down scrolling when space bar has pressed\n    railpadding: { top: 0, right: 0, left: 0, bottom: 0 }, //设置轨道的内间距 set padding for rail bar\n    disableoutline: true, //在chrome浏览器上选择一个div使用nicescroll时禁用outline， for chrome browser, disable outline (orange highlight) when selecting a div with nicescroll\n    horizrailenabled: true, //设置是否处理水平滚动 nicescroll can manage horizontal scroll\n    railalign: right, //垂直对齐方式 alignment of vertical rail\n    railvalign: bottom, //水平对齐方式 alignment of horizontal rail\n    enabletranslate3d: true, //设置nicescroll是否使用css translate去滚动内容 nicescroll can use css translate to scroll content\n    enablemousewheel: true, //设置是否响应鼠标滚动事件 nicescroll can manage mouse wheel events\n    enablekeyboard: true, //设置是否响应键盘事件 nicescroll can manage keyboard events\n    smoothscroll: true, //使用平滑滚动 scroll with ease movement\n    sensitiverail: true, //在轨道上点击时是否滚动 click on rail make a scroll\n    enablemouselockapi: true, // can use mouse caption lock API (same issue on object dragging)\n    cursorfixedheight: false, //给光标设置固定的高度 set fixed height for cursor in pixel\n    hidecursordelay: 400, //设置隐藏光标的延迟时间，单位是毫秒 set the delay in microseconds to fading out scrollbars\n    directionlockdeadzone: 6, // dead zone in pixels for direction lock activation\n    nativeparentscrolling: true, //检测内容的底部和父节点是否允许滚动，像原生滚动条的实现方式 detect bottom of content and let parent to scroll, as native scroll does\n    enablescrollonselection: true, //在选择文字的时候自动滚动内容 enable auto-scrolling of content when selection text\n    cursordragspeed: 0.3, //当拖动光标时候的速度 speed of selection when dragged with cursor\n    rtlmode: \"auto\", //设置水平滚动div的起始边是左还是右 horizontal div scrolling starts at left side\n    cursordragontouch: false, //设置在触摸模式下，是否可以拖动光标就可以滚动 drag cursor in touch / touchbehavior mode also\n    oneaxismousemode: \"auto\", //设置鼠标滚轮在只有水平模式的情况下是否可用 it permits horizontal scrolling with mousewheel on horizontal only content, if false (vertical-only) mousewheel don't scroll horizontally, if value is auto detects two-axis mouse\n    scriptpath: \"\" //设置box模式下图标的路径，设成\"\"表示和script是同一个路径 define custom path for boxmode icons (\"\" => same script path)\n    preventmultitouchscrolling: true //防止在多点触摸情况下滚动 prevent scrolling on multitouch events\n    disablemutationobserver: false //稳定滚动条 force MutationObserver disabled\n```","source":"_posts/滚动条探索之美化.md","raw":"---\ntitle: 滚动条探索之美化\nabbrlink: 8599\ndate: 2021-05-07 21:28:37\ntags: [css,滚动条]\ncategories: 前端\ndescription: 针对多种浏览器下，滚动条样式的修改。\n--- \n# webkit下css实现样式修改\n基于webkit内核的浏览器可通过-webkit-scrollbar***伪元素***实现对滚动条样式的控制。\n``` css\n::-webkit-scrollbar — 整个滚动条.\n::-webkit-scrollbar-button — 滚动条上的按钮 (上下箭头).\n::-webkit-scrollbar-thumb — 滚动条上的滚动滑块.\n::-webkit-scrollbar-track — 滚动条轨道.\n::-webkit-scrollbar-track-piece — 滚动条没有滑块的轨道部分.\n::-webkit-scrollbar-corner — 当同时有垂直滚动条和水平滚动条时交汇的部分.\n::-webkit-resizer — 两个滚动条的交汇处上用于通过拖动调整元素大小的小控件\n```\n## 例子\n``` css\n    ::-webkit-scrollbar{/*滚动条整体*/\n        width: 45px;\n    }\n    ::-webkit-scrollbar-thumb{/*滚动条里面的小方块*/\n        background: #666666;\n        border-radius: 45px;\n    }\n    ::-webkit-scrollbar-track{/*滚动条轨道的样式*/\n        background: #ccc;\n        border-radius: 5px;\n    }\n    ::-webkit-scrollbar-track-piece{/*滚动条没有滑块的轨道样式*/\n        background: rgb(1, 117, 133);\n        border-radius: 45px;\n    }\n```\n![1-1](https://raw.githubusercontent.com/zhjAdm/ImageHosting/main/1-1.png)\n::-webkit-scrollbar 为一切的基础，并且所有的伪元素后面可通过添加:vertical和:horizontal两个***伪类***来是定所调整的为纵向还是横向滚动条。\n# IE下css实现样式修改\nIE浏览器仅支持修改颜色，无法对滚动条的形状大小进行修改。\n```css\n    scrollbar-arrow-color: color; /*三角箭头的颜色*/\n    scrollbar-face-color: color; /*立体滚动条的颜色（包括箭头部分的背景色）*/\n    scrollbar-3dlight-color: color; /*立体滚动条亮边的颜色*/\n    scrollbar-highlight-color: color; /*滚动条的高亮颜色（左阴影？）*/\n    scrollbar-shadow-color: color; /*立体滚动条阴影的颜色*/\n    scrollbar-darkshadow-color: color; /*立体滚动条外阴影的颜色*/\n    scrollbar-track-color: color; /*立体滚动条背景颜色*/\n    scrollbar-base-color:color; /*滚动条的基色*/\n```\n# NiceScroll插件实现滚动条美化\n### 介绍\n基于jQuery实现的滚动条插件，无需额外的css启用只需一行代码，灵活方便可完全自定义滚动条的样式。几乎兼容全部的浏览器，同时支持触摸事件。\n### 用法\n引入**jQuery**和**nicescroll**\n```html\n<div class=\"boxscroll\">\n    <div class=\"contentscroll\"></div>\n</div>\n```\n只需下面简单一行代码便可实现滚动条的开启,**nicescroll**不依赖原本浏览器样式。\n```js\n    $(\".boxscroll\").niceScroll();\n```\n效果如下：\n![](https://raw.githubusercontent.com/zhjAdm/ImageHosting/main/2021-05-18_20-05-41.png)\n\n修改样式也同样的方便，niceScroll()传入想修改的参数即可。\n```js\n    $(\".boxscroll\").niceScroll({cursorcolor:\"#F00\",cursoropacitymax:0.7});\n```\n![](https://raw.githubusercontent.com/zhjAdm/ImageHosting/main/2021-05-18_21-00-41.png)\n### 配置参数\n``` js\n    cursorcolor: \"#424242\", // 滚动条光标的颜色 change cursor color in hex\n    cursoropacitymin: 0, // 滚动条在不激活状态下的透明度，默认是0 change opacity when cursor is inactive (scrollabar \"hidden\" state), range from 1 to 0\n    cursoropacitymax: 1, //滚动条在激活状态下的透明度，默认是1 change opacity when cursor is active (scrollabar \"visible\" state), range from 1 to 0\n    cursorwidth: \"5px\", // 滚动条宽度 cursor width in pixel (you can also write \"5px\")\n    cursorborder: \"1px solid #fff\", //用css定义滚动条的边框 css definition for cursor border\n    cursorborderradius: \"5px\", //滚动条的圆角半径 border radius in pixel for cursor\n    zindex: \"auto\" | <number>, //改变滚动条div的z-index的值 change z-index for scrollbar div\n    scrollspeed: 60, // 滚动速度\n    mousescrollstep: 40, //使用鼠标轮滚的时候的滚动速度 scrolling speed with mouse wheel (pixel)\n    touchbehavior: false, //在桌面电脑上启用光标拖动，就像触摸设备那样 enable cursor-drag scrolling like touch devices in desktop computer\n    hwacceleration: true, //如果设备支持，则启用硬件加速 use hardware accelerated scroll when supported\n    boxzoom: false, //给盒子的内容启用放大缩小功能 enable zoom for box content\n    dblclickzoom: true, //双击放大，在boxzoom=true的情况下 (only when boxzoom=true) zoom activated when double click on box\n    gesturezoom: true, //手势放大缩小，在boxzoom=true的情况下 (only when boxzoom=true and with touch devices) zoom activated when pinch out/in on box\n    grabcursorenabled: true //这个可以禁用\"grab\"鼠标光标 (only when touchbehavior=true) display \"grab\" icon\n    autohidemode: true, //设置在什么情况下隐藏scrollbar。 how hide the scrollbar works, possible values: \n      true | // 在不滚动情况下隐藏。 hide when no scrolling\n      \"cursor\" | //只隐藏光标 only cursor hidden\n      false | //始终不隐藏 do not hide,\n      \"leave\" | //只在鼠标离开内容区是隐藏 hide only if pointer leaves content\n      \"hidden\" | //使用隐藏 hide always\n      \"scroll\", //只在滚动的情况下显示，在不滚动的时候隐藏 show only on scroll          \n    background: \"\", //设置背景颜色 change css for rail background\n    iframeautoresize: true, //在iframe的load事件中自动设置大小 autoresize iframe on load event\n    cursorminheight: 32, //设置最小的光标高度 set the minimum cursor height (pixel)\n    preservenativescrolling: true, //这个设置通过事件冒泡的方式使你能够滚动原生的滚动条。 you can scroll native scrollable areas with mouse, bubbling mouse wheel event\n    railoffset: false, //设置轨道的上或者左的偏移 you can add offset top/left for rail position\n    bouncescroll: false, //启用向手机上面的那种滚动回弹 (only hw accell) enable scroll bouncing at the end of content as mobile-like \n    spacebarenabled: true, // enable page down scrolling when space bar has pressed\n    railpadding: { top: 0, right: 0, left: 0, bottom: 0 }, //设置轨道的内间距 set padding for rail bar\n    disableoutline: true, //在chrome浏览器上选择一个div使用nicescroll时禁用outline， for chrome browser, disable outline (orange highlight) when selecting a div with nicescroll\n    horizrailenabled: true, //设置是否处理水平滚动 nicescroll can manage horizontal scroll\n    railalign: right, //垂直对齐方式 alignment of vertical rail\n    railvalign: bottom, //水平对齐方式 alignment of horizontal rail\n    enabletranslate3d: true, //设置nicescroll是否使用css translate去滚动内容 nicescroll can use css translate to scroll content\n    enablemousewheel: true, //设置是否响应鼠标滚动事件 nicescroll can manage mouse wheel events\n    enablekeyboard: true, //设置是否响应键盘事件 nicescroll can manage keyboard events\n    smoothscroll: true, //使用平滑滚动 scroll with ease movement\n    sensitiverail: true, //在轨道上点击时是否滚动 click on rail make a scroll\n    enablemouselockapi: true, // can use mouse caption lock API (same issue on object dragging)\n    cursorfixedheight: false, //给光标设置固定的高度 set fixed height for cursor in pixel\n    hidecursordelay: 400, //设置隐藏光标的延迟时间，单位是毫秒 set the delay in microseconds to fading out scrollbars\n    directionlockdeadzone: 6, // dead zone in pixels for direction lock activation\n    nativeparentscrolling: true, //检测内容的底部和父节点是否允许滚动，像原生滚动条的实现方式 detect bottom of content and let parent to scroll, as native scroll does\n    enablescrollonselection: true, //在选择文字的时候自动滚动内容 enable auto-scrolling of content when selection text\n    cursordragspeed: 0.3, //当拖动光标时候的速度 speed of selection when dragged with cursor\n    rtlmode: \"auto\", //设置水平滚动div的起始边是左还是右 horizontal div scrolling starts at left side\n    cursordragontouch: false, //设置在触摸模式下，是否可以拖动光标就可以滚动 drag cursor in touch / touchbehavior mode also\n    oneaxismousemode: \"auto\", //设置鼠标滚轮在只有水平模式的情况下是否可用 it permits horizontal scrolling with mousewheel on horizontal only content, if false (vertical-only) mousewheel don't scroll horizontally, if value is auto detects two-axis mouse\n    scriptpath: \"\" //设置box模式下图标的路径，设成\"\"表示和script是同一个路径 define custom path for boxmode icons (\"\" => same script path)\n    preventmultitouchscrolling: true //防止在多点触摸情况下滚动 prevent scrolling on multitouch events\n    disablemutationobserver: false //稳定滚动条 force MutationObserver disabled\n```","slug":"滚动条探索之美化","published":1,"updated":"2021-06-20T13:25:25.791Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckvg2kqb20007x0u1ed1eei3g","content":"<h1 id=\"webkit下css实现样式修改\"><a href=\"#webkit下css实现样式修改\" class=\"headerlink\" title=\"webkit下css实现样式修改\"></a>webkit下css实现样式修改</h1><p>基于webkit内核的浏览器可通过-webkit-scrollbar<em><strong>伪元素</strong></em>实现对滚动条样式的控制。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">::-webkit-scrollbar — 整个滚动条.</span><br><span class=\"line\">::-webkit-scrollbar-button — 滚动条上的按钮 (上下箭头).</span><br><span class=\"line\">::-webkit-scrollbar-thumb — 滚动条上的滚动滑块.</span><br><span class=\"line\">::-webkit-scrollbar-track — 滚动条轨道.</span><br><span class=\"line\">::-webkit-scrollbar-track-piece — 滚动条没有滑块的轨道部分.</span><br><span class=\"line\">::-webkit-scrollbar-corner — 当同时有垂直滚动条和水平滚动条时交汇的部分.</span><br><span class=\"line\">::-webkit-resizer — 两个滚动条的交汇处上用于通过拖动调整元素大小的小控件</span><br></pre></td></tr></table></figure>\n<h2 id=\"例子\"><a href=\"#例子\" class=\"headerlink\" title=\"例子\"></a>例子</h2><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">::-webkit-scrollbar&#123;/*滚动条整体*/</span><br><span class=\"line\">    width: <span class=\"number\">45px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">::-webkit-scrollbar-thumb&#123;/*滚动条里面的小方块*/</span><br><span class=\"line\">    background: <span class=\"number\">#666666</span>;</span><br><span class=\"line\">    <span class=\"attribute\">border-radius</span>: <span class=\"number\">45px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">::-webkit-scrollbar-track&#123;/*滚动条轨道的样式*/</span><br><span class=\"line\">    background: <span class=\"number\">#ccc</span>;</span><br><span class=\"line\">    <span class=\"attribute\">border-radius</span>: <span class=\"number\">5px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">::-webkit-scrollbar-track-piece&#123;/*滚动条没有滑块的轨道样式*/</span><br><span class=\"line\">    background: <span class=\"built_in\">rgb</span>(<span class=\"number\">1</span>, <span class=\"number\">117</span>, <span class=\"number\">133</span>);</span><br><span class=\"line\">    <span class=\"attribute\">border-radius</span>: <span class=\"number\">45px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://raw.githubusercontent.com/zhjAdm/ImageHosting/main/1-1.png\" alt=\"1-1\"><br>::-webkit-scrollbar 为一切的基础，并且所有的伪元素后面可通过添加:vertical和:horizontal两个<em><strong>伪类</strong></em>来是定所调整的为纵向还是横向滚动条。</p>\n<h1 id=\"IE下css实现样式修改\"><a href=\"#IE下css实现样式修改\" class=\"headerlink\" title=\"IE下css实现样式修改\"></a>IE下css实现样式修改</h1><p>IE浏览器仅支持修改颜色，无法对滚动条的形状大小进行修改。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scrollbar-arrow-<span class=\"attribute\">color</span>: color; <span class=\"comment\">/*三角箭头的颜色*/</span></span><br><span class=\"line\">scrollbar-face-<span class=\"attribute\">color</span>: color; <span class=\"comment\">/*立体滚动条的颜色（包括箭头部分的背景色）*/</span></span><br><span class=\"line\">scrollbar-<span class=\"number\">3</span>dlight-<span class=\"attribute\">color</span>: color; <span class=\"comment\">/*立体滚动条亮边的颜色*/</span></span><br><span class=\"line\">scrollbar-highlight-<span class=\"attribute\">color</span>: color; <span class=\"comment\">/*滚动条的高亮颜色（左阴影？）*/</span></span><br><span class=\"line\">scrollbar-shadow-<span class=\"attribute\">color</span>: color; <span class=\"comment\">/*立体滚动条阴影的颜色*/</span></span><br><span class=\"line\">scrollbar-darkshadow-<span class=\"attribute\">color</span>: color; <span class=\"comment\">/*立体滚动条外阴影的颜色*/</span></span><br><span class=\"line\">scrollbar-track-<span class=\"attribute\">color</span>: color; <span class=\"comment\">/*立体滚动条背景颜色*/</span></span><br><span class=\"line\">scrollbar-base-<span class=\"attribute\">color</span>:color; <span class=\"comment\">/*滚动条的基色*/</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"NiceScroll插件实现滚动条美化\"><a href=\"#NiceScroll插件实现滚动条美化\" class=\"headerlink\" title=\"NiceScroll插件实现滚动条美化\"></a>NiceScroll插件实现滚动条美化</h1><h3 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h3><p>基于jQuery实现的滚动条插件，无需额外的css启用只需一行代码，灵活方便可完全自定义滚动条的样式。几乎兼容全部的浏览器，同时支持触摸事件。</p>\n<h3 id=\"用法\"><a href=\"#用法\" class=\"headerlink\" title=\"用法\"></a>用法</h3><p>引入<strong>jQuery</strong>和<strong>nicescroll</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;boxscroll&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;contentscroll&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>只需下面简单一行代码便可实现滚动条的开启,<strong>nicescroll</strong>不依赖原本浏览器样式。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">&quot;.boxscroll&quot;</span>).niceScroll();</span><br></pre></td></tr></table></figure>\n<p>效果如下：<br><img src=\"https://raw.githubusercontent.com/zhjAdm/ImageHosting/main/2021-05-18_20-05-41.png\"></p>\n<p>修改样式也同样的方便，niceScroll()传入想修改的参数即可。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">&quot;.boxscroll&quot;</span>).niceScroll(&#123;<span class=\"attr\">cursorcolor</span>:<span class=\"string\">&quot;#F00&quot;</span>,<span class=\"attr\">cursoropacitymax</span>:<span class=\"number\">0.7</span>&#125;);</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://raw.githubusercontent.com/zhjAdm/ImageHosting/main/2021-05-18_21-00-41.png\"></p>\n<h3 id=\"配置参数\"><a href=\"#配置参数\" class=\"headerlink\" title=\"配置参数\"></a>配置参数</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cursorcolor: <span class=\"string\">&quot;#424242&quot;</span>, <span class=\"comment\">// 滚动条光标的颜色 change cursor color in hex</span></span><br><span class=\"line\">cursoropacitymin: <span class=\"number\">0</span>, <span class=\"comment\">// 滚动条在不激活状态下的透明度，默认是0 change opacity when cursor is inactive (scrollabar &quot;hidden&quot; state), range from 1 to 0</span></span><br><span class=\"line\">cursoropacitymax: <span class=\"number\">1</span>, <span class=\"comment\">//滚动条在激活状态下的透明度，默认是1 change opacity when cursor is active (scrollabar &quot;visible&quot; state), range from 1 to 0</span></span><br><span class=\"line\">cursorwidth: <span class=\"string\">&quot;5px&quot;</span>, <span class=\"comment\">// 滚动条宽度 cursor width in pixel (you can also write &quot;5px&quot;)</span></span><br><span class=\"line\">cursorborder: <span class=\"string\">&quot;1px solid #fff&quot;</span>, <span class=\"comment\">//用css定义滚动条的边框 css definition for cursor border</span></span><br><span class=\"line\">cursorborderradius: <span class=\"string\">&quot;5px&quot;</span>, <span class=\"comment\">//滚动条的圆角半径 border radius in pixel for cursor</span></span><br><span class=\"line\">zindex: <span class=\"string\">&quot;auto&quot;</span> | &lt;number&gt;, <span class=\"comment\">//改变滚动条div的z-index的值 change z-index for scrollbar div</span></span><br><span class=\"line\">scrollspeed: <span class=\"number\">60</span>, <span class=\"comment\">// 滚动速度</span></span><br><span class=\"line\">mousescrollstep: <span class=\"number\">40</span>, <span class=\"comment\">//使用鼠标轮滚的时候的滚动速度 scrolling speed with mouse wheel (pixel)</span></span><br><span class=\"line\">touchbehavior: <span class=\"literal\">false</span>, <span class=\"comment\">//在桌面电脑上启用光标拖动，就像触摸设备那样 enable cursor-drag scrolling like touch devices in desktop computer</span></span><br><span class=\"line\">hwacceleration: <span class=\"literal\">true</span>, <span class=\"comment\">//如果设备支持，则启用硬件加速 use hardware accelerated scroll when supported</span></span><br><span class=\"line\">boxzoom: <span class=\"literal\">false</span>, <span class=\"comment\">//给盒子的内容启用放大缩小功能 enable zoom for box content</span></span><br><span class=\"line\">dblclickzoom: <span class=\"literal\">true</span>, <span class=\"comment\">//双击放大，在boxzoom=true的情况下 (only when boxzoom=true) zoom activated when double click on box</span></span><br><span class=\"line\">gesturezoom: <span class=\"literal\">true</span>, <span class=\"comment\">//手势放大缩小，在boxzoom=true的情况下 (only when boxzoom=true and with touch devices) zoom activated when pinch out/in on box</span></span><br><span class=\"line\">grabcursorenabled: <span class=\"literal\">true</span> <span class=\"comment\">//这个可以禁用&quot;grab&quot;鼠标光标 (only when touchbehavior=true) display &quot;grab&quot; icon</span></span><br><span class=\"line\">autohidemode: <span class=\"literal\">true</span>, <span class=\"comment\">//设置在什么情况下隐藏scrollbar。 how hide the scrollbar works, possible values: </span></span><br><span class=\"line\">  <span class=\"literal\">true</span> | <span class=\"comment\">// 在不滚动情况下隐藏。 hide when no scrolling</span></span><br><span class=\"line\">  <span class=\"string\">&quot;cursor&quot;</span> | <span class=\"comment\">//只隐藏光标 only cursor hidden</span></span><br><span class=\"line\">  <span class=\"literal\">false</span> | <span class=\"comment\">//始终不隐藏 do not hide,</span></span><br><span class=\"line\">  <span class=\"string\">&quot;leave&quot;</span> | <span class=\"comment\">//只在鼠标离开内容区是隐藏 hide only if pointer leaves content</span></span><br><span class=\"line\">  <span class=\"string\">&quot;hidden&quot;</span> | <span class=\"comment\">//使用隐藏 hide always</span></span><br><span class=\"line\">  <span class=\"string\">&quot;scroll&quot;</span>, <span class=\"comment\">//只在滚动的情况下显示，在不滚动的时候隐藏 show only on scroll          </span></span><br><span class=\"line\">background: <span class=\"string\">&quot;&quot;</span>, <span class=\"comment\">//设置背景颜色 change css for rail background</span></span><br><span class=\"line\">iframeautoresize: <span class=\"literal\">true</span>, <span class=\"comment\">//在iframe的load事件中自动设置大小 autoresize iframe on load event</span></span><br><span class=\"line\">cursorminheight: <span class=\"number\">32</span>, <span class=\"comment\">//设置最小的光标高度 set the minimum cursor height (pixel)</span></span><br><span class=\"line\">preservenativescrolling: <span class=\"literal\">true</span>, <span class=\"comment\">//这个设置通过事件冒泡的方式使你能够滚动原生的滚动条。 you can scroll native scrollable areas with mouse, bubbling mouse wheel event</span></span><br><span class=\"line\">railoffset: <span class=\"literal\">false</span>, <span class=\"comment\">//设置轨道的上或者左的偏移 you can add offset top/left for rail position</span></span><br><span class=\"line\">bouncescroll: <span class=\"literal\">false</span>, <span class=\"comment\">//启用向手机上面的那种滚动回弹 (only hw accell) enable scroll bouncing at the end of content as mobile-like </span></span><br><span class=\"line\">spacebarenabled: <span class=\"literal\">true</span>, <span class=\"comment\">// enable page down scrolling when space bar has pressed</span></span><br><span class=\"line\">railpadding: &#123; <span class=\"attr\">top</span>: <span class=\"number\">0</span>, <span class=\"attr\">right</span>: <span class=\"number\">0</span>, <span class=\"attr\">left</span>: <span class=\"number\">0</span>, <span class=\"attr\">bottom</span>: <span class=\"number\">0</span> &#125;, <span class=\"comment\">//设置轨道的内间距 set padding for rail bar</span></span><br><span class=\"line\">disableoutline: <span class=\"literal\">true</span>, <span class=\"comment\">//在chrome浏览器上选择一个div使用nicescroll时禁用outline， for chrome browser, disable outline (orange highlight) when selecting a div with nicescroll</span></span><br><span class=\"line\">horizrailenabled: <span class=\"literal\">true</span>, <span class=\"comment\">//设置是否处理水平滚动 nicescroll can manage horizontal scroll</span></span><br><span class=\"line\">railalign: right, <span class=\"comment\">//垂直对齐方式 alignment of vertical rail</span></span><br><span class=\"line\">railvalign: bottom, <span class=\"comment\">//水平对齐方式 alignment of horizontal rail</span></span><br><span class=\"line\">enabletranslate3d: <span class=\"literal\">true</span>, <span class=\"comment\">//设置nicescroll是否使用css translate去滚动内容 nicescroll can use css translate to scroll content</span></span><br><span class=\"line\">enablemousewheel: <span class=\"literal\">true</span>, <span class=\"comment\">//设置是否响应鼠标滚动事件 nicescroll can manage mouse wheel events</span></span><br><span class=\"line\">enablekeyboard: <span class=\"literal\">true</span>, <span class=\"comment\">//设置是否响应键盘事件 nicescroll can manage keyboard events</span></span><br><span class=\"line\">smoothscroll: <span class=\"literal\">true</span>, <span class=\"comment\">//使用平滑滚动 scroll with ease movement</span></span><br><span class=\"line\">sensitiverail: <span class=\"literal\">true</span>, <span class=\"comment\">//在轨道上点击时是否滚动 click on rail make a scroll</span></span><br><span class=\"line\">enablemouselockapi: <span class=\"literal\">true</span>, <span class=\"comment\">// can use mouse caption lock API (same issue on object dragging)</span></span><br><span class=\"line\">cursorfixedheight: <span class=\"literal\">false</span>, <span class=\"comment\">//给光标设置固定的高度 set fixed height for cursor in pixel</span></span><br><span class=\"line\">hidecursordelay: <span class=\"number\">400</span>, <span class=\"comment\">//设置隐藏光标的延迟时间，单位是毫秒 set the delay in microseconds to fading out scrollbars</span></span><br><span class=\"line\">directionlockdeadzone: <span class=\"number\">6</span>, <span class=\"comment\">// dead zone in pixels for direction lock activation</span></span><br><span class=\"line\">nativeparentscrolling: <span class=\"literal\">true</span>, <span class=\"comment\">//检测内容的底部和父节点是否允许滚动，像原生滚动条的实现方式 detect bottom of content and let parent to scroll, as native scroll does</span></span><br><span class=\"line\">enablescrollonselection: <span class=\"literal\">true</span>, <span class=\"comment\">//在选择文字的时候自动滚动内容 enable auto-scrolling of content when selection text</span></span><br><span class=\"line\">cursordragspeed: <span class=\"number\">0.3</span>, <span class=\"comment\">//当拖动光标时候的速度 speed of selection when dragged with cursor</span></span><br><span class=\"line\">rtlmode: <span class=\"string\">&quot;auto&quot;</span>, <span class=\"comment\">//设置水平滚动div的起始边是左还是右 horizontal div scrolling starts at left side</span></span><br><span class=\"line\">cursordragontouch: <span class=\"literal\">false</span>, <span class=\"comment\">//设置在触摸模式下，是否可以拖动光标就可以滚动 drag cursor in touch / touchbehavior mode also</span></span><br><span class=\"line\">oneaxismousemode: <span class=\"string\">&quot;auto&quot;</span>, <span class=\"comment\">//设置鼠标滚轮在只有水平模式的情况下是否可用 it permits horizontal scrolling with mousewheel on horizontal only content, if false (vertical-only) mousewheel don&#x27;t scroll horizontally, if value is auto detects two-axis mouse</span></span><br><span class=\"line\">scriptpath: <span class=\"string\">&quot;&quot;</span> <span class=\"comment\">//设置box模式下图标的路径，设成&quot;&quot;表示和script是同一个路径 define custom path for boxmode icons (&quot;&quot; =&gt; same script path)</span></span><br><span class=\"line\">preventmultitouchscrolling: <span class=\"literal\">true</span> <span class=\"comment\">//防止在多点触摸情况下滚动 prevent scrolling on multitouch events</span></span><br><span class=\"line\">disablemutationobserver: <span class=\"literal\">false</span> <span class=\"comment\">//稳定滚动条 force MutationObserver disabled</span></span><br></pre></td></tr></table></figure>","site":{"data":{"styles":"/* build time:Mon Nov 01 2021 10:55:19 GMT+0800 (中国标准时间)*/\n.sidebar{box-shadow:none;background:0 0}body{background:url(/images/yourbackground.png);background-repeat:no-repeat;background-attachment:fixed;background-size:cover;background-position:50% 50%}.back-to-top.back-to-top-on{display:none}\n/* rebuild by neat */","variables":"/* build time:Mon Nov 01 2021 10:55:19 GMT+0800 (中国标准时间)*/\n\n/* rebuild by neat */"}},"length":5850,"excerpt":"","more":"<h1 id=\"webkit下css实现样式修改\"><a href=\"#webkit下css实现样式修改\" class=\"headerlink\" title=\"webkit下css实现样式修改\"></a>webkit下css实现样式修改</h1><p>基于webkit内核的浏览器可通过-webkit-scrollbar<em><strong>伪元素</strong></em>实现对滚动条样式的控制。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">::-webkit-scrollbar — 整个滚动条.</span><br><span class=\"line\">::-webkit-scrollbar-button — 滚动条上的按钮 (上下箭头).</span><br><span class=\"line\">::-webkit-scrollbar-thumb — 滚动条上的滚动滑块.</span><br><span class=\"line\">::-webkit-scrollbar-track — 滚动条轨道.</span><br><span class=\"line\">::-webkit-scrollbar-track-piece — 滚动条没有滑块的轨道部分.</span><br><span class=\"line\">::-webkit-scrollbar-corner — 当同时有垂直滚动条和水平滚动条时交汇的部分.</span><br><span class=\"line\">::-webkit-resizer — 两个滚动条的交汇处上用于通过拖动调整元素大小的小控件</span><br></pre></td></tr></table></figure>\n<h2 id=\"例子\"><a href=\"#例子\" class=\"headerlink\" title=\"例子\"></a>例子</h2><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">::-webkit-scrollbar&#123;/*滚动条整体*/</span><br><span class=\"line\">    width: <span class=\"number\">45px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">::-webkit-scrollbar-thumb&#123;/*滚动条里面的小方块*/</span><br><span class=\"line\">    background: <span class=\"number\">#666666</span>;</span><br><span class=\"line\">    <span class=\"attribute\">border-radius</span>: <span class=\"number\">45px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">::-webkit-scrollbar-track&#123;/*滚动条轨道的样式*/</span><br><span class=\"line\">    background: <span class=\"number\">#ccc</span>;</span><br><span class=\"line\">    <span class=\"attribute\">border-radius</span>: <span class=\"number\">5px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">::-webkit-scrollbar-track-piece&#123;/*滚动条没有滑块的轨道样式*/</span><br><span class=\"line\">    background: <span class=\"built_in\">rgb</span>(<span class=\"number\">1</span>, <span class=\"number\">117</span>, <span class=\"number\">133</span>);</span><br><span class=\"line\">    <span class=\"attribute\">border-radius</span>: <span class=\"number\">45px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://raw.githubusercontent.com/zhjAdm/ImageHosting/main/1-1.png\" alt=\"1-1\"><br>::-webkit-scrollbar 为一切的基础，并且所有的伪元素后面可通过添加:vertical和:horizontal两个<em><strong>伪类</strong></em>来是定所调整的为纵向还是横向滚动条。</p>\n<h1 id=\"IE下css实现样式修改\"><a href=\"#IE下css实现样式修改\" class=\"headerlink\" title=\"IE下css实现样式修改\"></a>IE下css实现样式修改</h1><p>IE浏览器仅支持修改颜色，无法对滚动条的形状大小进行修改。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scrollbar-arrow-<span class=\"attribute\">color</span>: color; <span class=\"comment\">/*三角箭头的颜色*/</span></span><br><span class=\"line\">scrollbar-face-<span class=\"attribute\">color</span>: color; <span class=\"comment\">/*立体滚动条的颜色（包括箭头部分的背景色）*/</span></span><br><span class=\"line\">scrollbar-<span class=\"number\">3</span>dlight-<span class=\"attribute\">color</span>: color; <span class=\"comment\">/*立体滚动条亮边的颜色*/</span></span><br><span class=\"line\">scrollbar-highlight-<span class=\"attribute\">color</span>: color; <span class=\"comment\">/*滚动条的高亮颜色（左阴影？）*/</span></span><br><span class=\"line\">scrollbar-shadow-<span class=\"attribute\">color</span>: color; <span class=\"comment\">/*立体滚动条阴影的颜色*/</span></span><br><span class=\"line\">scrollbar-darkshadow-<span class=\"attribute\">color</span>: color; <span class=\"comment\">/*立体滚动条外阴影的颜色*/</span></span><br><span class=\"line\">scrollbar-track-<span class=\"attribute\">color</span>: color; <span class=\"comment\">/*立体滚动条背景颜色*/</span></span><br><span class=\"line\">scrollbar-base-<span class=\"attribute\">color</span>:color; <span class=\"comment\">/*滚动条的基色*/</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"NiceScroll插件实现滚动条美化\"><a href=\"#NiceScroll插件实现滚动条美化\" class=\"headerlink\" title=\"NiceScroll插件实现滚动条美化\"></a>NiceScroll插件实现滚动条美化</h1><h3 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h3><p>基于jQuery实现的滚动条插件，无需额外的css启用只需一行代码，灵活方便可完全自定义滚动条的样式。几乎兼容全部的浏览器，同时支持触摸事件。</p>\n<h3 id=\"用法\"><a href=\"#用法\" class=\"headerlink\" title=\"用法\"></a>用法</h3><p>引入<strong>jQuery</strong>和<strong>nicescroll</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;boxscroll&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;contentscroll&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>只需下面简单一行代码便可实现滚动条的开启,<strong>nicescroll</strong>不依赖原本浏览器样式。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">&quot;.boxscroll&quot;</span>).niceScroll();</span><br></pre></td></tr></table></figure>\n<p>效果如下：<br><img src=\"https://raw.githubusercontent.com/zhjAdm/ImageHosting/main/2021-05-18_20-05-41.png\"></p>\n<p>修改样式也同样的方便，niceScroll()传入想修改的参数即可。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">&quot;.boxscroll&quot;</span>).niceScroll(&#123;<span class=\"attr\">cursorcolor</span>:<span class=\"string\">&quot;#F00&quot;</span>,<span class=\"attr\">cursoropacitymax</span>:<span class=\"number\">0.7</span>&#125;);</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://raw.githubusercontent.com/zhjAdm/ImageHosting/main/2021-05-18_21-00-41.png\"></p>\n<h3 id=\"配置参数\"><a href=\"#配置参数\" class=\"headerlink\" title=\"配置参数\"></a>配置参数</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cursorcolor: <span class=\"string\">&quot;#424242&quot;</span>, <span class=\"comment\">// 滚动条光标的颜色 change cursor color in hex</span></span><br><span class=\"line\">cursoropacitymin: <span class=\"number\">0</span>, <span class=\"comment\">// 滚动条在不激活状态下的透明度，默认是0 change opacity when cursor is inactive (scrollabar &quot;hidden&quot; state), range from 1 to 0</span></span><br><span class=\"line\">cursoropacitymax: <span class=\"number\">1</span>, <span class=\"comment\">//滚动条在激活状态下的透明度，默认是1 change opacity when cursor is active (scrollabar &quot;visible&quot; state), range from 1 to 0</span></span><br><span class=\"line\">cursorwidth: <span class=\"string\">&quot;5px&quot;</span>, <span class=\"comment\">// 滚动条宽度 cursor width in pixel (you can also write &quot;5px&quot;)</span></span><br><span class=\"line\">cursorborder: <span class=\"string\">&quot;1px solid #fff&quot;</span>, <span class=\"comment\">//用css定义滚动条的边框 css definition for cursor border</span></span><br><span class=\"line\">cursorborderradius: <span class=\"string\">&quot;5px&quot;</span>, <span class=\"comment\">//滚动条的圆角半径 border radius in pixel for cursor</span></span><br><span class=\"line\">zindex: <span class=\"string\">&quot;auto&quot;</span> | &lt;number&gt;, <span class=\"comment\">//改变滚动条div的z-index的值 change z-index for scrollbar div</span></span><br><span class=\"line\">scrollspeed: <span class=\"number\">60</span>, <span class=\"comment\">// 滚动速度</span></span><br><span class=\"line\">mousescrollstep: <span class=\"number\">40</span>, <span class=\"comment\">//使用鼠标轮滚的时候的滚动速度 scrolling speed with mouse wheel (pixel)</span></span><br><span class=\"line\">touchbehavior: <span class=\"literal\">false</span>, <span class=\"comment\">//在桌面电脑上启用光标拖动，就像触摸设备那样 enable cursor-drag scrolling like touch devices in desktop computer</span></span><br><span class=\"line\">hwacceleration: <span class=\"literal\">true</span>, <span class=\"comment\">//如果设备支持，则启用硬件加速 use hardware accelerated scroll when supported</span></span><br><span class=\"line\">boxzoom: <span class=\"literal\">false</span>, <span class=\"comment\">//给盒子的内容启用放大缩小功能 enable zoom for box content</span></span><br><span class=\"line\">dblclickzoom: <span class=\"literal\">true</span>, <span class=\"comment\">//双击放大，在boxzoom=true的情况下 (only when boxzoom=true) zoom activated when double click on box</span></span><br><span class=\"line\">gesturezoom: <span class=\"literal\">true</span>, <span class=\"comment\">//手势放大缩小，在boxzoom=true的情况下 (only when boxzoom=true and with touch devices) zoom activated when pinch out/in on box</span></span><br><span class=\"line\">grabcursorenabled: <span class=\"literal\">true</span> <span class=\"comment\">//这个可以禁用&quot;grab&quot;鼠标光标 (only when touchbehavior=true) display &quot;grab&quot; icon</span></span><br><span class=\"line\">autohidemode: <span class=\"literal\">true</span>, <span class=\"comment\">//设置在什么情况下隐藏scrollbar。 how hide the scrollbar works, possible values: </span></span><br><span class=\"line\">  <span class=\"literal\">true</span> | <span class=\"comment\">// 在不滚动情况下隐藏。 hide when no scrolling</span></span><br><span class=\"line\">  <span class=\"string\">&quot;cursor&quot;</span> | <span class=\"comment\">//只隐藏光标 only cursor hidden</span></span><br><span class=\"line\">  <span class=\"literal\">false</span> | <span class=\"comment\">//始终不隐藏 do not hide,</span></span><br><span class=\"line\">  <span class=\"string\">&quot;leave&quot;</span> | <span class=\"comment\">//只在鼠标离开内容区是隐藏 hide only if pointer leaves content</span></span><br><span class=\"line\">  <span class=\"string\">&quot;hidden&quot;</span> | <span class=\"comment\">//使用隐藏 hide always</span></span><br><span class=\"line\">  <span class=\"string\">&quot;scroll&quot;</span>, <span class=\"comment\">//只在滚动的情况下显示，在不滚动的时候隐藏 show only on scroll          </span></span><br><span class=\"line\">background: <span class=\"string\">&quot;&quot;</span>, <span class=\"comment\">//设置背景颜色 change css for rail background</span></span><br><span class=\"line\">iframeautoresize: <span class=\"literal\">true</span>, <span class=\"comment\">//在iframe的load事件中自动设置大小 autoresize iframe on load event</span></span><br><span class=\"line\">cursorminheight: <span class=\"number\">32</span>, <span class=\"comment\">//设置最小的光标高度 set the minimum cursor height (pixel)</span></span><br><span class=\"line\">preservenativescrolling: <span class=\"literal\">true</span>, <span class=\"comment\">//这个设置通过事件冒泡的方式使你能够滚动原生的滚动条。 you can scroll native scrollable areas with mouse, bubbling mouse wheel event</span></span><br><span class=\"line\">railoffset: <span class=\"literal\">false</span>, <span class=\"comment\">//设置轨道的上或者左的偏移 you can add offset top/left for rail position</span></span><br><span class=\"line\">bouncescroll: <span class=\"literal\">false</span>, <span class=\"comment\">//启用向手机上面的那种滚动回弹 (only hw accell) enable scroll bouncing at the end of content as mobile-like </span></span><br><span class=\"line\">spacebarenabled: <span class=\"literal\">true</span>, <span class=\"comment\">// enable page down scrolling when space bar has pressed</span></span><br><span class=\"line\">railpadding: &#123; <span class=\"attr\">top</span>: <span class=\"number\">0</span>, <span class=\"attr\">right</span>: <span class=\"number\">0</span>, <span class=\"attr\">left</span>: <span class=\"number\">0</span>, <span class=\"attr\">bottom</span>: <span class=\"number\">0</span> &#125;, <span class=\"comment\">//设置轨道的内间距 set padding for rail bar</span></span><br><span class=\"line\">disableoutline: <span class=\"literal\">true</span>, <span class=\"comment\">//在chrome浏览器上选择一个div使用nicescroll时禁用outline， for chrome browser, disable outline (orange highlight) when selecting a div with nicescroll</span></span><br><span class=\"line\">horizrailenabled: <span class=\"literal\">true</span>, <span class=\"comment\">//设置是否处理水平滚动 nicescroll can manage horizontal scroll</span></span><br><span class=\"line\">railalign: right, <span class=\"comment\">//垂直对齐方式 alignment of vertical rail</span></span><br><span class=\"line\">railvalign: bottom, <span class=\"comment\">//水平对齐方式 alignment of horizontal rail</span></span><br><span class=\"line\">enabletranslate3d: <span class=\"literal\">true</span>, <span class=\"comment\">//设置nicescroll是否使用css translate去滚动内容 nicescroll can use css translate to scroll content</span></span><br><span class=\"line\">enablemousewheel: <span class=\"literal\">true</span>, <span class=\"comment\">//设置是否响应鼠标滚动事件 nicescroll can manage mouse wheel events</span></span><br><span class=\"line\">enablekeyboard: <span class=\"literal\">true</span>, <span class=\"comment\">//设置是否响应键盘事件 nicescroll can manage keyboard events</span></span><br><span class=\"line\">smoothscroll: <span class=\"literal\">true</span>, <span class=\"comment\">//使用平滑滚动 scroll with ease movement</span></span><br><span class=\"line\">sensitiverail: <span class=\"literal\">true</span>, <span class=\"comment\">//在轨道上点击时是否滚动 click on rail make a scroll</span></span><br><span class=\"line\">enablemouselockapi: <span class=\"literal\">true</span>, <span class=\"comment\">// can use mouse caption lock API (same issue on object dragging)</span></span><br><span class=\"line\">cursorfixedheight: <span class=\"literal\">false</span>, <span class=\"comment\">//给光标设置固定的高度 set fixed height for cursor in pixel</span></span><br><span class=\"line\">hidecursordelay: <span class=\"number\">400</span>, <span class=\"comment\">//设置隐藏光标的延迟时间，单位是毫秒 set the delay in microseconds to fading out scrollbars</span></span><br><span class=\"line\">directionlockdeadzone: <span class=\"number\">6</span>, <span class=\"comment\">// dead zone in pixels for direction lock activation</span></span><br><span class=\"line\">nativeparentscrolling: <span class=\"literal\">true</span>, <span class=\"comment\">//检测内容的底部和父节点是否允许滚动，像原生滚动条的实现方式 detect bottom of content and let parent to scroll, as native scroll does</span></span><br><span class=\"line\">enablescrollonselection: <span class=\"literal\">true</span>, <span class=\"comment\">//在选择文字的时候自动滚动内容 enable auto-scrolling of content when selection text</span></span><br><span class=\"line\">cursordragspeed: <span class=\"number\">0.3</span>, <span class=\"comment\">//当拖动光标时候的速度 speed of selection when dragged with cursor</span></span><br><span class=\"line\">rtlmode: <span class=\"string\">&quot;auto&quot;</span>, <span class=\"comment\">//设置水平滚动div的起始边是左还是右 horizontal div scrolling starts at left side</span></span><br><span class=\"line\">cursordragontouch: <span class=\"literal\">false</span>, <span class=\"comment\">//设置在触摸模式下，是否可以拖动光标就可以滚动 drag cursor in touch / touchbehavior mode also</span></span><br><span class=\"line\">oneaxismousemode: <span class=\"string\">&quot;auto&quot;</span>, <span class=\"comment\">//设置鼠标滚轮在只有水平模式的情况下是否可用 it permits horizontal scrolling with mousewheel on horizontal only content, if false (vertical-only) mousewheel don&#x27;t scroll horizontally, if value is auto detects two-axis mouse</span></span><br><span class=\"line\">scriptpath: <span class=\"string\">&quot;&quot;</span> <span class=\"comment\">//设置box模式下图标的路径，设成&quot;&quot;表示和script是同一个路径 define custom path for boxmode icons (&quot;&quot; =&gt; same script path)</span></span><br><span class=\"line\">preventmultitouchscrolling: <span class=\"literal\">true</span> <span class=\"comment\">//防止在多点触摸情况下滚动 prevent scrolling on multitouch events</span></span><br><span class=\"line\">disablemutationobserver: <span class=\"literal\">false</span> <span class=\"comment\">//稳定滚动条 force MutationObserver disabled</span></span><br></pre></td></tr></table></figure>"}],"PostAsset":[],"PostCategory":[{"post_id":"ckvg2kqar0001x0u114wd448x","category_id":"ckvg2kqaz0004x0u17h59f0ml","_id":"ckvg2kqb7000bx0u1glay3q0t"},{"post_id":"ckvg2kqax0003x0u1hb3l1zgk","category_id":"ckvg2kqaz0004x0u17h59f0ml","_id":"ckvg2kqb8000ex0u1bp8754dn"},{"post_id":"ckvg2kqb20007x0u1ed1eei3g","category_id":"ckvg2kqb6000ax0u1em1r6ggw","_id":"ckvg2kqb9000hx0u149pc4mo0"}],"PostTag":[{"post_id":"ckvg2kqar0001x0u114wd448x","tag_id":"ckvg2kqb10005x0u1dnhi3erb","_id":"ckvg2kqb8000dx0u10o517aw3"},{"post_id":"ckvg2kqar0001x0u114wd448x","tag_id":"ckvg2kqb40009x0u197ut91h6","_id":"ckvg2kqb8000fx0u15uiv8cxw"},{"post_id":"ckvg2kqax0003x0u1hb3l1zgk","tag_id":"ckvg2kqb10005x0u1dnhi3erb","_id":"ckvg2kqba000jx0u18dcy0376"},{"post_id":"ckvg2kqax0003x0u1hb3l1zgk","tag_id":"ckvg2kqb9000gx0u136buh2ir","_id":"ckvg2kqba000kx0u1bwt76rtr"},{"post_id":"ckvg2kqb20007x0u1ed1eei3g","tag_id":"ckvg2kqba000ix0u1ewv1b0lb","_id":"ckvg2kqbb000mx0u1hnireho9"},{"post_id":"ckvg2kqb20007x0u1ed1eei3g","tag_id":"ckvg2kqba000lx0u13eghc059","_id":"ckvg2kqbb000nx0u17qux5xa9"}],"Tag":[{"name":"Java","_id":"ckvg2kqb10005x0u1dnhi3erb"},{"name":"异常","_id":"ckvg2kqb40009x0u197ut91h6"},{"name":"POI","_id":"ckvg2kqb9000gx0u136buh2ir"},{"name":"css","_id":"ckvg2kqba000ix0u1ewv1b0lb"},{"name":"滚动条","_id":"ckvg2kqba000lx0u13eghc059"}]}}
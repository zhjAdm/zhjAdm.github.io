{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/css/noscript.styl","path":"css/noscript.styl","modified":0,"renderable":1},{"_id":"themes/next/source/js/bookmark.js","path":"js/bookmark.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/comments-buttons.js","path":"js/comments-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/comments.js","path":"js/comments.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/config.js","path":"js/config.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/next-boot.js","path":"js/next-boot.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/motion.js","path":"js/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/pjax.js","path":"js/pjax.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/schedule.js","path":"js/schedule.js","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next1.png","path":"images/favicon-16x16-next1.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next1.png","path":"images/favicon-32x32-next1.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo-algolia-nebula-blue-full.svg","path":"images/logo-algolia-nebula-blue-full.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/yourbackground.png","path":"images/yourbackground.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/tx.png","path":"images/tx.png","modified":0,"renderable":1},{"_id":"themes/next/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/nprogress.js","path":"js/third-party/nprogress.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/quicklink.js","path":"js/third-party/quicklink.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/rating.js","path":"js/third-party/rating.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/reading_progress/LICENSE","path":"lib/reading_progress/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/reading_progress/package.json","path":"lib/reading_progress/package.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/reading_progress/reading_progress.js","path":"lib/reading_progress/reading_progress.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/reading_progress/README.md","path":"lib/reading_progress/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/reading_progress/reading_progress.min.js","path":"lib/reading_progress/reading_progress.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/reading_progress/renovate.json","path":"lib/reading_progress/renovate.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/LICENSE","path":"lib/pace/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/README.md","path":"lib/pace/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flat-top.min.css","path":"lib/pace/pace-theme-flat-top.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-material.min.css","path":"lib/pace/pace-theme-material.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/CHANGELOG.md","path":"lib/pjax/CHANGELOG.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/LICENSE","path":"lib/pjax/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/README.md","path":"lib/pjax/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/index.js","path":"lib/pjax/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/index.d.ts","path":"lib/pjax/index.d.ts","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/package.json","path":"lib/pjax/package.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/pjax.js","path":"lib/pjax/pjax.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/pjax.min.js","path":"lib/pjax/pjax.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/analytics/baidu-analytics.js","path":"js/third-party/analytics/baidu-analytics.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/analytics/google-analytics.js","path":"js/third-party/analytics/google-analytics.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/analytics/growingio.js","path":"js/third-party/analytics/growingio.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/chat/chatra.js","path":"js/third-party/chat/chatra.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/math/katex.js","path":"js/third-party/math/katex.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/math/mathjax.js","path":"js/third-party/math/mathjax.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/comments/changyan.js","path":"js/third-party/comments/changyan.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/comments/disqus.js","path":"js/third-party/comments/disqus.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/comments/disqusjs.js","path":"js/third-party/comments/disqusjs.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/comments/isso.js","path":"js/third-party/comments/isso.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/comments/gitalk.js","path":"js/third-party/comments/gitalk.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/comments/livere.js","path":"js/third-party/comments/livere.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/comments/utterances.js","path":"js/third-party/comments/utterances.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/search/algolia-search.js","path":"js/third-party/search/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/search/local-search.js","path":"js/third-party/search/local-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/statistics/firestore.js","path":"js/third-party/statistics/firestore.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/statistics/lean-analytics.js","path":"js/third-party/statistics/lean-analytics.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/tags/mermaid.js","path":"js/third-party/tags/mermaid.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/third-party/tags/pdf.js","path":"js/third-party/tags/pdf.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/example/example.js","path":"lib/pjax/example/example.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/example/forms.html","path":"lib/pjax/example/forms.html","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/example/index.html","path":"lib/pjax/example/index.html","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/example/page3.html","path":"lib/pjax/example/page3.html","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/example/page2.html","path":"lib/pjax/example/page2.html","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/setup.js","path":"lib/pjax/tests/setup.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/test.ts","path":"lib/pjax/tests/test.ts","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/eval-script.js","path":"lib/pjax/lib/eval-script.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/abort-request.js","path":"lib/pjax/lib/abort-request.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/execute-scripts.js","path":"lib/pjax/lib/execute-scripts.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/foreach-els.js","path":"lib/pjax/lib/foreach-els.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/foreach-selectors.js","path":"lib/pjax/lib/foreach-selectors.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/is-supported.js","path":"lib/pjax/lib/is-supported.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/parse-options.js","path":"lib/pjax/lib/parse-options.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/send-request.js","path":"lib/pjax/lib/send-request.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/switches-selectors.js","path":"lib/pjax/lib/switches-selectors.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/switches.js","path":"lib/pjax/lib/switches.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/uniqueid.js","path":"lib/pjax/lib/uniqueid.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/lib/abort-request.js","path":"lib/pjax/tests/lib/abort-request.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/lib/eval-scripts.js","path":"lib/pjax/tests/lib/eval-scripts.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/lib/events.js","path":"lib/pjax/tests/lib/events.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/lib/execute-scripts.js","path":"lib/pjax/tests/lib/execute-scripts.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/lib/foreach-els.js","path":"lib/pjax/tests/lib/foreach-els.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/lib/foreach-selectors.js","path":"lib/pjax/tests/lib/foreach-selectors.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/lib/is-supported.js","path":"lib/pjax/tests/lib/is-supported.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/lib/parse-options.js","path":"lib/pjax/tests/lib/parse-options.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/lib/send-request.js","path":"lib/pjax/tests/lib/send-request.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/lib/switch-selectors.js","path":"lib/pjax/tests/lib/switch-selectors.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/lib/uniqueid.js","path":"lib/pjax/tests/lib/uniqueid.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/lib/switches.js","path":"lib/pjax/tests/lib/switches.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/events/off.js","path":"lib/pjax/lib/events/off.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/events/on.js","path":"lib/pjax/lib/events/on.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/events/trigger.js","path":"lib/pjax/lib/events/trigger.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/proto/attach-form.js","path":"lib/pjax/lib/proto/attach-form.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/proto/attach-link.js","path":"lib/pjax/lib/proto/attach-link.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/proto/handle-response.js","path":"lib/pjax/lib/proto/handle-response.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/proto/log.js","path":"lib/pjax/lib/proto/log.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/proto/parse-element.js","path":"lib/pjax/lib/proto/parse-element.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/util/clone.js","path":"lib/pjax/lib/util/clone.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/util/contains.js","path":"lib/pjax/lib/util/contains.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/util/extend.js","path":"lib/pjax/lib/util/extend.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/util/noop.js","path":"lib/pjax/lib/util/noop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/util/update-query-string.js","path":"lib/pjax/lib/util/update-query-string.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/lib/util/clone.js","path":"lib/pjax/tests/lib/util/clone.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/lib/util/contains.js","path":"lib/pjax/tests/lib/util/contains.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/lib/util/extend.js","path":"lib/pjax/tests/lib/util/extend.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/lib/util/noop.js","path":"lib/pjax/tests/lib/util/noop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/lib/util/update-query-string.js","path":"lib/pjax/tests/lib/util/update-query-string.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/lib/proto/attach-form.js","path":"lib/pjax/tests/lib/proto/attach-form.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/lib/proto/handle-response.js","path":"lib/pjax/tests/lib/proto/handle-response.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/lib/proto/attach-link.js","path":"lib/pjax/tests/lib/proto/attach-link.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/lib/proto/parse-element.js","path":"lib/pjax/tests/lib/proto/parse-element.js","modified":0,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"174df78777a70619e7fe242733f7c2512f7cb6f4","modified":1680074822453},{"_id":"source/_data/styles.styl","hash":"771fad7dfa0a44d2cbe31ac789cec166ba069057","modified":1651817345821},{"_id":"source/_data/variables.styl","hash":"a336f0f710b39dc853bcb21e26b695e6d0758ea4","modified":1651817345821},{"_id":"source/_posts/Docker使用.md","hash":"c63fcda9347b169e6f219dd844f7c074e5742019","modified":1683772011756},{"_id":"source/_posts/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1679905848835},{"_id":"source/_posts/Java导出之Excel.md","hash":"3550fd976df7a1e522d845e8ed07630c08fd55ba","modified":1678373171432},{"_id":"source/_posts/Java中的异常（Error与Exception）.md","hash":"5f30c90c8fa249ccb840736bbda656333371e1f5","modified":1678374972523},{"_id":"source/_posts/Linx命令.md","hash":"c93eeb65498e0d4a284ef0a410ed3813f09a839b","modified":1679390593697},{"_id":"source/_posts/初识Spring-Security.md","hash":"1bd5014d9c0962540237c254df9dc9a580f64a0d","modified":1678372726978},{"_id":"source/_posts/图片旋转.md","hash":"ba57537e3c018f18600bf6da6199792879f5ff18","modified":1683771960213},{"_id":"source/about/index.md","hash":"4fc058de13f19d91fb9bd82ccfccdc962463ef20","modified":1651817345822},{"_id":"source/categories/index.md","hash":"2092c610cbc5b28bf31f4b3fe2997943d05e6ee0","modified":1651817345822},{"_id":"source/tags/index.md","hash":"7820a33eddd7010318035f4e133907910f5455ab","modified":1651817345822},{"_id":"source/_posts/初识Spring-Security（二.md","hash":"a67db82c9a43c2451d93a1e05d8ed40c0b22f296","modified":1678374820042},{"_id":"source/_posts/滚动条探索之美化.md","hash":"ec13097b3a8daed603a6b078b0bd8d93fb749233","modified":1678373171741},{"_id":"themes/next/.editorconfig","hash":"8570735a8d8d034a3a175afd1dd40b39140b3e6a","modified":1651817345823},{"_id":"themes/next/.gitignore","hash":"68d2f59b79fbc9edf358295ac38515c4b32126c1","modified":1651817345823},{"_id":"themes/next/.gitattributes","hash":"ec43734985e1cafd53d88ded3020103f7416123c","modified":1651817345823},{"_id":"themes/next/LICENSE.md","hash":"68fc9a03d50fd4b5ea97092b05967d1819dea2c4","modified":1651817345823},{"_id":"themes/next/.stylintrc","hash":"2cf4d637b56d8eb423f59656a11f6403aa90f550","modified":1651817345823},{"_id":"themes/next/_vendors.yml","hash":"d521221487a080002d15d4d12918d6953327f02e","modified":1651817345823},{"_id":"themes/next/.eslintrc.json","hash":"9c0762486f24a8c5e60f8b6c875e4c4728942649","modified":1651817345823},{"_id":"themes/next/README.md","hash":"fab15a85d9d8d90ecd8879525b9b74fb1c197978","modified":1651817345823},{"_id":"themes/next/crowdin.yml","hash":"e026078448c77dcdd9ef50256bb6635a8f83dca6","modified":1651817345823},{"_id":"themes/next/_config.yml","hash":"2f36c7b276be969f9c6bc821d818d96230a322cd","modified":1651817345823},{"_id":"themes/next/docs/AUTHORS.md","hash":"a648823121563c34a177ae91f5a774b5e29f01a0","modified":1651817345824},{"_id":"themes/next/main.yml","hash":"2fd1088036250d826fcb34936590a26c1c34c7cb","modified":1651817345831},{"_id":"themes/next/languages/ar.yml","hash":"bca66db21c015dbd32970d8708b898518a773e1e","modified":1651817345825},{"_id":"themes/next/renovate.json","hash":"cb29cc16e61b0b8a6dac34657d76822ae29ad5aa","modified":1651817345831},{"_id":"themes/next/package.json","hash":"1c467efb7b1028f1d4aa6ebef30de4d9dbe72a7a","modified":1651817345831},{"_id":"themes/next/docs/LICENSE.txt","hash":"f5b14f791b7cfa1d16da981d929152e088a5d1b8","modified":1651817345824},{"_id":"themes/next/languages/de.yml","hash":"4be7b8b76c81bf1853eb36d2e874b17546a0e792","modified":1651817345825},{"_id":"themes/next/languages/README.md","hash":"b2567e32805dda79601157351a07e5ca9fe01315","modified":1651817345825},{"_id":"themes/next/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1651817345824},{"_id":"themes/next/languages/default.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1651817345825},{"_id":"themes/next/languages/fa.yml","hash":"6456d40dd42f44101d9d6e7054e9884e9163f948","modified":1651817345825},{"_id":"themes/next/languages/es.yml","hash":"651e3b33d86a7cdb9fd7895ca28279f8b1a24faa","modified":1651817345825},{"_id":"themes/next/languages/en.yml","hash":"814d81c27fed736055ee300e0a6505b26ff4313c","modified":1651817345825},{"_id":"themes/next/languages/fr.yml","hash":"b15dc05afdc94de02e5d3fee4f8d3dc5594dd37e","modified":1651817345825},{"_id":"themes/next/languages/ja.yml","hash":"d48c4157e0e02e847aac7b513580d3364c81948c","modified":1651817345825},{"_id":"themes/next/languages/id.yml","hash":"14e794db4eca36b257994d81eb513e61d1edcbd6","modified":1651817345825},{"_id":"themes/next/languages/pt-BR.yml","hash":"a1f27b3a592fc58f17d247f5563ff4a90a3da5f2","modified":1651817345826},{"_id":"themes/next/languages/nl.yml","hash":"ecb8e39c6225f3c068a5fdd569ee7dafd5c41a1f","modified":1651817345826},{"_id":"themes/next/languages/ru.yml","hash":"e9af1afe529ca747a04b801401d394b2ad696fde","modified":1651817345826},{"_id":"themes/next/languages/ko.yml","hash":"6387357ac2dd498e8b8d630d27050a59180d7e8f","modified":1651817345825},{"_id":"themes/next/languages/pt.yml","hash":"63a3e1e728ba5e6e22150de7331bb8a654f34960","modified":1651817345826},{"_id":"themes/next/languages/it.yml","hash":"c1eeab4992c76bfd436bb205ce58b1cfeef55ee6","modified":1651817345825},{"_id":"themes/next/languages/zh-HK.yml","hash":"f195bb0502ffe66e850077a1af1033455ea65f93","modified":1651817345826},{"_id":"themes/next/languages/si.yml","hash":"2a9861db4547a524b2609c1e7e1061d2e9d48ee4","modified":1651817345826},{"_id":"themes/next/languages/tr.yml","hash":"55b38c7617c24bdc27c9de6cf39f4b191d154fb8","modified":1651817345826},{"_id":"themes/next/languages/vi.yml","hash":"c669c34da544a563ceae3e196addc9df6a78e024","modified":1651817345826},{"_id":"themes/next/languages/uk.yml","hash":"7dd24580c0865c5a7bc4d391855045366a598936","modified":1651817345826},{"_id":"themes/next/languages/zh-TW.yml","hash":"92256b90028de9a1e79c6bc0e5885b93e7fb4b17","modified":1651817345826},{"_id":"themes/next/layout/archive.njk","hash":"d759f4d2cf5ddc6875ea250113a00662c1caf6d1","modified":1651817345831},{"_id":"themes/next/layout/category.njk","hash":"0a590e87af50e57b15fc37695c9a3bf4a97c3d92","modified":1651817345831},{"_id":"themes/next/test/index.js","hash":"6bf0289846538be3e9a63809af98f00e1fbdd90b","modified":1651817345856},{"_id":"themes/next/layout/_layout.njk","hash":"eb602a9878dfdb4af2a7d82a8836b42777b72bce","modified":1651817345826},{"_id":"themes/next/layout/page.njk","hash":"9cd3eca2c468bb46c7c5bf391bea4b025af178f6","modified":1651817345831},{"_id":"themes/next/languages/zh-CN.yml","hash":"65f973266ee87f993af4c908a6a1d2bed41de846","modified":1651817345826},{"_id":"themes/next/docs/ru/README.md","hash":"87edab5a3eb7577a409c01df3f1631de40f8956f","modified":1651817345824},{"_id":"themes/next/layout/index.njk","hash":"37ec3d1bcd20b8ac1d18e0d68f990450890b46cd","modified":1651817345831},{"_id":"themes/next/layout/post.njk","hash":"6abeb85fb3e4c382ed4bb6049b12a807e6226e67","modified":1651817345831},{"_id":"themes/next/scripts/filters/locals.js","hash":"374c9211b3b6a5b2ad31f1bea69a22f2727f633a","modified":1651817345833},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"8ee5ca39ac4a372a5c0f16e344bbe578af4aeae4","modified":1651817345824},{"_id":"themes/next/docs/zh-CN/README.md","hash":"02bafc6ee86263790603861e356596f0c916e392","modified":1651817345824},{"_id":"themes/next/scripts/filters/default-injects.js","hash":"872f01cb10e422a648ea505436532e776e92926b","modified":1651817345833},{"_id":"themes/next/scripts/events/index.js","hash":"89091bc943cd8b8c63b8af3d26fb0a027048e9ba","modified":1651817345832},{"_id":"themes/next/scripts/filters/minify.js","hash":"7793c9f7e268c0fca46ad86bf522deb83c2e4a5c","modified":1651817345833},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"7a06d443f374bd1e84294067a0ac796afd9fbe60","modified":1651817345824},{"_id":"themes/next/scripts/tags/caniuse.js","hash":"935a311142a409c1896b3ae3f01fe7a9e2db1134","modified":1651817345833},{"_id":"themes/next/scripts/filters/post.js","hash":"42a9b81c5449afa9d67770604478168333c93804","modified":1651817345833},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"92c19d796bdb3320df9caea59bf52df7a95d9da9","modified":1651817345834},{"_id":"themes/next/scripts/tags/button.js","hash":"c6ad2ed544fbb25ecb5d820c36e76302504271b7","modified":1651817345833},{"_id":"themes/next/scripts/tags/index.js","hash":"17f9451ce1f10f78437f52218757d38d4e1591b0","modified":1651817345834},{"_id":"themes/next/scripts/tags/label.js","hash":"8a73348186113bae0a51ea2f891c1bb882fab05a","modified":1651817345834},{"_id":"themes/next/scripts/tags/link-grid.js","hash":"18a483c2d5afd701f6080ffdddf2d1321370336c","modified":1651817345834},{"_id":"themes/next/scripts/tags/mermaid.js","hash":"4fb01ca650fa8b256b8d48f50dc1b18350bd3d6d","modified":1651817345834},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"79102d9e9bccff6224e77a77c4d2d363094ae3df","modified":1651817345834},{"_id":"themes/next/scripts/tags/pdf.js","hash":"344636b6fd7e27e8831c1e194039afc0d61931cd","modified":1651817345834},{"_id":"themes/next/layout/tag.njk","hash":"6cd707f846bfd6becbcfb060c26958bb4015c31f","modified":1651817345831},{"_id":"themes/next/scripts/tags/note.js","hash":"7b94ddb46b7d4b0fe815f2fbe4bd375f07f55363","modified":1651817345834},{"_id":"themes/next/scripts/tags/video.js","hash":"2ee926448583be8f95af1f2884ae2c9c4830151d","modified":1651817345835},{"_id":"themes/next/scripts/tags/tabs.js","hash":"0eabe51da40b4b13e16419c8fe02452d9a4fef73","modified":1651817345834},{"_id":"themes/next/scripts/helpers/next-config.js","hash":"454ed1fac07be972c7ec911092f0995cd925aab3","modified":1651817345833},{"_id":"themes/next/scripts/helpers/font.js","hash":"3394185a7f0393c16ce52c8028f90da3e9239c55","modified":1651817345833},{"_id":"themes/next/scripts/helpers/next-url.js","hash":"a11b71ba0c5012e2cdcab31c15439156b215563e","modified":1651817345833},{"_id":"themes/next/scripts/helpers/engine.js","hash":"d072dbd6c0782c22877d6fae9675942f6fd1f80a","modified":1651817345833},{"_id":"themes/next/source/css/_colors.styl","hash":"b37f9847d2f95632e911df670b51921a7d748068","modified":1651817345835},{"_id":"themes/next/test/helpers/font.js","hash":"342ef3c6fd2dcca2a8802a516ed6d7f389fd2ca2","modified":1651817345855},{"_id":"themes/next/source/css/noscript.styl","hash":"76bba5d7916e9930e68215a0fce3a7d81c44510f","modified":1651817345841},{"_id":"themes/next/scripts/helpers/next-vendors.js","hash":"afdd6a188a74c188f0dd154fac70efd4080ca262","modified":1651817345833},{"_id":"themes/next/source/css/_mixins.styl","hash":"8b0c0353d360b984d285860697b2ccbec78da462","modified":1651817345840},{"_id":"themes/next/source/css/main.styl","hash":"78ce791cc4ac95386cf6839ca72f5f7b51f86ee9","modified":1651817345841},{"_id":"themes/next/test/helpers/index.js","hash":"63ba28afed697f7b3574436b1133b8ecc9c0c357","modified":1651817345855},{"_id":"themes/next/source/js/bookmark.js","hash":"e45e1fbb7c6d645e9c410759486216e570d02bef","modified":1651817345846},{"_id":"themes/next/source/js/motion.js","hash":"6d4bd07a6f8e1b4083119dca0acb5b289533b619","modified":1651817345846},{"_id":"themes/next/test/helpers/next-url.js","hash":"a91d880cb75e0a8e65a7be4c7362b2c8ebfb7c4f","modified":1651817345855},{"_id":"themes/next/source/js/comments-buttons.js","hash":"1a7344440321713426a0b2ab17e276b5bdf85ade","modified":1651817345846},{"_id":"themes/next/source/js/config.js","hash":"7dad20378e907725e18007ddbad80b3366027240","modified":1651817345846},{"_id":"themes/next/source/js/comments.js","hash":"66ae2e26ea36a41b72c638ea8b220296638ae952","modified":1651817345846},{"_id":"themes/next/source/js/next-boot.js","hash":"873e52a851a6ce8dc61b870fa7083da4d2304b7b","modified":1651817345846},{"_id":"themes/next/source/js/schedule.js","hash":"71d62fc3584c47ff2d4cc945226e412264399be9","modified":1651817345846},{"_id":"themes/next/test/tags/button.js","hash":"48f2aa4c513e9e24bd6a811410520b74cd7ea88b","modified":1651817345856},{"_id":"themes/next/source/js/utils.js","hash":"24e161cc99ee401a47b7d125fecce51ab0566cdc","modified":1651817345848},{"_id":"themes/next/source/js/pjax.js","hash":"5bfc1cea214bd31847adc356f37df8e0b6a449df","modified":1651817345846},{"_id":"themes/next/test/tags/caniuse.js","hash":"aa5e728445caeaf7c2ccd0f3fcb2cad0c93ca6d1","modified":1651817345856},{"_id":"themes/next/test/tags/group-pictures.js","hash":"f41640e5d0f552c0b0c4ac8876a2edb0fcf54e56","modified":1651817345856},{"_id":"themes/next/test/tags/center-quote.js","hash":"7667342fd1a1417eaf6a254012b84ae40e8d13dd","modified":1651817345856},{"_id":"themes/next/test/tags/link-grid.js","hash":"43d298fafb7c45a874b766d443843bd26346e689","modified":1651817345856},{"_id":"themes/next/test/tags/mermaid.js","hash":"ab77be5f3c6d9a57c7b9dda6decf1906a736fef9","modified":1651817345856},{"_id":"themes/next/test/tags/index.js","hash":"e8779e54f0979b221858f8bb74dd081bb503b910","modified":1651817345856},{"_id":"themes/next/test/tags/label.js","hash":"4ebf3698c258ca978b997acbdd0dece44069c09d","modified":1651817345856},{"_id":"themes/next/test/tags/tabs.js","hash":"d63722919f9da2e44d6b952801e10a2915ea9c12","modified":1651817345856},{"_id":"themes/next/test/tags/note.js","hash":"3dcfcd65bf9f326972ea7571fdb1444200f5d07e","modified":1651817345856},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1651817345842},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"38478fb29a229a444b9b9e0ebf3a2fd5d943e476","modified":1651817345842},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"29bf23bccef6fc85ceafe721dd394bc287770495","modified":1651817345842},{"_id":"themes/next/test/tags/pdf.js","hash":"fd6ea5123560a90f7e7c1eface23dbe1455db25f","modified":1651817345856},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"b796fa30ced3ddb228af19955fe6491b81f0ccc8","modified":1651817345842},{"_id":"themes/next/source/images/cc-by.svg","hash":"a003f30369698b2a2f45d8c460d2956fb6d1eb15","modified":1651817345842},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"7cf99976f1162a385c2a85eca3a43ce928d4d60e","modified":1651817345842},{"_id":"themes/next/source/images/avatar.gif","hash":"2dbc3e2f2d624b2ca1afe6edc2ca17307f1950c8","modified":1651817345842},{"_id":"themes/next/test/tags/video.js","hash":"b796fc4dceb20a30e730c322bb5474c0162464cc","modified":1651817345856},{"_id":"themes/next/source/images/cc-zero.svg","hash":"bccb103bb13e990db9b0487bb72abaa3d2b09960","modified":1651817345842},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"2bf7b1347e81ade507a8e2f919ed004f214ab1ca","modified":1651817345842},{"_id":"themes/next/source/images/logo-algolia-nebula-blue-full.svg","hash":"b85e274207b1392782476a0430feac98db1e7da0","modified":1651817345843},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"c2e9d5ac5d93f63398357016df7a0ba0483aad75","modified":1651817345842},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"7c3faed7ee21178b50143703822103810743e4ed","modified":1651817345842},{"_id":"themes/next/source/images/favicon-16x16-next1.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1651817345842},{"_id":"themes/next/source/images/favicon-32x32-next1.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1651817345843},{"_id":"themes/next/source/images/logo.svg","hash":"2cb74fd3ea2635e015eabc58a8d488aed6cf6417","modified":1651817345843},{"_id":"themes/next/layout/_macro/post.njk","hash":"b106599106285ecd4c0c1e0ed11c46a36b5a69d5","modified":1651817345827},{"_id":"themes/next/test/validate/index.js","hash":"5a95ccc8598667535bd022e988055c0e019f3670","modified":1651817345856},{"_id":"themes/next/layout/_partials/footer.njk","hash":"49a1e407acd56a25a811ec788b83320e00ffb693","modified":1651817345827},{"_id":"themes/next/layout/_macro/sidebar.njk","hash":"eb786e8b35e354287cda345c524cd35ec955f692","modified":1651817345827},{"_id":"themes/next/layout/_partials/comments.njk","hash":"5451969917c4e79de1d489d92142b44d22e82e43","modified":1651817345827},{"_id":"themes/next/layout/_partials/languages.njk","hash":"e43f22198cccb5f6e306b1ce0d28d12a4fb891f8","modified":1651817345827},{"_id":"themes/next/layout/_macro/post-collapse.njk","hash":"1a30d751871dabfa80940042ddb1f77d07d830b9","modified":1651817345826},{"_id":"themes/next/layout/_partials/widgets.njk","hash":"852a750524decf1efa587cd52b09e387ed8315de","modified":1651817345829},{"_id":"themes/next/layout/_scripts/index.njk","hash":"7de076a40e28d855691d9f622478068f6ad94ec3","modified":1651817345829},{"_id":"themes/next/layout/_scripts/vendors.njk","hash":"be80b9fe415a9a09d74c28e230995fd292dfc123","modified":1651817345829},{"_id":"themes/next/layout/_partials/pagination.njk","hash":"9876dbfc15713c7a47d4bcaa301f4757bd978269","modified":1651817345828},{"_id":"themes/next/layout/_third-party/index.njk","hash":"467b45a4912369bcba77908151e76a3f3ad0fed2","modified":1651817345830},{"_id":"themes/next/scripts/events/lib/injects.js","hash":"7b0ea8d28ced63977dc6539920eb044b1098adcb","modified":1651817345832},{"_id":"themes/next/scripts/events/lib/highlight.js","hash":"6aec7b2c38c50989a23bfaa0d560e75c7f553e12","modified":1651817345832},{"_id":"themes/next/scripts/events/lib/vendors.js","hash":"a2da611e063fcbe62dd567df6d4305ce60c832a8","modified":1651817345832},{"_id":"themes/next/scripts/events/lib/config.js","hash":"92ab6bb3c3122980699f0613dac27a7cabfedecc","modified":1651817345832},{"_id":"themes/next/scripts/events/lib/utils.js","hash":"b281be775b693f9bf32766c8f6ef703c72ac9b00","modified":1651817345832},{"_id":"themes/next/scripts/filters/comment/disqus.js","hash":"cc1e2d5921c6990f94f3cf11b1ff7533a21da9b7","modified":1651817345832},{"_id":"themes/next/scripts/filters/comment/changyan.js","hash":"ecc93ba67af26b6715fc75001fa0c3131b726241","modified":1651817345832},{"_id":"themes/next/scripts/filters/comment/isso.js","hash":"ff8b5b5145220a17d0ecd9508ba9bd2d3b2da47d","modified":1651817345833},{"_id":"themes/next/scripts/filters/comment/common.js","hash":"2486f3e0150c753e5f3af1a3665d074704b8ee2c","modified":1651817345832},{"_id":"themes/next/layout/_third-party/rating.njk","hash":"1bcdbc7fde26d6d9ef4e7fa43ffcff5a9506b20e","modified":1651817345830},{"_id":"themes/next/scripts/filters/comment/gitalk.js","hash":"7c0533bac4400689a0d5ab3a188ce42b9375de46","modified":1651817345832},{"_id":"themes/next/scripts/filters/comment/utterances.js","hash":"d3bded697bc32dace689d2a6dfb6eb7514169d15","modified":1651817345833},{"_id":"themes/next/scripts/filters/comment/default-config.js","hash":"93ee5f9109dad885dc38c49bcee630c10f9dce6e","modified":1651817345832},{"_id":"themes/next/scripts/filters/comment/disqusjs.js","hash":"32a1d9ad50621a78d0243e176c8b05ff7866fd5b","modified":1651817345832},{"_id":"themes/next/scripts/filters/comment/livere.js","hash":"60be56c9ba590e5bcb80d1607ca7eeedde9fdfaa","modified":1651817345833},{"_id":"themes/next/layout/_third-party/nprogress.njk","hash":"80fd1a45e91207fc16df1136e12b8b71b4f65dea","modified":1651817345830},{"_id":"themes/next/layout/_third-party/quicklink.njk","hash":"0efed71ed530447718c4ea5bbd5fc8695b0b0d5f","modified":1651817345830},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"96e0a7c2a65ce68215e17e369085b2ea2f1334f2","modified":1651817345841},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"e3be898f5ebcf435a26542653a9297ff2c71aeb0","modified":1651817345841},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"e1fbf169b9b6a194b518240cbd06ec3c48b83d61","modified":1651817345841},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"c65536a128b9bc9dbe2fbb1b235a3cded2891002","modified":1651817345841},{"_id":"themes/next/source/css/_variables/base.styl","hash":"32a1b73944561655087d80f025208a84e012b3cf","modified":1651817345841},{"_id":"themes/next/source/js/schemes/muse.js","hash":"9d15d0d6a58b1df74827288f117af22b4b6aafe5","modified":1651817345847},{"_id":"themes/next/source/js/third-party/quicklink.js","hash":"6f58cd7aa8f6f1ab92d5a96551add293f4e55312","modified":1651817345848},{"_id":"themes/next/source/js/third-party/rating.js","hash":"51a35e9ce91567bfc5efa31007ae694bfdfb68b5","modified":1651817345848},{"_id":"themes/next/source/js/third-party/nprogress.js","hash":"7d56b18a2bdece5468470c70c5f3eb79d4120964","modified":1651817345848},{"_id":"themes/next/source/lib/reading_progress/LICENSE","hash":"b29db4c99aa5b8d574026f68804051ff4b75466e","modified":1651817345855},{"_id":"themes/next/source/lib/reading_progress/.gitignore","hash":"67c4efc6e80e1a7318129226959f02701baf5f3a","modified":1651817345855},{"_id":"themes/next/source/lib/reading_progress/.editorconfig","hash":"7d47ecd70ca58d26af4f69ff1b23034edcf4475e","modified":1651817345855},{"_id":"themes/next/source/lib/reading_progress/package.json","hash":"b48a3293b45d8cab41e0ab61a64104a854f6dc94","modified":1651817345855},{"_id":"themes/next/source/lib/reading_progress/README.md","hash":"d370ea928bad9e91fd8f1590e23e279b9a959516","modified":1651817345855},{"_id":"themes/next/source/lib/reading_progress/reading_progress.min.js","hash":"b768dc009e6d37dd952632c317f6c33e6e2d89ad","modified":1651817345855},{"_id":"themes/next/source/lib/reading_progress/reading_progress.js","hash":"ec68a79421cfba022ac53f46813d013dd48617c0","modified":1651817345855},{"_id":"themes/next/source/lib/reading_progress/renovate.json","hash":"cb29cc16e61b0b8a6dac34657d76822ae29ad5aa","modified":1651817345855},{"_id":"themes/next/source/lib/pace/LICENSE","hash":"b29db4c99aa5b8d574026f68804051ff4b75466e","modified":1651817345848},{"_id":"themes/next/source/lib/pace/README.md","hash":"168f57bb63563b9671d0c4f10c0940e7eec261f0","modified":1651817345849},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1651817345849},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1651817345849},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1651817345849},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1651817345849},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1651817345849},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1651817345849},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1651817345849},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1651817345849},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1651817345849},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1651817345849},{"_id":"themes/next/source/lib/pace/pace-theme-flat-top.min.css","hash":"5e1c97e232b46e48592a8e4983ae5a89e0a7da6a","modified":1651817345849},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1651817345849},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1651817345849},{"_id":"themes/next/source/lib/pace/pace-theme-material.min.css","hash":"f1ff83985c090f3a3236554c5ef69542dcceb049","modified":1651817345849},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1651817345850},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1651817345850},{"_id":"themes/next/source/lib/pjax/.editorconfig","hash":"c064a6369e31f846061fec42fd20c94cd34baebf","modified":1651817345850},{"_id":"themes/next/source/lib/pjax/.gitignore","hash":"af77252405d1ae97b1d4139b53f2684b64d87596","modified":1651817345850},{"_id":"themes/next/source/lib/pjax/.eslintignore","hash":"9039b3607514f44ee5955e986ee96920ea324398","modified":1651817345850},{"_id":"themes/next/source/lib/pjax/CHANGELOG.md","hash":"4482a245ac2c867102490c71d0fcbb502be0e3e5","modified":1651817345850},{"_id":"themes/next/source/lib/pjax/.prettierignore","hash":"9039b3607514f44ee5955e986ee96920ea324398","modified":1651817345850},{"_id":"themes/next/source/lib/pjax/.travis.yml","hash":"0948420e18b2cec89c40093da5c7c14fa4c9bc5d","modified":1651817345850},{"_id":"themes/next/source/lib/pjax/.eslintrc.json","hash":"cdbc258b29270771e1846aeacc67198d0aed5447","modified":1651817345850},{"_id":"themes/next/source/lib/pjax/LICENSE","hash":"0cadc79604daeacf95062d1e5ccd43edbfaed836","modified":1651817345850},{"_id":"themes/next/source/lib/pjax/index.d.ts","hash":"b90fe99fe90ee7024d760467e75565da561f7ccd","modified":1651817345851},{"_id":"themes/next/source/lib/pjax/index.js","hash":"4af61bcf253ce67d67bb0f524b441869301de9a5","modified":1651817345851},{"_id":"themes/next/source/lib/pjax/README.md","hash":"6e83f73f2c43fc4f85eda51daed5c321ec55c83c","modified":1651817345850},{"_id":"themes/next/source/lib/pjax/package.json","hash":"1c0055fc51eee37e39ca9d5b6ea5078677b20201","modified":1651817345853},{"_id":"themes/next/source/lib/pjax/pjax.min.js","hash":"68d0c6ad28f042c78fc18a6e9d782a7047c01905","modified":1651817345853},{"_id":"themes/next/source/lib/pjax/pjax.js","hash":"e973e2c6ffb6f6d7b4a1730ba0ed6d3628b2b39f","modified":1651817345853},{"_id":"themes/next/layout/_partials/head/head-unique.njk","hash":"49aa8de07918a11399131dfd703418af3f0a1a19","modified":1651817345827},{"_id":"themes/next/layout/_partials/head/head.njk","hash":"e3c8e8fb454d9956a1445f003190222314b6f293","modified":1651817345827},{"_id":"themes/next/layout/_partials/header/brand.njk","hash":"ffb6c69a9c90793cbe9bf0544b55f7a41c016d8f","modified":1651817345827},{"_id":"themes/next/layout/_partials/header/menu.njk","hash":"c9390824b57f23b7c8a5c23a9834514123673766","modified":1651817345827},{"_id":"themes/next/layout/_partials/header/menu-item.njk","hash":"b46f412c0b4f775fd329d50357f722f5d7c1a3ba","modified":1651817345827},{"_id":"themes/next/layout/_partials/header/index.njk","hash":"53895b3af95667edc5bf5d7356f8a2b4fe091447","modified":1651817345827},{"_id":"themes/next/layout/_partials/header/sub-menu.njk","hash":"75a158a5b54a3a76ee6590f5e0e2dd4a9f0be869","modified":1651817345827},{"_id":"themes/next/layout/_partials/sidebar/site-overview.njk","hash":"c419158e19805e2db614a5f5651e3e534e4a5e4e","modified":1651817345829},{"_id":"themes/next/layout/_partials/search/index.njk","hash":"8f6f256ab3b351ffc80f1f3f1d9834e9a7cfac31","modified":1651817345828},{"_id":"themes/next/layout/_partials/search/algolia-search.njk","hash":"efb2b6f19df02ba5ae623a1f274fff52aed21e6f","modified":1651817345828},{"_id":"themes/next/layout/_partials/search/localsearch.njk","hash":"661f7acae43f0be694266323320f977d84119abe","modified":1651817345829},{"_id":"themes/next/layout/_partials/page/page-header.njk","hash":"7ed4f102a1825195cff8d7995bf9219f323a9034","modified":1651817345828},{"_id":"themes/next/layout/_partials/page/breadcrumb.njk","hash":"edb3bb6d644b7407673c5ef3a426a244e98fcf89","modified":1651817345828},{"_id":"themes/next/layout/_partials/page/categories.njk","hash":"17156d99941f28a225951ffdcfa9a115e20dc2d2","modified":1651817345828},{"_id":"themes/next/layout/_partials/page/schedule.njk","hash":"ca2ccf3cf1874c45712f192ad45dea96fbd9920d","modified":1651817345828},{"_id":"themes/next/layout/_partials/page/tags.njk","hash":"a18d1598e36cc72f2b0b24c3cc3c5990dfaa3254","modified":1651817345828},{"_id":"themes/next/layout/_partials/post/post-followme.njk","hash":"154df0bb323c332d8c25343f258ee865e5553423","modified":1651817345828},{"_id":"themes/next/layout/_partials/post/post-copyright.njk","hash":"133942922e34abae9e4de7ea5591d77c0caa4b37","modified":1651817345828},{"_id":"themes/next/layout/_partials/post/post-footer.njk","hash":"8f14f3f8a1b2998d5114cc56b680fb5c419a6b07","modified":1651817345828},{"_id":"themes/next/layout/_partials/post/post-meta.njk","hash":"cc1a11190b1a55ae8d4252d296803bc19db90bc5","modified":1651817345828},{"_id":"themes/next/layout/_partials/post/post-reward.njk","hash":"a9bb52d0537d27cfe670d80e716da6780786ab8a","modified":1651817345828},{"_id":"themes/next/layout/_partials/post/post-related.njk","hash":"f79c44692451db26efce704813f7a8872b7e63a0","modified":1651817345828},{"_id":"themes/next/layout/_third-party/math/index.njk","hash":"abf37fc55aa86702118e8fdf5bf2d389dd589aa0","modified":1651817345830},{"_id":"themes/next/layout/_third-party/math/katex.njk","hash":"d82c24136bbd3443b85f07f5579845833b594684","modified":1651817345830},{"_id":"themes/next/layout/_third-party/search/algolia-search.njk","hash":"24ed76e0c72a25ac152820c750a05826a706b6f4","modified":1651817345830},{"_id":"themes/next/layout/_third-party/chat/chatra.njk","hash":"5c54ef9060195c6bdcb3bbd4cc1af938a443fb23","modified":1651817345829},{"_id":"themes/next/layout/_third-party/math/mathjax.njk","hash":"3677017fd4572b158311f5f5d870590ab25184e0","modified":1651817345830},{"_id":"themes/next/layout/_third-party/search/localsearch.njk","hash":"3fc91aba5b17a5ae60b8e04707a7da87db4d0340","modified":1651817345830},{"_id":"themes/next/layout/_third-party/chat/tidio.njk","hash":"cba0e6e0fad08568a9e74ba9a5bee5341cfc04c1","modified":1651817345829},{"_id":"themes/next/layout/_third-party/comments/disqusjs.njk","hash":"0749cb6902baecdfd01f779a2a2513f6d2f6a823","modified":1651817345830},{"_id":"themes/next/layout/_third-party/comments/disqus.njk","hash":"9375b19a89b7fa9474e558d085af5448d4c5c50c","modified":1651817345830},{"_id":"themes/next/layout/_third-party/comments/changyan.njk","hash":"d1c950f8fbdf85e7a3eae5463767a89e858e8220","modified":1651817345830},{"_id":"themes/next/layout/_third-party/comments/isso.njk","hash":"64cc3bdaf644fd32c0d0a247f29f5b6904da9af3","modified":1651817345830},{"_id":"themes/next/layout/_third-party/comments/gitalk.njk","hash":"b63b7e2ede0d3e66e732fa1a06bda9b19e1e85d4","modified":1651817345830},{"_id":"themes/next/layout/_third-party/comments/livere.njk","hash":"3b13b09fba84ec6000886890a6710736a2b8fafe","modified":1651817345830},{"_id":"themes/next/layout/_third-party/comments/utterances.njk","hash":"5a94032bc3512a10ad4328fc19ec07b819a1d687","modified":1651817345830},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.njk","hash":"6215309aee028dcb734452beec448c5afb6c63fc","modified":1651817345829},{"_id":"themes/next/layout/_third-party/analytics/cloudflare.njk","hash":"c978e9efd472c4825f93b83524b11f1c4f7efaab","modified":1651817345829},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.njk","hash":"d89066ff53879693f023e540d59c86137172c529","modified":1651817345829},{"_id":"themes/next/layout/_third-party/analytics/growingio.njk","hash":"8afaa772c390bd9d53a5cff9645ac3168334eb98","modified":1651817345829},{"_id":"themes/next/layout/_third-party/analytics/index.njk","hash":"2d36a481a70d5f450f1f166dc556ac1218b18537","modified":1651817345829},{"_id":"themes/next/layout/_third-party/tags/pdf.njk","hash":"2c81984cc4f5123103460442f6e046f5b6c97127","modified":1651817345831},{"_id":"themes/next/layout/_third-party/tags/mermaid.njk","hash":"099e031f52fb8e47b3af5b2684737efc9e643ee7","modified":1651817345831},{"_id":"themes/next/layout/_third-party/statistics/busuanzi-counter.njk","hash":"a4bc501da0f22f7e420f0ca47e83988ce90b1368","modified":1651817345831},{"_id":"themes/next/layout/_third-party/statistics/index.njk","hash":"568ddf7955d11d93fb5e842b403a7ac8b1b7fdb1","modified":1651817345831},{"_id":"themes/next/layout/_third-party/statistics/firestore.njk","hash":"d32ebe94560fa95824478ebbff531bffc47b194d","modified":1651817345831},{"_id":"themes/next/layout/_third-party/statistics/lean-analytics.njk","hash":"2446e748cdc102c78492216319ac02148db7daf6","modified":1651817345831},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"d4809783ded05625675b1b4bbd9e99d7f5f7d7f9","modified":1651817345835},{"_id":"themes/next/source/css/_common/components/reading-progress.styl","hash":"1cffb9c24eea18090b21b9cb908fe07cfeac0c03","modified":1651817345836},{"_id":"themes/next/source/css/_common/components/index.styl","hash":"3c7ae405dd30b9b46494a6b9a6cb1b7ec6138ba9","modified":1651817345835},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"ece860218125bdb2578f373ed4f5040c9670e4b1","modified":1651817345835},{"_id":"themes/next/source/css/_schemes/Muse/_header.styl","hash":"06080fd963c904d96c00eff098a284e337953013","modified":1651817345840},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"82a29572dd90451f75358a2ee2522b87304a0bb8","modified":1651817345840},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"fd49b521d67eaccc629f77b4e095cb7310327565","modified":1651817345840},{"_id":"themes/next/source/css/_schemes/Muse/_sidebar.styl","hash":"944364893bd7160d954c10ba931af641c91515a4","modified":1651817345841},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1651817345841},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"8a70d51d8f7cd113e5fbc9f0e70c46a072f282c8","modified":1651817345840},{"_id":"themes/next/source/css/_schemes/Pisces/_header.styl","hash":"be5c46b983df08b9dbac1b4749b1a101b54b6b50","modified":1651817345841},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"6eee86c8f0175d6c09e434053516cd8556f78d44","modified":1651817345841},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"2d337a12c5c668ee64447bda5a9ed64eaed5b29e","modified":1651817345841},{"_id":"themes/next/source/css/_schemes/Muse/_sub-menu.styl","hash":"c48ccd8d6651fe1a01faff8f01179456d39ba9b1","modified":1651817345841},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"72dc825c50357402c342d62ab60fc0c478ab6bc1","modified":1651817345841},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"778ed2ad5643b93970c95626b325defeb586733f","modified":1651817345841},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"8000075b227749a7495eaf417cac6ccfbe441580","modified":1651817345841},{"_id":"themes/next/source/css/_common/scaffolding/comments.styl","hash":"e4fecc889ba3317a64e9abba5842c79dff9b7827","modified":1651817345839},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"8d7ad58c9086161b05843aa7e44973148be33611","modified":1651817345838},{"_id":"themes/next/source/css/_common/scaffolding/index.styl","hash":"523fb7b653b87ae37fc91fc8813e4ffad87b0d7e","modified":1651817345839},{"_id":"themes/next/source/css/_common/scaffolding/buttons.styl","hash":"a042571d85ff7265f799004239a45f36b716b8a6","modified":1651817345838},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"b56367ea676ea8e8783ea89cd4ab150c7da7a060","modified":1651817345839},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"e840b23d33023e6d45e018f6e84b683dd56efd8d","modified":1651817345839},{"_id":"themes/next/source/css/_common/scaffolding/toggles.styl","hash":"572a41499391677d84b16d8dbd6a996a3d5ce041","modified":1651817345840},{"_id":"themes/next/source/css/_common/scaffolding/pagination.styl","hash":"41cba8c4c5637a6b8f1b62e67673b33676f5d734","modified":1651817345839},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"357b899ac0f0dfbbbebf1ea972030c7cefa463ce","modified":1651817345840},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expand.styl","hash":"b332868d76d9f1651efd65abfc0d3c9d699b1a45","modified":1651817345840},{"_id":"themes/next/source/css/_schemes/Mist/_layout.styl","hash":"5604ac1e161099a4d3e5657d53507268866dc717","modified":1651817345840},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"4817e77577896ab5c0da434549917ee703a3f4cf","modified":1651817345840},{"_id":"themes/next/source/js/third-party/analytics/google-analytics.js","hash":"59684383385059dc4f8a1ff85dbbeb703bcdbcb5","modified":1651817345847},{"_id":"themes/next/source/js/third-party/analytics/baidu-analytics.js","hash":"f629acc46ff40c071ffd31b77d5c7616f0fdd778","modified":1651817345847},{"_id":"themes/next/source/js/third-party/analytics/growingio.js","hash":"78dd3cf04082b7dbe6246e404b2aa8e726922402","modified":1651817345847},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"ab16a3dcdc0393b9b582ef59dcc13db9320e917c","modified":1651817345840},{"_id":"themes/next/source/js/third-party/chat/chatra.js","hash":"106f3f89f46ec96a08df5f14c31dca88a0b9b82f","modified":1651817345847},{"_id":"themes/next/source/css/_common/outline/index.styl","hash":"0c9f72ad98807521cbdcee7b5bbe2e884311db39","modified":1651817345837},{"_id":"themes/next/source/css/_common/outline/mobile.styl","hash":"9f88d350df8115d26c6adbc2025a27ef9a42d7ff","modified":1651817345838},{"_id":"themes/next/source/js/third-party/math/katex.js","hash":"83c54ee536e487a1031783443fe0cb63b1b4767e","modified":1651817345847},{"_id":"themes/next/source/js/third-party/math/mathjax.js","hash":"87406572e6781c79146c217adc46f9199c952bbb","modified":1651817345848},{"_id":"themes/next/source/js/third-party/comments/disqusjs.js","hash":"b6c58f098473b526d6a3cd35655caf34b77f7cff","modified":1651817345847},{"_id":"themes/next/source/js/third-party/comments/disqus.js","hash":"0da0ab95471cb73a5d467c5d1b4ce7893ace86fc","modified":1651817345847},{"_id":"themes/next/source/js/third-party/comments/isso.js","hash":"753a873b6f566aff5ba77ca23f91b78eb880ca64","modified":1651817345847},{"_id":"themes/next/source/js/third-party/comments/livere.js","hash":"2247d88c934c765c43013337860774aaa99f0b31","modified":1651817345847},{"_id":"themes/next/source/js/third-party/comments/gitalk.js","hash":"0ec038cf83e8ec067534f16a54041e47a3c1e59a","modified":1651817345847},{"_id":"themes/next/source/js/third-party/statistics/firestore.js","hash":"e1194984b7b41ae232b57bd423c97f36bc7bdd61","modified":1651817345848},{"_id":"themes/next/source/js/third-party/comments/changyan.js","hash":"6d9ca074f1df9e9527ec06c2963b1ad6079d821e","modified":1651817345847},{"_id":"themes/next/source/js/third-party/search/local-search.js","hash":"b37f1b14aef2402d0c2d88f999ff0ce5ef6823c1","modified":1651817345848},{"_id":"themes/next/source/js/third-party/search/algolia-search.js","hash":"ac401e3736d56a3c9cb85ab885744cce0b813c55","modified":1651817345848},{"_id":"themes/next/source/js/third-party/statistics/lean-analytics.js","hash":"34c1f2dbf5c3d4f6e9dad73addb22b648c2053c1","modified":1651817345848},{"_id":"themes/next/source/js/third-party/comments/utterances.js","hash":"f67f90eb03e284c82da2b8cf2f1e31801813c16d","modified":1651817345847},{"_id":"themes/next/source/js/third-party/tags/pdf.js","hash":"af78c22f0e61c8c8aa8794e585e0d632c6d4fcb8","modified":1651817345848},{"_id":"themes/next/source/js/third-party/tags/mermaid.js","hash":"2847a80fa248c9341a049fab3205953460aedefd","modified":1651817345848},{"_id":"themes/next/source/lib/pjax/example/example.js","hash":"48b27c93eb351d2fa91247c35038a9f1627e971a","modified":1651817345850},{"_id":"themes/next/source/lib/pjax/example/index.html","hash":"4a00b556253eeb11fc10013c8c3940a019154001","modified":1651817345850},{"_id":"themes/next/source/lib/pjax/example/page3.html","hash":"8d1d6a9afd80caf29e5b22f10a849b23a864a6a4","modified":1651817345851},{"_id":"themes/next/source/lib/pjax/lib/eval-script.js","hash":"d5980b3c5f3c1a95427eab0d7d2263324fb72bca","modified":1651817345851},{"_id":"themes/next/source/lib/pjax/example/forms.html","hash":"aa62fc6e697e17e16a947eb0176dc24e2e42d72c","modified":1651817345850},{"_id":"themes/next/source/lib/pjax/tests/setup.js","hash":"4a9489e72cbe98527931d95d68b68e2d6a9bff6e","modified":1651817345855},{"_id":"themes/next/source/lib/pjax/example/page2.html","hash":"7654e0a5a471bec5d74fb88d9f2f218817afdd52","modified":1651817345850},{"_id":"themes/next/source/lib/pjax/lib/abort-request.js","hash":"cbae038c94f70163340801cb608f4e503640b88d","modified":1651817345851},{"_id":"themes/next/source/lib/pjax/tests/test.ts","hash":"3a5222592fc1883ba6d07fbb2095e4bb4866e9d9","modified":1651817345855},{"_id":"themes/next/source/lib/pjax/lib/execute-scripts.js","hash":"8c7c18b14c11af7e2d8dd0146b7df428bf8149bb","modified":1651817345851},{"_id":"themes/next/source/lib/pjax/lib/parse-options.js","hash":"054a902e9f350f7414b80f62419da004dd90aa37","modified":1651817345851},{"_id":"themes/next/source/lib/pjax/lib/send-request.js","hash":"15c341d066b0d60879ef3ca5ff858103381fb378","modified":1651817345852},{"_id":"themes/next/source/lib/pjax/lib/foreach-selectors.js","hash":"b11d36344a7a6aa36d533a335785772c9bfb6bc9","modified":1651817345851},{"_id":"themes/next/source/lib/pjax/lib/foreach-els.js","hash":"d8e50967878930891112f4acb46f47697ddc3ad7","modified":1651817345851},{"_id":"themes/next/source/lib/pjax/lib/is-supported.js","hash":"62ede7268080ab7efddd64fced8b3e79af2901f6","modified":1651817345851},{"_id":"themes/next/source/lib/pjax/lib/switches.js","hash":"4e283f667c10e0fea15e269f1c73ccb699979bb4","modified":1651817345852},{"_id":"themes/next/source/lib/pjax/lib/switches-selectors.js","hash":"f31b4af163db3d9a5b3bb7c7534a4a2dd5543435","modified":1651817345852},{"_id":"themes/next/source/lib/pjax/lib/uniqueid.js","hash":"eb127cf8936e5bdcaa7459cf5bd042ff96b5a387","modified":1651817345852},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"8afdc311c6b8db121758371f95cf1c5e77354f42","modified":1651817345835},{"_id":"themes/next/source/css/_common/components/pages/index.styl","hash":"7504dbc5c70262b048143b2c37d2b5aa2809afa2","modified":1651817345835},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"6b816c2511242ee503fb5f34cd3e4dcdafc06b85","modified":1651817345835},{"_id":"themes/next/source/css/_common/components/third-party/index.styl","hash":"b457756758f0632767e8a560e3033059cbe4a67b","modified":1651817345837},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"b6e2eb1550a7845cb2adf86081a4ab6c7bde1e68","modified":1651817345835},{"_id":"themes/next/source/css/_common/components/third-party/gitalk.styl","hash":"7102f8e819b62cf7d121fd063dc663fd068feaa6","modified":1651817345836},{"_id":"themes/next/source/css/_common/components/pages/tag-cloud.styl","hash":"1a81d1a71fcf0699629ce6e72dfd0a15f3a2dd0a","modified":1651817345835},{"_id":"themes/next/source/css/_common/components/third-party/search.styl","hash":"2896840ab8ac8ab2a7f76d18df893f290ac31625","modified":1651817345837},{"_id":"themes/next/source/css/_common/components/third-party/math.styl","hash":"83c6588c51cd418336f4945813410a100ddfe2a4","modified":1651817345837},{"_id":"themes/next/source/css/_common/components/third-party/utterances.styl","hash":"bf88d9c585d7b00463c46352402cfea415c29493","modified":1651817345837},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"2c534d2b2dbc932ad65d335a720a7ba9612bac04","modified":1651817345837},{"_id":"themes/next/source/css/_common/components/post/index.styl","hash":"b3fa752f72ca1413289b76c56fbd33a00e3d25d7","modified":1651817345836},{"_id":"themes/next/source/css/_common/components/post/post-body.styl","hash":"5d61dedb3bec1021d52894f9b379e4d0953f6a35","modified":1651817345836},{"_id":"themes/next/source/css/_common/components/post/post-followme.styl","hash":"76d0dfb3a8b873a6180604ac6daecf38b6a963a2","modified":1651817345836},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"ec37a36e94ba791663607a5022f763915778578f","modified":1651817345836},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"aa366d37389760c8595529b850f461569577a1c5","modified":1651817345836},{"_id":"themes/next/source/css/_common/components/post/post-header.styl","hash":"2ca4dea5e7785c9b77566d95cabf896d20a42741","modified":1651817345836},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"b1181c5f12a70b8bf710586fcb0d7959841ee512","modified":1651817345836},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"5b5649b9749e3fd8b63aef22ceeece0a6e1df605","modified":1651817345836},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"9ac6f477177264c26a46e8333b8456720a0444dc","modified":1651817345836},{"_id":"themes/next/source/css/_common/components/post/post-footer.styl","hash":"1d284f3ea03ba9b4feb76b375e539a8e0bccf1c3","modified":1651817345836},{"_id":"themes/next/source/css/_common/scaffolding/highlight/copy-code.styl","hash":"83ee4993710fc8daa1c8dbfccd5d5091fd244c30","modified":1651817345839},{"_id":"themes/next/source/css/_common/scaffolding/highlight/index.styl","hash":"08e79881d58d01afab6dbed37ab4f52356564d7e","modified":1651817345839},{"_id":"themes/next/source/css/_common/scaffolding/tags/index.styl","hash":"cef4e779473daa3761709958243c6b8a57bbd814","modified":1651817345839},{"_id":"themes/next/source/css/_common/scaffolding/tags/blockquote-center.styl","hash":"15a5e273a8137550c93c8d2a60f9fcf86e04a89e","modified":1651817345839},{"_id":"themes/next/source/css/_common/scaffolding/tags/label.styl","hash":"debee14539272fbe3835a7d3853af2230baa3501","modified":1651817345839},{"_id":"themes/next/source/css/_common/scaffolding/tags/group-pictures.styl","hash":"393ff96234e4196b569d4b11496774eb78e147de","modified":1651817345839},{"_id":"themes/next/source/css/_common/scaffolding/tags/mermaid.styl","hash":"3c029a003e9bf747e1b9cc7c0c127f6028374876","modified":1651817345839},{"_id":"themes/next/source/css/_common/scaffolding/tags/note.styl","hash":"f53e6c12bd4805888f696386d00668f23cd335e7","modified":1651817345839},{"_id":"themes/next/source/css/_common/scaffolding/tags/pdf.styl","hash":"b49c64f8e9a6ca1c45c0ba98febf1974fdd03616","modified":1651817345839},{"_id":"themes/next/source/css/_common/outline/header/bookmark.styl","hash":"d6d60f02b5e9f89dbfce180b3884030898022664","modified":1651817345837},{"_id":"themes/next/source/css/_common/scaffolding/tags/link-grid.styl","hash":"2421500e447822ef1b6826403a3e1df3345641d7","modified":1651817345839},{"_id":"themes/next/source/css/_common/outline/footer/index.styl","hash":"4f482514230c941c9475e1272188e53a54975463","modified":1651817345837},{"_id":"themes/next/source/css/_common/scaffolding/tags/tabs.styl","hash":"50b00218e854200c4ec0573a841e226d49c45cba","modified":1651817345840},{"_id":"themes/next/source/css/_common/outline/header/site-nav.styl","hash":"bf3ad8b4268f763a1e26377681644887694bc009","modified":1651817345837},{"_id":"themes/next/source/css/_common/outline/header/site-meta.styl","hash":"9a47c9045e443b8d20932f9c564a3a05fa4c6b51","modified":1651817345837},{"_id":"themes/next/source/css/_common/outline/header/menu.styl","hash":"392fd53a8dd4e3f33a853ebb24290a622300e0ff","modified":1651817345837},{"_id":"themes/next/source/css/_common/outline/header/github-banner.styl","hash":"cf194bea1c9e67fde871a04de3bc81df72c54277","modified":1651817345837},{"_id":"themes/next/source/css/_common/outline/header/index.styl","hash":"f1778d2c56974b96dae429456d5c55be325c4946","modified":1651817345837},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author.styl","hash":"5b38ac4a0f1ade0e681aff0e3366c481d9cf3dcd","modified":1651817345838},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author-links.styl","hash":"52fc98b1435129eb3edb9293ced9e507741f1350","modified":1651817345838},{"_id":"themes/next/source/css/_common/outline/sidebar/index.styl","hash":"d180871d4440090241fc988736c1f3a7efb4b1ba","modified":1651817345838},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-button.styl","hash":"ab715dbf2b98bfeb5e7b7c43e92e5c02496cc2ea","modified":1651817345838},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-dimmer.styl","hash":"fbdb63c6a8887d19b7137325ba7d6806f728139c","modified":1651817345838},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-blogroll.styl","hash":"9950c3188a28e1c63b5498b7bdcd14b12ace3e28","modified":1651817345838},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-nav.styl","hash":"f7ff85fe6c4efb8ff036fab2c3277b7d8bed69a8","modified":1651817345838},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toc.styl","hash":"6394340c28a21f6aa90e786f3bfe24fb26595653","modified":1651817345838},{"_id":"themes/next/source/css/_common/outline/sidebar/site-state.styl","hash":"69eb1c282a8fd5dbab606cc09c34c5dc8e44e753","modified":1651817345838},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toggle.styl","hash":"432e73bc4f99322af6af1852e0ea6e674919c31a","modified":1651817345838},{"_id":"themes/next/source/lib/pjax/tests/lib/events.js","hash":"70ca7ec140d1dcf8c4958e7b6788b09ef2b60181","modified":1651817345853},{"_id":"themes/next/source/lib/pjax/tests/lib/abort-request.js","hash":"96d7a604ca275455199bd94d16b9cdc254bee9b9","modified":1651817345853},{"_id":"themes/next/source/lib/pjax/tests/lib/execute-scripts.js","hash":"2d02a0151ead9924516cdae9308f8667b27a7ea7","modified":1651817345853},{"_id":"themes/next/source/lib/pjax/tests/lib/foreach-els.js","hash":"85995dd27d0d866cfaf5c560732fab8b0099938c","modified":1651817345853},{"_id":"themes/next/source/lib/pjax/tests/lib/eval-scripts.js","hash":"3c9125a04cec9d511f16f9311656533ef6a115d1","modified":1651817345853},{"_id":"themes/next/source/lib/pjax/tests/lib/is-supported.js","hash":"e25c7e69c8b7a64a44affcae317adb2b3889aee6","modified":1651817345853},{"_id":"themes/next/source/lib/pjax/tests/lib/parse-options.js","hash":"45ab302da33e5457a71fd22bbd082e51f5b06b49","modified":1651817345854},{"_id":"themes/next/source/lib/pjax/tests/lib/foreach-selectors.js","hash":"898b48ef191719070488f16a54fba8a794b10057","modified":1651817345853},{"_id":"themes/next/source/lib/pjax/tests/lib/switch-selectors.js","hash":"993dd67b1b629288feb8d167fb12b602626cf1d5","modified":1651817345854},{"_id":"themes/next/source/lib/pjax/tests/lib/uniqueid.js","hash":"430550f31b9e6356c2e3a033c1b418bd6acd9667","modified":1651817345854},{"_id":"themes/next/source/lib/pjax/tests/lib/switches.js","hash":"f5dfdf57bafd2b4edd5f854d70837b5fe760756e","modified":1651817345854},{"_id":"themes/next/source/lib/pjax/lib/events/off.js","hash":"79920b24246e150f1c73511f1a271b93b9c5d9c8","modified":1651817345851},{"_id":"themes/next/source/lib/pjax/lib/events/trigger.js","hash":"c05ba73199c5e2c7682655491ed37743bd451751","modified":1651817345851},{"_id":"themes/next/source/lib/pjax/lib/events/on.js","hash":"111fba16cc4ca701aefedea2589c832b60af303d","modified":1651817345851},{"_id":"themes/next/source/lib/pjax/lib/proto/attach-form.js","hash":"b41c66e58897e6371fbd04cd2b9eb7bae10e0d89","modified":1651817345852},{"_id":"themes/next/source/lib/pjax/lib/proto/log.js","hash":"c728730594aed7d81509787c5bb487af014415e1","modified":1651817345852},{"_id":"themes/next/source/lib/pjax/tests/lib/send-request.js","hash":"d6adad7f95754c53b9885c0999a5118995fdc76f","modified":1651817345854},{"_id":"themes/next/source/lib/pjax/lib/proto/handle-response.js","hash":"f68bab958cce4dbbcb91920d7a8aba55b9066b41","modified":1651817345852},{"_id":"themes/next/source/lib/pjax/lib/proto/parse-element.js","hash":"52bef8a845aab0d54907f73875fa58b4084019be","modified":1651817345852},{"_id":"themes/next/source/lib/pjax/lib/proto/attach-link.js","hash":"d15a61235aa8c1615e60ea34d9bbee834be804d0","modified":1651817345852},{"_id":"themes/next/source/lib/pjax/lib/util/contains.js","hash":"fcc9be0477d941b7c4ba71de328773e556ded7ce","modified":1651817345852},{"_id":"themes/next/source/lib/pjax/lib/util/clone.js","hash":"55027b88e007818c6963205fcd0090a61af8237c","modified":1651817345852},{"_id":"themes/next/source/lib/pjax/lib/util/extend.js","hash":"e599aaef93e3a00ccbd92cd87df09898d712e398","modified":1651817345852},{"_id":"themes/next/source/lib/pjax/lib/util/update-query-string.js","hash":"eefcbff322f8c607865d47ee8fa49f1c8bfa8d7a","modified":1651817345853},{"_id":"themes/next/source/lib/pjax/lib/util/noop.js","hash":"2c9f7e231af1a62db195875ca62df7edc253c3c4","modified":1651817345852},{"_id":"themes/next/source/lib/pjax/tests/lib/util/clone.js","hash":"4b0e62bd0f4eef3549b0da70987f63ce4953bef0","modified":1651817345854},{"_id":"themes/next/source/lib/pjax/tests/lib/util/extend.js","hash":"d45488ff6f8e3e1b59a62d0c88c86b750fe50ed4","modified":1651817345854},{"_id":"themes/next/source/lib/pjax/tests/lib/util/contains.js","hash":"bc0c8be855e9736cb256a2aa44fd46f3a7d1d6c5","modified":1651817345854},{"_id":"themes/next/source/lib/pjax/tests/lib/util/noop.js","hash":"6959a4c02c41453a5edfa4163e36752fcfa3edf9","modified":1651817345854},{"_id":"themes/next/source/lib/pjax/tests/lib/util/update-query-string.js","hash":"4158dcd877c5f229400417e0da22eb4c5b8e8e38","modified":1651817345855},{"_id":"themes/next/source/lib/pjax/tests/lib/proto/attach-form.js","hash":"3614a962e3185b354a2e0d987bcecdef4a209da6","modified":1651817345854},{"_id":"themes/next/source/lib/pjax/tests/lib/proto/handle-response.js","hash":"26e0e334f0b20ff2fe75b3ab12a93ce44a5823f0","modified":1651817345854},{"_id":"themes/next/source/lib/pjax/tests/lib/proto/parse-element.js","hash":"474edc8844028de67cbad054da79c05727620785","modified":1651817345854},{"_id":"themes/next/source/lib/pjax/tests/lib/proto/attach-link.js","hash":"9d283cb0b09730e932673c73a3352a2d2e8939fa","modified":1651817345854},{"_id":"themes/next/source/images/tx.png","hash":"013fead8a1763debf7bf8bd5a1c1f2c42efb0683","modified":1651817345843},{"_id":"themes/next/source/images/yourbackground.png","hash":"f3458660ee7342f5246d2fc9a05ea72494335dc9","modified":1651817345846},{"_id":"public/search.xml","hash":"a43c559b25e5e428c1b99c33920bd5b7737da4a4","modified":1683771959370},{"_id":"public/css/injector/light.css","hash":"ee8f634eb15712c15c6f2fa0f0e3245e54fe4639","modified":1683771959370},{"_id":"public/css/injector/dark.css","hash":"f1d6a3afa54fc44c451ea6fc44e1202df150335d","modified":1683771959370},{"_id":"public/js/injector.js","hash":"bf2e6de21727aaaaf57944d2e61bb350a7ef91e4","modified":1683771959370},{"_id":"public/about/index.html","hash":"a11dc2fe25105606dca45143c022614c53e4f6df","modified":1683771959370},{"_id":"public/categories/index.html","hash":"d643b52d865d7f7ebedc1f6b5afe68d97bbe0198","modified":1683771959370},{"_id":"public/archives/5123.html","hash":"a958109cd5ef02f56a93498a02498ecd783ecacd","modified":1683772081440},{"_id":"public/tags/index.html","hash":"40f68767a7e771018d6e7397cf55e5c9efa1b59d","modified":1683771959370},{"_id":"public/categories/Docker/index.html","hash":"a74e9bfd36f84f0d8734dfeaff0bed1232753916","modified":1683771959370},{"_id":"public/categories/Java/index.html","hash":"8ccbac3d1e95f4b6d35a8092b008bb10111d13fc","modified":1683771959370},{"_id":"public/categories/Linux/index.html","hash":"34fd1a8f65baf0c05c01503072e80edcf5255a35","modified":1683771959370},{"_id":"public/categories/前端/index.html","hash":"96e135e52d18251bd6b75669f2a139819069fe6b","modified":1683771959370},{"_id":"public/archives/index.html","hash":"9907d0b64e31b5a7d0d9c59f8b44f73e51022248","modified":1683771959370},{"_id":"public/archives/2021/index.html","hash":"4d2de45b7d688d2f399ebc9b3ac9d9b74fab396f","modified":1683771959370},{"_id":"public/archives/2021/05/index.html","hash":"6905c11afc22f01244ca486c67e0dab9b73872e8","modified":1683771959370},{"_id":"public/archives/2021/06/index.html","hash":"07310dee5221190bdb74ad55b33143b212def184","modified":1683771959370},{"_id":"public/archives/2021/10/index.html","hash":"5efc429f29c83322d430ff9e8138344f1e6160bc","modified":1683771959370},{"_id":"public/archives/2022/index.html","hash":"686c6a15b8b87ee5a43d994f9a33114f9f9bf904","modified":1683771959370},{"_id":"public/archives/2022/07/index.html","hash":"732d5e227f1a673cf94b42adbea8e2349652f10c","modified":1683771959370},{"_id":"public/archives/2023/index.html","hash":"7d76ba0169a7579ae7921662bf6cc925bc3a7e3b","modified":1683771959370},{"_id":"public/archives/2023/03/index.html","hash":"2065fa6804cf8d21ed93c02b5fe32c03118faff5","modified":1683771959370},{"_id":"public/archives/2023/05/index.html","hash":"3801e905f96be1c3cd4193c52d60300c13f1effe","modified":1683771959370},{"_id":"public/tags/Docker/index.html","hash":"051ce0b1bbad195c8783ce429c681107f603dea6","modified":1683771959370},{"_id":"public/tags/Java/index.html","hash":"225febda80fddf405162d9c90cd63d20b388e219","modified":1683771959370},{"_id":"public/tags/POI/index.html","hash":"04e2ddb4acb06befa9a5bb99d69a936e86a6c1df","modified":1683771959370},{"_id":"public/tags/Linux/index.html","hash":"f1d51250be650e358ed55b0ecc942b47c18bbac2","modified":1683771959370},{"_id":"public/tags/异常/index.html","hash":"094724af3db47929a85e3005e7cf73244bf11ad3","modified":1683771959370},{"_id":"public/tags/Spring-Security/index.html","hash":"00021cc05b6c5f463e165ba1043b8af5718d7a84","modified":1683771959370},{"_id":"public/tags/css/index.html","hash":"338b3275021aedbeb0f89c8a8bdd155d24de6110","modified":1683771959370},{"_id":"public/tags/滚动条/index.html","hash":"5110d0b44dfe8841d8398b27eb40ebcdedae5c92","modified":1683771959370},{"_id":"public/archives/58969.html","hash":"1980edc95e00eee3a5d68f26a7818fec1aa65ebc","modified":1683772081440},{"_id":"public/archives/57987.html","hash":"90ee8bf533c7e45b4a60294739730835ab337470","modified":1683771959370},{"_id":"public/archives/48147.html","hash":"24e3aa3bb38eb1d9587e8fbc586f58ee547eaf18","modified":1683771959370},{"_id":"public/archives/34298.html","hash":"663b8df16663c48cc953837241c6755559b5a40b","modified":1683771959370},{"_id":"public/archives/55014.html","hash":"d3386824cc780bd1fc52946ddbac60773e838eee","modified":1683771959370},{"_id":"public/archives/45192.html","hash":"b9d074244e6614cb023e5720a6e1725495fa6797","modified":1683771959370},{"_id":"public/archives/8599.html","hash":"7acf4dbbe9777971af37d4df0e175e678927b479","modified":1683771959370},{"_id":"public/index.html","hash":"c4212ccb147d0df831e5d3ea3aefd432b43650e0","modified":1683771959370},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1683771959370},{"_id":"public/images/cc-by-nc-sa.svg","hash":"38478fb29a229a444b9b9e0ebf3a2fd5d943e476","modified":1683771959370},{"_id":"public/images/cc-by-nc.svg","hash":"7cf99976f1162a385c2a85eca3a43ce928d4d60e","modified":1683771959370},{"_id":"public/images/cc-by-nc-nd.svg","hash":"29bf23bccef6fc85ceafe721dd394bc287770495","modified":1683771959370},{"_id":"public/images/avatar.gif","hash":"2dbc3e2f2d624b2ca1afe6edc2ca17307f1950c8","modified":1683771959370},{"_id":"public/images/cc-by-nd.svg","hash":"b796fa30ced3ddb228af19955fe6491b81f0ccc8","modified":1683771959370},{"_id":"public/images/cc-by.svg","hash":"a003f30369698b2a2f45d8c460d2956fb6d1eb15","modified":1683771959370},{"_id":"public/images/cc-by-sa.svg","hash":"c2e9d5ac5d93f63398357016df7a0ba0483aad75","modified":1683771959370},{"_id":"public/images/cc-zero.svg","hash":"bccb103bb13e990db9b0487bb72abaa3d2b09960","modified":1683771959370},{"_id":"public/images/favicon-16x16-next.png","hash":"2bf7b1347e81ade507a8e2f919ed004f214ab1ca","modified":1683771959370},{"_id":"public/images/favicon-32x32-next1.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1683771959370},{"_id":"public/images/logo-algolia-nebula-blue-full.svg","hash":"b85e274207b1392782476a0430feac98db1e7da0","modified":1683771959370},{"_id":"public/images/logo.svg","hash":"2cb74fd3ea2635e015eabc58a8d488aed6cf6417","modified":1683771959370},{"_id":"public/images/favicon-32x32-next.png","hash":"7c3faed7ee21178b50143703822103810743e4ed","modified":1683771959370},{"_id":"public/images/favicon-16x16-next1.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1683771959370},{"_id":"public/lib/reading_progress/LICENSE","hash":"b29db4c99aa5b8d574026f68804051ff4b75466e","modified":1683771959370},{"_id":"public/lib/pace/LICENSE","hash":"b29db4c99aa5b8d574026f68804051ff4b75466e","modified":1683771959370},{"_id":"public/lib/pjax/index.d.ts","hash":"b90fe99fe90ee7024d760467e75565da561f7ccd","modified":1683771959370},{"_id":"public/lib/pjax/LICENSE","hash":"0cadc79604daeacf95062d1e5ccd43edbfaed836","modified":1683771959370},{"_id":"public/lib/pjax/tests/test.ts","hash":"3a5222592fc1883ba6d07fbb2095e4bb4866e9d9","modified":1683771959370},{"_id":"public/lib/reading_progress/package.json","hash":"8d6815f29afe52968881f536aee8d9267ba53bd2","modified":1683771959370},{"_id":"public/lib/reading_progress/README.html","hash":"af8a97cb3146ff6047f6deaa3e20cd583dc69259","modified":1683771959370},{"_id":"public/lib/reading_progress/renovate.json","hash":"94990e0ad04ce4a7c6f0ac3543318d9e02db1264","modified":1683771959370},{"_id":"public/lib/pace/README.html","hash":"b1db0e6c71c25fbdc5a161e1bd70382846ce99ab","modified":1683771959370},{"_id":"public/lib/pjax/CHANGELOG.html","hash":"1646dbdd1b80dcdb9b8704b1fcfe81345f5fcd6d","modified":1683771959370},{"_id":"public/lib/pjax/package.json","hash":"da55143475b12cb91a44aeb5a995c53879fe3326","modified":1683771959370},{"_id":"public/lib/pjax/example/forms.html","hash":"aa62fc6e697e17e16a947eb0176dc24e2e42d72c","modified":1683771959370},{"_id":"public/lib/pjax/example/index.html","hash":"4a00b556253eeb11fc10013c8c3940a019154001","modified":1683771959370},{"_id":"public/lib/pjax/example/page2.html","hash":"7654e0a5a471bec5d74fb88d9f2f218817afdd52","modified":1683771959370},{"_id":"public/lib/pjax/example/page3.html","hash":"8d1d6a9afd80caf29e5b22f10a849b23a864a6a4","modified":1683771959370},{"_id":"public/js/bookmark.js","hash":"e45e1fbb7c6d645e9c410759486216e570d02bef","modified":1683771959370},{"_id":"public/js/config.js","hash":"7dad20378e907725e18007ddbad80b3366027240","modified":1683771959370},{"_id":"public/js/comments-buttons.js","hash":"1a7344440321713426a0b2ab17e276b5bdf85ade","modified":1683771959370},{"_id":"public/js/comments.js","hash":"66ae2e26ea36a41b72c638ea8b220296638ae952","modified":1683771959370},{"_id":"public/js/next-boot.js","hash":"873e52a851a6ce8dc61b870fa7083da4d2304b7b","modified":1683771959370},{"_id":"public/js/motion.js","hash":"6d4bd07a6f8e1b4083119dca0acb5b289533b619","modified":1683771959370},{"_id":"public/js/pjax.js","hash":"5bfc1cea214bd31847adc356f37df8e0b6a449df","modified":1683771959370},{"_id":"public/js/utils.js","hash":"24e161cc99ee401a47b7d125fecce51ab0566cdc","modified":1683771959370},{"_id":"public/js/schedule.js","hash":"71d62fc3584c47ff2d4cc945226e412264399be9","modified":1683771959370},{"_id":"public/js/third-party/nprogress.js","hash":"7d56b18a2bdece5468470c70c5f3eb79d4120964","modified":1683771959370},{"_id":"public/js/third-party/quicklink.js","hash":"6f58cd7aa8f6f1ab92d5a96551add293f4e55312","modified":1683771959370},{"_id":"public/js/schemes/muse.js","hash":"9d15d0d6a58b1df74827288f117af22b4b6aafe5","modified":1683771959370},{"_id":"public/js/third-party/rating.js","hash":"51a35e9ce91567bfc5efa31007ae694bfdfb68b5","modified":1683771959370},{"_id":"public/lib/reading_progress/reading_progress.js","hash":"ec68a79421cfba022ac53f46813d013dd48617c0","modified":1683771959370},{"_id":"public/lib/reading_progress/reading_progress.min.js","hash":"b768dc009e6d37dd952632c317f6c33e6e2d89ad","modified":1683771959370},{"_id":"public/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1683771959370},{"_id":"public/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1683771959370},{"_id":"public/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1683771959370},{"_id":"public/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1683771959370},{"_id":"public/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1683771959370},{"_id":"public/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1683771959370},{"_id":"public/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1683771959370},{"_id":"public/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1683771959370},{"_id":"public/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1683771959370},{"_id":"public/lib/pace/pace-theme-flat-top.min.css","hash":"5e1c97e232b46e48592a8e4983ae5a89e0a7da6a","modified":1683771959370},{"_id":"public/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1683771959370},{"_id":"public/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1683771959370},{"_id":"public/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1683771959370},{"_id":"public/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1683771959370},{"_id":"public/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1683771959370},{"_id":"public/lib/pjax/index.js","hash":"4af61bcf253ce67d67bb0f524b441869301de9a5","modified":1683771959370},{"_id":"public/js/third-party/analytics/baidu-analytics.js","hash":"f629acc46ff40c071ffd31b77d5c7616f0fdd778","modified":1683771959370},{"_id":"public/js/third-party/analytics/growingio.js","hash":"78dd3cf04082b7dbe6246e404b2aa8e726922402","modified":1683771959370},{"_id":"public/js/third-party/analytics/google-analytics.js","hash":"59684383385059dc4f8a1ff85dbbeb703bcdbcb5","modified":1683771959370},{"_id":"public/js/third-party/math/mathjax.js","hash":"87406572e6781c79146c217adc46f9199c952bbb","modified":1683771959370},{"_id":"public/js/third-party/chat/chatra.js","hash":"106f3f89f46ec96a08df5f14c31dca88a0b9b82f","modified":1683771959370},{"_id":"public/js/third-party/comments/changyan.js","hash":"6d9ca074f1df9e9527ec06c2963b1ad6079d821e","modified":1683771959370},{"_id":"public/js/third-party/comments/disqus.js","hash":"0da0ab95471cb73a5d467c5d1b4ce7893ace86fc","modified":1683771959370},{"_id":"public/js/third-party/math/katex.js","hash":"83c54ee536e487a1031783443fe0cb63b1b4767e","modified":1683771959370},{"_id":"public/js/third-party/comments/isso.js","hash":"753a873b6f566aff5ba77ca23f91b78eb880ca64","modified":1683771959370},{"_id":"public/js/third-party/comments/disqusjs.js","hash":"b6c58f098473b526d6a3cd35655caf34b77f7cff","modified":1683771959370},{"_id":"public/js/third-party/comments/gitalk.js","hash":"0ec038cf83e8ec067534f16a54041e47a3c1e59a","modified":1683771959370},{"_id":"public/js/third-party/comments/livere.js","hash":"2247d88c934c765c43013337860774aaa99f0b31","modified":1683771959370},{"_id":"public/js/third-party/comments/utterances.js","hash":"f67f90eb03e284c82da2b8cf2f1e31801813c16d","modified":1683771959370},{"_id":"public/js/third-party/statistics/firestore.js","hash":"e1194984b7b41ae232b57bd423c97f36bc7bdd61","modified":1683771959370},{"_id":"public/js/third-party/search/local-search.js","hash":"b37f1b14aef2402d0c2d88f999ff0ce5ef6823c1","modified":1683771959370},{"_id":"public/js/third-party/search/algolia-search.js","hash":"ac401e3736d56a3c9cb85ab885744cce0b813c55","modified":1683771959370},{"_id":"public/js/third-party/statistics/lean-analytics.js","hash":"34c1f2dbf5c3d4f6e9dad73addb22b648c2053c1","modified":1683771959370},{"_id":"public/js/third-party/tags/mermaid.js","hash":"2847a80fa248c9341a049fab3205953460aedefd","modified":1683771959370},{"_id":"public/lib/pjax/example/example.js","hash":"48b27c93eb351d2fa91247c35038a9f1627e971a","modified":1683771959370},{"_id":"public/js/third-party/tags/pdf.js","hash":"af78c22f0e61c8c8aa8794e585e0d632c6d4fcb8","modified":1683771959370},{"_id":"public/lib/pjax/tests/setup.js","hash":"4a9489e72cbe98527931d95d68b68e2d6a9bff6e","modified":1683771959370},{"_id":"public/lib/pjax/lib/eval-script.js","hash":"d5980b3c5f3c1a95427eab0d7d2263324fb72bca","modified":1683771959370},{"_id":"public/lib/pjax/lib/abort-request.js","hash":"cbae038c94f70163340801cb608f4e503640b88d","modified":1683771959370},{"_id":"public/lib/pjax/lib/foreach-els.js","hash":"d8e50967878930891112f4acb46f47697ddc3ad7","modified":1683771959370},{"_id":"public/lib/pjax/lib/foreach-selectors.js","hash":"b11d36344a7a6aa36d533a335785772c9bfb6bc9","modified":1683771959370},{"_id":"public/lib/pjax/lib/is-supported.js","hash":"62ede7268080ab7efddd64fced8b3e79af2901f6","modified":1683771959370},{"_id":"public/lib/pjax/lib/execute-scripts.js","hash":"8c7c18b14c11af7e2d8dd0146b7df428bf8149bb","modified":1683771959370},{"_id":"public/lib/pjax/lib/parse-options.js","hash":"054a902e9f350f7414b80f62419da004dd90aa37","modified":1683771959370},{"_id":"public/lib/pjax/lib/send-request.js","hash":"15c341d066b0d60879ef3ca5ff858103381fb378","modified":1683771959370},{"_id":"public/lib/pjax/lib/switches-selectors.js","hash":"f31b4af163db3d9a5b3bb7c7534a4a2dd5543435","modified":1683771959370},{"_id":"public/lib/pjax/lib/switches.js","hash":"4e283f667c10e0fea15e269f1c73ccb699979bb4","modified":1683771959370},{"_id":"public/lib/pjax/lib/uniqueid.js","hash":"eb127cf8936e5bdcaa7459cf5bd042ff96b5a387","modified":1683771959370},{"_id":"public/lib/pjax/tests/lib/abort-request.js","hash":"96d7a604ca275455199bd94d16b9cdc254bee9b9","modified":1683771959370},{"_id":"public/lib/pjax/tests/lib/eval-scripts.js","hash":"3c9125a04cec9d511f16f9311656533ef6a115d1","modified":1683771959370},{"_id":"public/lib/pjax/tests/lib/foreach-els.js","hash":"85995dd27d0d866cfaf5c560732fab8b0099938c","modified":1683771959370},{"_id":"public/lib/pjax/tests/lib/events.js","hash":"70ca7ec140d1dcf8c4958e7b6788b09ef2b60181","modified":1683771959370},{"_id":"public/lib/pjax/tests/lib/execute-scripts.js","hash":"2d02a0151ead9924516cdae9308f8667b27a7ea7","modified":1683771959370},{"_id":"public/lib/pjax/tests/lib/is-supported.js","hash":"e25c7e69c8b7a64a44affcae317adb2b3889aee6","modified":1683771959370},{"_id":"public/lib/pjax/tests/lib/foreach-selectors.js","hash":"898b48ef191719070488f16a54fba8a794b10057","modified":1683771959370},{"_id":"public/lib/pjax/tests/lib/switch-selectors.js","hash":"993dd67b1b629288feb8d167fb12b602626cf1d5","modified":1683771959370},{"_id":"public/lib/pjax/tests/lib/parse-options.js","hash":"45ab302da33e5457a71fd22bbd082e51f5b06b49","modified":1683771959370},{"_id":"public/lib/pjax/tests/lib/uniqueid.js","hash":"430550f31b9e6356c2e3a033c1b418bd6acd9667","modified":1683771959370},{"_id":"public/lib/pjax/tests/lib/send-request.js","hash":"d6adad7f95754c53b9885c0999a5118995fdc76f","modified":1683771959370},{"_id":"public/lib/pjax/lib/events/off.js","hash":"79920b24246e150f1c73511f1a271b93b9c5d9c8","modified":1683771959370},{"_id":"public/lib/pjax/lib/events/on.js","hash":"111fba16cc4ca701aefedea2589c832b60af303d","modified":1683771959370},{"_id":"public/lib/pjax/tests/lib/switches.js","hash":"f5dfdf57bafd2b4edd5f854d70837b5fe760756e","modified":1683771959370},{"_id":"public/lib/pjax/lib/proto/attach-form.js","hash":"b41c66e58897e6371fbd04cd2b9eb7bae10e0d89","modified":1683771959370},{"_id":"public/lib/pjax/lib/proto/attach-link.js","hash":"d15a61235aa8c1615e60ea34d9bbee834be804d0","modified":1683771959370},{"_id":"public/lib/pjax/lib/proto/parse-element.js","hash":"52bef8a845aab0d54907f73875fa58b4084019be","modified":1683771959370},{"_id":"public/lib/pjax/lib/proto/handle-response.js","hash":"f68bab958cce4dbbcb91920d7a8aba55b9066b41","modified":1683771959370},{"_id":"public/lib/pjax/lib/proto/log.js","hash":"c728730594aed7d81509787c5bb487af014415e1","modified":1683771959370},{"_id":"public/lib/pjax/lib/util/contains.js","hash":"fcc9be0477d941b7c4ba71de328773e556ded7ce","modified":1683771959370},{"_id":"public/lib/pjax/lib/util/clone.js","hash":"55027b88e007818c6963205fcd0090a61af8237c","modified":1683771959370},{"_id":"public/lib/pjax/lib/events/trigger.js","hash":"c05ba73199c5e2c7682655491ed37743bd451751","modified":1683771959370},{"_id":"public/lib/pjax/lib/util/extend.js","hash":"e599aaef93e3a00ccbd92cd87df09898d712e398","modified":1683771959370},{"_id":"public/lib/pjax/lib/util/update-query-string.js","hash":"eefcbff322f8c607865d47ee8fa49f1c8bfa8d7a","modified":1683771959370},{"_id":"public/lib/pjax/lib/util/noop.js","hash":"2c9f7e231af1a62db195875ca62df7edc253c3c4","modified":1683771959370},{"_id":"public/lib/pjax/tests/lib/util/contains.js","hash":"bc0c8be855e9736cb256a2aa44fd46f3a7d1d6c5","modified":1683771959370},{"_id":"public/lib/pjax/tests/lib/util/extend.js","hash":"d45488ff6f8e3e1b59a62d0c88c86b750fe50ed4","modified":1683771959370},{"_id":"public/lib/pjax/tests/lib/util/noop.js","hash":"6959a4c02c41453a5edfa4163e36752fcfa3edf9","modified":1683771959370},{"_id":"public/lib/pjax/tests/lib/util/update-query-string.js","hash":"4158dcd877c5f229400417e0da22eb4c5b8e8e38","modified":1683771959370},{"_id":"public/lib/pjax/tests/lib/util/clone.js","hash":"4b0e62bd0f4eef3549b0da70987f63ce4953bef0","modified":1683771959370},{"_id":"public/lib/pjax/tests/lib/proto/attach-form.js","hash":"3614a962e3185b354a2e0d987bcecdef4a209da6","modified":1683771959370},{"_id":"public/lib/pjax/tests/lib/proto/handle-response.js","hash":"26e0e334f0b20ff2fe75b3ab12a93ce44a5823f0","modified":1683771959370},{"_id":"public/lib/pjax/tests/lib/proto/parse-element.js","hash":"474edc8844028de67cbad054da79c05727620785","modified":1683771959370},{"_id":"public/lib/pjax/tests/lib/proto/attach-link.js","hash":"9d283cb0b09730e932673c73a3352a2d2e8939fa","modified":1683771959370},{"_id":"public/lib/pjax/README.html","hash":"b00baa4b41400b5987274a6b26b096b995c63a51","modified":1683771959370},{"_id":"public/lib/pace/pace-theme-material.min.css","hash":"f1ff83985c090f3a3236554c5ef69542dcceb049","modified":1683771959370},{"_id":"public/lib/pjax/pjax.js","hash":"e973e2c6ffb6f6d7b4a1730ba0ed6d3628b2b39f","modified":1683771959370},{"_id":"public/lib/pjax/pjax.min.js","hash":"68d0c6ad28f042c78fc18a6e9d782a7047c01905","modified":1683771959370},{"_id":"public/images/tx.png","hash":"013fead8a1763debf7bf8bd5a1c1f2c42efb0683","modified":1683771959370},{"_id":"public/css/noscript.css","hash":"1ae0795b0919d94443603d546675ccccde3d42d1","modified":1683771959370},{"_id":"public/css/main.css","hash":"b1f1207a89f2b2dbcb137c36fbc26524772148cc","modified":1683771959370},{"_id":"public/css/injector/main.css","hash":"529abf84d79b740f379288def58992f660d016b0","modified":1683771959370},{"_id":"public/images/yourbackground.png","hash":"f3458660ee7342f5246d2fc9a05ea72494335dc9","modified":1683771959370}],"Category":[{"name":"Docker","_id":"clhiicn3h0004nypj5vrw74dx"},{"name":"Java","_id":"clhiicn3j000anypj44em5ga3"},{"name":"Linux","_id":"clhiicn3k000gnypjbvtchqmc"},{"name":"前端","_id":"clhiicn3l000tnypj8vd08l4f"}],"Data":[{"_id":"styles","data":"/* build time:Thu May 11 2023 10:25:59 GMT+0800 (中国标准时间)*/\n.sidebar{box-shadow:none;background:0 0}body{background:url(/images/yourbackground.png);background-repeat:no-repeat;background-attachment:fixed;background-size:cover;background-position:50% 50%}.back-to-top.back-to-top-on{display:none}\n/* rebuild by neat */"},{"_id":"variables","data":"/* build time:Thu May 11 2023 10:25:59 GMT+0800 (中国标准时间)*/\n\n/* rebuild by neat */"}],"Page":[{"title":"about","date":"2021-04-29T14:27:04.000Z","_content":"","source":"about/index.md","raw":"---\ntitle: about\ndate: 2021-04-29 22:27:04\n---\n","updated":"2022-05-06T06:09:05.822Z","path":"about/index.html","comments":1,"layout":"page","_id":"clhiicn3c0000nypjdss0gar9","content":"","site":{"data":{"styles":"/* build time:Thu May 11 2023 10:25:59 GMT+0800 (中国标准时间)*/\n.sidebar{box-shadow:none;background:0 0}body{background:url(/images/yourbackground.png);background-repeat:no-repeat;background-attachment:fixed;background-size:cover;background-position:50% 50%}.back-to-top.back-to-top-on{display:none}\n/* rebuild by neat */","variables":"/* build time:Thu May 11 2023 10:25:59 GMT+0800 (中国标准时间)*/\n\n/* rebuild by neat */"}},"length":0,"excerpt":"","more":""},{"title":"标签","date":"2014-12-22T04:39:04.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"title: 标签\ndate: 2014-12-22 12:39:04\ntype: \"tags\"\n---","updated":"2022-05-06T06:09:05.822Z","path":"tags/index.html","comments":1,"layout":"page","_id":"clhiicn3g0002nypj5c5j9qij","content":"","site":{"data":{"styles":"/* build time:Thu May 11 2023 10:25:59 GMT+0800 (中国标准时间)*/\n.sidebar{box-shadow:none;background:0 0}body{background:url(/images/yourbackground.png);background-repeat:no-repeat;background-attachment:fixed;background-size:cover;background-position:50% 50%}.back-to-top.back-to-top-on{display:none}\n/* rebuild by neat */","variables":"/* build time:Thu May 11 2023 10:25:59 GMT+0800 (中国标准时间)*/\n\n/* rebuild by neat */"}},"length":0,"excerpt":"","more":""},{"title":"分类","date":"2014-12-22T04:39:04.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"title: 分类\ndate: 2014-12-22 12:39:04\ntype: \"categories\"\n---\n","updated":"2022-05-06T06:09:05.822Z","path":"categories/index.html","comments":1,"layout":"page","_id":"clhiicn3i0006nypj8e259an8","content":"","site":{"data":{"styles":"/* build time:Thu May 11 2023 10:25:59 GMT+0800 (中国标准时间)*/\n.sidebar{box-shadow:none;background:0 0}body{background:url(/images/yourbackground.png);background-repeat:no-repeat;background-attachment:fixed;background-size:cover;background-position:50% 50%}.back-to-top.back-to-top-on{display:none}\n/* rebuild by neat */","variables":"/* build time:Thu May 11 2023 10:25:59 GMT+0800 (中国标准时间)*/\n\n/* rebuild by neat */"}},"length":0,"excerpt":"","more":""}],"Post":[{"title":"Docker使用","description":"记录Docker使用命令","abbrlink":5123,"date":"2023-05-11T02:24:05.000Z","_content":"","source":"_posts/Docker使用.md","raw":"---\ntitle: Docker使用\ntags: Docker\ncategories: Docker\ndescription: 记录Docker使用命令\nabbrlink: 5123\ndate: 2023-05-11 10:24:05\n---\n","slug":"Docker使用","published":1,"updated":"2023-05-11T02:26:51.756Z","_id":"clhiicn3d0001nypjgl7l2cak","comments":1,"layout":"post","photos":[],"link":"","content":"","site":{"data":{"styles":"/* build time:Thu May 11 2023 10:25:59 GMT+0800 (中国标准时间)*/\n.sidebar{box-shadow:none;background:0 0}body{background:url(/images/yourbackground.png);background-repeat:no-repeat;background-attachment:fixed;background-size:cover;background-position:50% 50%}.back-to-top.back-to-top-on{display:none}\n/* rebuild by neat */","variables":"/* build time:Thu May 11 2023 10:25:59 GMT+0800 (中国标准时间)*/\n\n/* rebuild by neat */"}},"length":0,"excerpt":"","more":""},{"title":"Java导出之Excel","abbrlink":55014,"date":"2021-10-22T14:33:06.000Z","description":"Java通过POI生成Excel并返回前台下载","_content":"\n# Java通过模板导出Excel\n\n## POI\n\nApache POI是Apache软件基金会的开放源码库，POI提供API给Java程序对Microsoft Office格式文件读和写的功能。\n\n## HSSF和XSSF\n\n针对不同版本的Excel，在POI中提供了HSSF和XSSF不同的包。\nHSSF  － 提供读写Microsoft Excel XLS格式档案的功能。\nXSSF  － 提供读写Microsoft Excel OOXML XLSX格式档案的功能。\n\n## 相关依赖\n\n```\n        <dependency>\n            <groupId>org.apache.poi</groupId>\n            <artifactId>poi</artifactId>\n            <version>4.1.2</version>\n        </dependency>\n        <dependency>\n            <groupId>org.apache.poi</groupId>\n            <artifactId>poi-ooxml</artifactId>\n            <version>4.1.2</version>\n        </dependency>\n        <dependency>\n            <groupId>org.apache.poi</groupId>\n            <artifactId>poi-ooxml-schemas</artifactId>\n            <version>4.1.2</version>\n        </dependency>\n```\n\n## 工具类\n\nwriteExcel()f方法根据模板生成Excel，writeToResponse()方法将生成的Excel写入response中返回前端下载。\n\n```java\npublic class ExcelUtils {\n    private static final String REG = \"\\\\{([a-zA-Z_1-9]+)\\\\}\";// 匹配\"{exp}\"\n    private static final String REG_LIST = \"\\\\{\\\\.([a-zA-Z_1-9]+)\\\\}\";// 匹配\"{.exp}\"\n    private static final Pattern PATTERN = Pattern.compile(REG);\n    private static final Pattern PATTERN_LIST = Pattern.compile(REG_LIST);\n\n\n\n    private ExcelUtils() {\n    }\n\n    /**\n     * 根据模板生成Excel文件\n     *\n     * @param templateFilePath 模版文件路径\n     * @param context      表头或表尾数据集合\n     * @param dataList     列表\n     * @return\n     */\n    public static byte[] writeExcel(String templateFilePath, Map<String, Object> context,\n                                    List<?> dataList) {\n       // File templateFile = null;\n        ClassPathResource classPathResource = new ClassPathResource(templateFilePath);\n        InputStream inputStream = null;\n\n        try {\n            inputStream = classPathResource.getInputStream();\n        } catch (Exception e) {\n            e.printStackTrace();\n            throw new RuntimeException(\"获取模板失败!\", e);\n        }\n        try (HSSFWorkbook workbook = new HSSFWorkbook(inputStream)) {\n            Sheet sheet = workbook.getSheetAt(0);// 获取配置文件sheet 页\n            int listStartRowNum = -1;\n            for (int i = sheet.getFirstRowNum(); i <= sheet.getLastRowNum(); i++) {\n                Row row = sheet.getRow(i);\n                if (row != null) {\n                    for (int j = 0; j < row.getLastCellNum(); j++) {\n                        Cell cell = row.getCell(j);\n                        if (cell != null && cell.getCellType() == CellType.STRING) {\n                            String cellValue = cell.getStringCellValue();\n                            // 获取到列表数据所在行\n                            if (listStartRowNum == -1 && cellValue.matches(REG_LIST)) {\n                                listStartRowNum = i;\n                            }\n\n                            Object newValue = cellValue;\n                            Matcher matcher = PATTERN.matcher(cellValue);\n                            while (matcher.find()) {\n                                String replaceExp = matcher.group();// 匹配到的表达式\n                                String key = matcher.group(1);// 获取key\n                                Object replaceValue = context.get(key);\n                                if (replaceValue == null) {\n                                    replaceValue = \"\";\n                                }\n                                if (replaceExp.equals(cellValue)) {// 单元格是一个表达式\n                                    newValue = replaceValue;\n                                } else {// 以字符串替换\n                                    newValue = ((String) newValue).replace(replaceExp, replaceValue.toString());\n                                }\n                            }\n                            setCellValue(cell, newValue);\n\n                        }\n\n                    }\n\n                }\n            }\n            if (-1 != listStartRowNum) {// 如果不为 -1 说明有需要循环的列表表达式\n                Row listStartRow = sheet.getRow(listStartRowNum);\n                if (CollectionUtils.isEmpty(dataList)) {// 列表数据为空，清空列表表达式行\n                    for (int i = 0; i < listStartRow.getLastCellNum(); i++) {\n                        Cell cell = listStartRow.getCell(i);\n                        if (cell != null) {\n                            cell.setCellValue(\"\");\n                        }\n                    }\n                } else {\n                    int lastCellNum = listStartRow.getLastCellNum();\n                    if (listStartRowNum + 1 <= sheet.getLastRowNum()) {\n                        sheet.shiftRows(listStartRowNum + 1, sheet.getLastRowNum(), dataList.size(), true, false);// 列表数据行后面行下移，留出数据填充区域\n                    }\n                    for (int i = 0; i < dataList.size(); i++) {// 循环列表数据 生成行\n                        JSONObject jsonObj  = (JSONObject) JSON.toJSON(dataList.get(i));\n                        //Map<String, Object> map = dataList.get(i);// 一行数据\n                        int newRowNum = listStartRowNum + i + 1;// 保留表达式行\n                        Row newRow = sheet.createRow(newRowNum);// 创建新行\n                        for (int j = 0; j < lastCellNum; j++) {// 循环遍历单元格\n                            Cell cell = listStartRow.getCell(j);// 列表数据行\n\n                            // 填充数据\n                            if (cell != null) {\n                                Cell newCell = newRow.createCell(j);\n                                newCell.setCellStyle(cell.getCellStyle());// 设置单元格格式\n\n                                if (cell.getCellType() == CellType.STRING\n                                        && cell.getStringCellValue().matches(REG_LIST)) {// 单元格是一个表达式\n                                    String cellExp = cell.getStringCellValue();\n                                    Matcher matcher = PATTERN_LIST.matcher(cellExp);\n                                    matcher.find();\n                                    String key = matcher.group(1);// 获取key\n                                    Object newValue = jsonObj.get(key);\n                                    if (newValue == null) {\n                                        newValue = \"\";\n                                    }\n                                    setCellValue(newCell, newValue);\n                                } else {// 不是表达式复制单元格数据\n                                    CellType cellType = cell.getCellType();\n                                    if (cellType == CellType.NUMERIC) {\n                                        newCell.setCellValue(cell.getNumericCellValue());\n                                    } else if (cellType == CellType.BOOLEAN) {\n                                        newCell.setCellValue(cell.getBooleanCellValue());\n                                    } else if (cellType == CellType.STRING) {\n                                        newCell.setCellValue(cell.getStringCellValue());\n                                    } else if (cellType == CellType.FORMULA) {\n                                        // 处理公式，待实现\n                                    } else {\n                                        newCell.setCellValue(cell.getStringCellValue());\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    sheet.removeRow(listStartRow);// 删除list表达式行\n                    sheet.shiftRows(listStartRowNum + 1, sheet.getLastRowNum(), -1, true, false);// 数据区域上移一行，覆盖表达式行\n\n                    // 合并单元格处理\n                    for (int i = 0; i < lastCellNum; i++) {\n                        CellRangeAddress mergedRangeAddress = getMergedRangeAddress(sheet, listStartRowNum, i);\n                        if (mergedRangeAddress != null) {// 合并的单元格\n                            i = mergedRangeAddress.getLastColumn();\n                            for (int j = 1; j < dataList.size(); j++) {\n                                int newRowNum = listStartRowNum + j;\n                                sheet.addMergedRegionUnsafe(new CellRangeAddress(newRowNum, newRowNum,\n                                        mergedRangeAddress.getFirstColumn(), mergedRangeAddress.getLastColumn()));\n                            }\n                        }\n                    }\n                }\n            }\n            // 公式生效\n            sheet.setForceFormulaRecalculation(true);\n            sheet.getPrintSetup().setPaperSize(PrintSetup.A4_PAPERSIZE);\n            sheet.getPrintSetup().setLandscape(true);\n            // FitHeight=1, 将所有行都缩放显示在一页上（设置1表示一页显示完，如果设置2表示分2页显示完）\n            // FitWidth=1, 将所有列都缩放显示在一页上\n            // 两个都等于1时，如果行数太多则会挤压列，一般来说只设置一个FitWidth=1，让行数自动换页\n            // 要使这两个参数有效，则需要设置FitToPage=true\n            sheet.setFitToPage(true);\n            sheet.getPrintSetup().setFitWidth((short) 1);\n//          sheet.getPrintSetup().setFitHeight((short)1);\n            // 是否显示自动换页符\n            sheet.setAutobreaks(true);\n            ByteArrayOutputStream out = new ByteArrayOutputStream();\n            workbook.write(out);\n            return out.toByteArray();\n        } catch (Exception e) {\n            throw new ExcelException(\"生成excel失败!\", e);\n        }\n    }\n\n    private static void setCellValue(Cell cell, Object value) {\n        if (value instanceof Number) {// 如果是数字类型的设置为数值\n            cell.setCellValue(Double.parseDouble(value.toString()));\n        } else if (value instanceof Date) {// 如果为时间类型的设置为时间\n            cell.setCellValue((Date) value);\n        } else if (value instanceof String) {\n            cell.setCellValue((String) value);\n        } else if (value instanceof Boolean) {\n            cell.setCellValue((Boolean) value);\n        } else {\n            cell.setCellValue(value.toString());\n        }\n    }\n\n    /**\n     * 获取指定行/列的合并单元格区域\n     *\n     * @param sheet\n     * @param row\n     * @param column\n     * @return CellRangeAddress 不是合并单元格返回null\n     */\n    private static CellRangeAddress getMergedRangeAddress(Sheet sheet, int row, int column) {\n        List<CellRangeAddress> mergedRegions = sheet.getMergedRegions();\n        for (CellRangeAddress cellAddresses : mergedRegions) {\n            if (row >= cellAddresses.getFirstRow() && row <= cellAddresses.getLastRow()\n                    && column >= cellAddresses.getFirstColumn() && column <= cellAddresses.getLastColumn()) {\n                return cellAddresses;\n            }\n        }\n        return null;\n    }\n\n\n\n    static class ExcelException extends RuntimeException {\n\n        private static final long serialVersionUID = -2772261598232964002L;\n\n        public ExcelException(String msg, Throwable e) {\n            super(msg, e);\n        }\n\n        public ExcelException(String msg) {\n            super(msg);\n        }\n    }\n\n    /**\n     * Description: 1、通过浏览器以流的形式输出,为了处理中文表名问题.\n     *\n     * @param bytes 文件对象\n     * @param request\n     * @param response\n     * @param fileName 文件名\n     */\n    public static void writeToResponse(byte[] bytes, HttpServletRequest request, HttpServletResponse response, String fileName) {\n        try {\n            String userAgent = request.getHeader(\"User-Agent\");\n            // 解决中文乱码问题\n            String fileName1 =  fileName + \".xls\";\n            String newFilename = URLEncoder.encode(fileName1, \"UTF8\");\n            // 如果没有userAgent，则默认使用IE的方式进行编码，因为毕竟IE还是占多数的\n            String rtn = \"filename=\\\"\" + newFilename + \"\\\"\";\n            if (userAgent != null) {\n                userAgent = userAgent.toLowerCase();\n                // IE浏览器，只能采用URLEncoder编码\n                if (userAgent.indexOf(\"IE\") != -1)\n                {\n                    rtn = \"filename=\\\"\" + newFilename + \"\\\"\";\n                }\n                // Opera浏览器只能采用filename*\n                else if (userAgent.indexOf(\"OPERA\") != -1)\n                {\n                    rtn = \"filename*=UTF-8''\" + newFilename;\n                }\n                // Safari浏览器，只能采用ISO编码的中文输出\n                else if (userAgent.indexOf(\"SAFARI\") != -1)\n                {\n                    rtn = \"filename=\\\"\" + new String(fileName1.getBytes(\"UTF-8\"), \"ISO8859-1\")\n                            + \"\\\"\";\n                }\n                // FireFox浏览器，可以使用MimeUtility或filename*或ISO编码的中文输出\n                else if (userAgent.indexOf(\"FIREFOX\") != -1)\n                {\n                    rtn = \"filename*=UTF-8''\" + newFilename;\n                }\n            }\n\n            String headStr = \"attachment;  \" + rtn;\n            response.setContentType(\"multipart/form-data\");\n            response.setCharacterEncoding(\"utf-8\");\n            response.setHeader(\"Content-Disposition\", headStr);\n            // 响应到客户端\n            OutputStream outputStream = response.getOutputStream();\n            outputStream.write(bytes);\n            outputStream.flush();\n\n        } catch (UnsupportedEncodingException e) {\n\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n\n    }\n\n}\n```\n\n## 模板制作\n\n制作模板时注意表格内数据与表头表尾数据变量命名区别，表格内数据变量前添加【.】用于标识表格数据。\n![](https://raw.githubusercontent.com/zhjAdm/ImageHosting/main/20211101104241.png)\n","source":"_posts/Java导出之Excel.md","raw":"---\ntitle: Java导出之Excel\nabbrlink: 55014\ndate: 2021-10-22 22:33:06\ntags: [Java,POI]\ncategories: Java\ndescription: Java通过POI生成Excel并返回前台下载\n\n---\n\n# Java通过模板导出Excel\n\n## POI\n\nApache POI是Apache软件基金会的开放源码库，POI提供API给Java程序对Microsoft Office格式文件读和写的功能。\n\n## HSSF和XSSF\n\n针对不同版本的Excel，在POI中提供了HSSF和XSSF不同的包。\nHSSF  － 提供读写Microsoft Excel XLS格式档案的功能。\nXSSF  － 提供读写Microsoft Excel OOXML XLSX格式档案的功能。\n\n## 相关依赖\n\n```\n        <dependency>\n            <groupId>org.apache.poi</groupId>\n            <artifactId>poi</artifactId>\n            <version>4.1.2</version>\n        </dependency>\n        <dependency>\n            <groupId>org.apache.poi</groupId>\n            <artifactId>poi-ooxml</artifactId>\n            <version>4.1.2</version>\n        </dependency>\n        <dependency>\n            <groupId>org.apache.poi</groupId>\n            <artifactId>poi-ooxml-schemas</artifactId>\n            <version>4.1.2</version>\n        </dependency>\n```\n\n## 工具类\n\nwriteExcel()f方法根据模板生成Excel，writeToResponse()方法将生成的Excel写入response中返回前端下载。\n\n```java\npublic class ExcelUtils {\n    private static final String REG = \"\\\\{([a-zA-Z_1-9]+)\\\\}\";// 匹配\"{exp}\"\n    private static final String REG_LIST = \"\\\\{\\\\.([a-zA-Z_1-9]+)\\\\}\";// 匹配\"{.exp}\"\n    private static final Pattern PATTERN = Pattern.compile(REG);\n    private static final Pattern PATTERN_LIST = Pattern.compile(REG_LIST);\n\n\n\n    private ExcelUtils() {\n    }\n\n    /**\n     * 根据模板生成Excel文件\n     *\n     * @param templateFilePath 模版文件路径\n     * @param context      表头或表尾数据集合\n     * @param dataList     列表\n     * @return\n     */\n    public static byte[] writeExcel(String templateFilePath, Map<String, Object> context,\n                                    List<?> dataList) {\n       // File templateFile = null;\n        ClassPathResource classPathResource = new ClassPathResource(templateFilePath);\n        InputStream inputStream = null;\n\n        try {\n            inputStream = classPathResource.getInputStream();\n        } catch (Exception e) {\n            e.printStackTrace();\n            throw new RuntimeException(\"获取模板失败!\", e);\n        }\n        try (HSSFWorkbook workbook = new HSSFWorkbook(inputStream)) {\n            Sheet sheet = workbook.getSheetAt(0);// 获取配置文件sheet 页\n            int listStartRowNum = -1;\n            for (int i = sheet.getFirstRowNum(); i <= sheet.getLastRowNum(); i++) {\n                Row row = sheet.getRow(i);\n                if (row != null) {\n                    for (int j = 0; j < row.getLastCellNum(); j++) {\n                        Cell cell = row.getCell(j);\n                        if (cell != null && cell.getCellType() == CellType.STRING) {\n                            String cellValue = cell.getStringCellValue();\n                            // 获取到列表数据所在行\n                            if (listStartRowNum == -1 && cellValue.matches(REG_LIST)) {\n                                listStartRowNum = i;\n                            }\n\n                            Object newValue = cellValue;\n                            Matcher matcher = PATTERN.matcher(cellValue);\n                            while (matcher.find()) {\n                                String replaceExp = matcher.group();// 匹配到的表达式\n                                String key = matcher.group(1);// 获取key\n                                Object replaceValue = context.get(key);\n                                if (replaceValue == null) {\n                                    replaceValue = \"\";\n                                }\n                                if (replaceExp.equals(cellValue)) {// 单元格是一个表达式\n                                    newValue = replaceValue;\n                                } else {// 以字符串替换\n                                    newValue = ((String) newValue).replace(replaceExp, replaceValue.toString());\n                                }\n                            }\n                            setCellValue(cell, newValue);\n\n                        }\n\n                    }\n\n                }\n            }\n            if (-1 != listStartRowNum) {// 如果不为 -1 说明有需要循环的列表表达式\n                Row listStartRow = sheet.getRow(listStartRowNum);\n                if (CollectionUtils.isEmpty(dataList)) {// 列表数据为空，清空列表表达式行\n                    for (int i = 0; i < listStartRow.getLastCellNum(); i++) {\n                        Cell cell = listStartRow.getCell(i);\n                        if (cell != null) {\n                            cell.setCellValue(\"\");\n                        }\n                    }\n                } else {\n                    int lastCellNum = listStartRow.getLastCellNum();\n                    if (listStartRowNum + 1 <= sheet.getLastRowNum()) {\n                        sheet.shiftRows(listStartRowNum + 1, sheet.getLastRowNum(), dataList.size(), true, false);// 列表数据行后面行下移，留出数据填充区域\n                    }\n                    for (int i = 0; i < dataList.size(); i++) {// 循环列表数据 生成行\n                        JSONObject jsonObj  = (JSONObject) JSON.toJSON(dataList.get(i));\n                        //Map<String, Object> map = dataList.get(i);// 一行数据\n                        int newRowNum = listStartRowNum + i + 1;// 保留表达式行\n                        Row newRow = sheet.createRow(newRowNum);// 创建新行\n                        for (int j = 0; j < lastCellNum; j++) {// 循环遍历单元格\n                            Cell cell = listStartRow.getCell(j);// 列表数据行\n\n                            // 填充数据\n                            if (cell != null) {\n                                Cell newCell = newRow.createCell(j);\n                                newCell.setCellStyle(cell.getCellStyle());// 设置单元格格式\n\n                                if (cell.getCellType() == CellType.STRING\n                                        && cell.getStringCellValue().matches(REG_LIST)) {// 单元格是一个表达式\n                                    String cellExp = cell.getStringCellValue();\n                                    Matcher matcher = PATTERN_LIST.matcher(cellExp);\n                                    matcher.find();\n                                    String key = matcher.group(1);// 获取key\n                                    Object newValue = jsonObj.get(key);\n                                    if (newValue == null) {\n                                        newValue = \"\";\n                                    }\n                                    setCellValue(newCell, newValue);\n                                } else {// 不是表达式复制单元格数据\n                                    CellType cellType = cell.getCellType();\n                                    if (cellType == CellType.NUMERIC) {\n                                        newCell.setCellValue(cell.getNumericCellValue());\n                                    } else if (cellType == CellType.BOOLEAN) {\n                                        newCell.setCellValue(cell.getBooleanCellValue());\n                                    } else if (cellType == CellType.STRING) {\n                                        newCell.setCellValue(cell.getStringCellValue());\n                                    } else if (cellType == CellType.FORMULA) {\n                                        // 处理公式，待实现\n                                    } else {\n                                        newCell.setCellValue(cell.getStringCellValue());\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    sheet.removeRow(listStartRow);// 删除list表达式行\n                    sheet.shiftRows(listStartRowNum + 1, sheet.getLastRowNum(), -1, true, false);// 数据区域上移一行，覆盖表达式行\n\n                    // 合并单元格处理\n                    for (int i = 0; i < lastCellNum; i++) {\n                        CellRangeAddress mergedRangeAddress = getMergedRangeAddress(sheet, listStartRowNum, i);\n                        if (mergedRangeAddress != null) {// 合并的单元格\n                            i = mergedRangeAddress.getLastColumn();\n                            for (int j = 1; j < dataList.size(); j++) {\n                                int newRowNum = listStartRowNum + j;\n                                sheet.addMergedRegionUnsafe(new CellRangeAddress(newRowNum, newRowNum,\n                                        mergedRangeAddress.getFirstColumn(), mergedRangeAddress.getLastColumn()));\n                            }\n                        }\n                    }\n                }\n            }\n            // 公式生效\n            sheet.setForceFormulaRecalculation(true);\n            sheet.getPrintSetup().setPaperSize(PrintSetup.A4_PAPERSIZE);\n            sheet.getPrintSetup().setLandscape(true);\n            // FitHeight=1, 将所有行都缩放显示在一页上（设置1表示一页显示完，如果设置2表示分2页显示完）\n            // FitWidth=1, 将所有列都缩放显示在一页上\n            // 两个都等于1时，如果行数太多则会挤压列，一般来说只设置一个FitWidth=1，让行数自动换页\n            // 要使这两个参数有效，则需要设置FitToPage=true\n            sheet.setFitToPage(true);\n            sheet.getPrintSetup().setFitWidth((short) 1);\n//          sheet.getPrintSetup().setFitHeight((short)1);\n            // 是否显示自动换页符\n            sheet.setAutobreaks(true);\n            ByteArrayOutputStream out = new ByteArrayOutputStream();\n            workbook.write(out);\n            return out.toByteArray();\n        } catch (Exception e) {\n            throw new ExcelException(\"生成excel失败!\", e);\n        }\n    }\n\n    private static void setCellValue(Cell cell, Object value) {\n        if (value instanceof Number) {// 如果是数字类型的设置为数值\n            cell.setCellValue(Double.parseDouble(value.toString()));\n        } else if (value instanceof Date) {// 如果为时间类型的设置为时间\n            cell.setCellValue((Date) value);\n        } else if (value instanceof String) {\n            cell.setCellValue((String) value);\n        } else if (value instanceof Boolean) {\n            cell.setCellValue((Boolean) value);\n        } else {\n            cell.setCellValue(value.toString());\n        }\n    }\n\n    /**\n     * 获取指定行/列的合并单元格区域\n     *\n     * @param sheet\n     * @param row\n     * @param column\n     * @return CellRangeAddress 不是合并单元格返回null\n     */\n    private static CellRangeAddress getMergedRangeAddress(Sheet sheet, int row, int column) {\n        List<CellRangeAddress> mergedRegions = sheet.getMergedRegions();\n        for (CellRangeAddress cellAddresses : mergedRegions) {\n            if (row >= cellAddresses.getFirstRow() && row <= cellAddresses.getLastRow()\n                    && column >= cellAddresses.getFirstColumn() && column <= cellAddresses.getLastColumn()) {\n                return cellAddresses;\n            }\n        }\n        return null;\n    }\n\n\n\n    static class ExcelException extends RuntimeException {\n\n        private static final long serialVersionUID = -2772261598232964002L;\n\n        public ExcelException(String msg, Throwable e) {\n            super(msg, e);\n        }\n\n        public ExcelException(String msg) {\n            super(msg);\n        }\n    }\n\n    /**\n     * Description: 1、通过浏览器以流的形式输出,为了处理中文表名问题.\n     *\n     * @param bytes 文件对象\n     * @param request\n     * @param response\n     * @param fileName 文件名\n     */\n    public static void writeToResponse(byte[] bytes, HttpServletRequest request, HttpServletResponse response, String fileName) {\n        try {\n            String userAgent = request.getHeader(\"User-Agent\");\n            // 解决中文乱码问题\n            String fileName1 =  fileName + \".xls\";\n            String newFilename = URLEncoder.encode(fileName1, \"UTF8\");\n            // 如果没有userAgent，则默认使用IE的方式进行编码，因为毕竟IE还是占多数的\n            String rtn = \"filename=\\\"\" + newFilename + \"\\\"\";\n            if (userAgent != null) {\n                userAgent = userAgent.toLowerCase();\n                // IE浏览器，只能采用URLEncoder编码\n                if (userAgent.indexOf(\"IE\") != -1)\n                {\n                    rtn = \"filename=\\\"\" + newFilename + \"\\\"\";\n                }\n                // Opera浏览器只能采用filename*\n                else if (userAgent.indexOf(\"OPERA\") != -1)\n                {\n                    rtn = \"filename*=UTF-8''\" + newFilename;\n                }\n                // Safari浏览器，只能采用ISO编码的中文输出\n                else if (userAgent.indexOf(\"SAFARI\") != -1)\n                {\n                    rtn = \"filename=\\\"\" + new String(fileName1.getBytes(\"UTF-8\"), \"ISO8859-1\")\n                            + \"\\\"\";\n                }\n                // FireFox浏览器，可以使用MimeUtility或filename*或ISO编码的中文输出\n                else if (userAgent.indexOf(\"FIREFOX\") != -1)\n                {\n                    rtn = \"filename*=UTF-8''\" + newFilename;\n                }\n            }\n\n            String headStr = \"attachment;  \" + rtn;\n            response.setContentType(\"multipart/form-data\");\n            response.setCharacterEncoding(\"utf-8\");\n            response.setHeader(\"Content-Disposition\", headStr);\n            // 响应到客户端\n            OutputStream outputStream = response.getOutputStream();\n            outputStream.write(bytes);\n            outputStream.flush();\n\n        } catch (UnsupportedEncodingException e) {\n\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n\n    }\n\n}\n```\n\n## 模板制作\n\n制作模板时注意表格内数据与表头表尾数据变量命名区别，表格内数据变量前添加【.】用于标识表格数据。\n![](https://raw.githubusercontent.com/zhjAdm/ImageHosting/main/20211101104241.png)\n","slug":"Java导出之Excel","published":1,"updated":"2023-03-09T14:46:11.432Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhiicn3g0003nypj367edgp8","content":"<h1 id=\"Java通过模板导出Excel\"><a href=\"#Java通过模板导出Excel\" class=\"headerlink\" title=\"Java通过模板导出Excel\"></a>Java通过模板导出Excel</h1><h2 id=\"POI\"><a href=\"#POI\" class=\"headerlink\" title=\"POI\"></a>POI</h2><p>Apache POI是Apache软件基金会的开放源码库，POI提供API给Java程序对Microsoft Office格式文件读和写的功能。</p>\n<h2 id=\"HSSF和XSSF\"><a href=\"#HSSF和XSSF\" class=\"headerlink\" title=\"HSSF和XSSF\"></a>HSSF和XSSF</h2><p>针对不同版本的Excel，在POI中提供了HSSF和XSSF不同的包。<br>HSSF  － 提供读写Microsoft Excel XLS格式档案的功能。<br>XSSF  － 提供读写Microsoft Excel OOXML XLSX格式档案的功能。</p>\n<h2 id=\"相关依赖\"><a href=\"#相关依赖\" class=\"headerlink\" title=\"相关依赖\"></a>相关依赖</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.poi<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>poi<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>4.1.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.poi<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>poi-ooxml<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>4.1.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.poi<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>poi-ooxml-schemas<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>4.1.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"工具类\"><a href=\"#工具类\" class=\"headerlink\" title=\"工具类\"></a>工具类</h2><p>writeExcel()f方法根据模板生成Excel，writeToResponse()方法将生成的Excel写入response中返回前端下载。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ExcelUtils</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String REG = <span class=\"string\">&quot;\\\\&#123;([a-zA-Z_1-9]+)\\\\&#125;&quot;</span>;<span class=\"comment\">// 匹配&quot;&#123;exp&#125;&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String REG_LIST = <span class=\"string\">&quot;\\\\&#123;\\\\.([a-zA-Z_1-9]+)\\\\&#125;&quot;</span>;<span class=\"comment\">// 匹配&quot;&#123;.exp&#125;&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> Pattern PATTERN = Pattern.compile(REG);</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> Pattern PATTERN_LIST = Pattern.compile(REG_LIST);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"title\">ExcelUtils</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 根据模板生成Excel文件</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> templateFilePath 模版文件路径</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> context      表头或表尾数据集合</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> dataList     列表</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">byte</span>[] writeExcel(String templateFilePath, Map&lt;String, Object&gt; context,</span><br><span class=\"line\">                                    List&lt;?&gt; dataList) &#123;</span><br><span class=\"line\">       <span class=\"comment\">// File templateFile = null;</span></span><br><span class=\"line\">        ClassPathResource classPathResource = <span class=\"keyword\">new</span> ClassPathResource(templateFilePath);</span><br><span class=\"line\">        InputStream inputStream = <span class=\"keyword\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            inputStream = classPathResource.getInputStream();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> RuntimeException(<span class=\"string\">&quot;获取模板失败!&quot;</span>, e);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> (HSSFWorkbook workbook = <span class=\"keyword\">new</span> HSSFWorkbook(inputStream)) &#123;</span><br><span class=\"line\">            Sheet sheet = workbook.getSheetAt(<span class=\"number\">0</span>);<span class=\"comment\">// 获取配置文件sheet 页</span></span><br><span class=\"line\">            <span class=\"keyword\">int</span> listStartRowNum = -<span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = sheet.getFirstRowNum(); i &lt;= sheet.getLastRowNum(); i++) &#123;</span><br><span class=\"line\">                Row row = sheet.getRow(i);</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (row != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; row.getLastCellNum(); j++) &#123;</span><br><span class=\"line\">                        Cell cell = row.getCell(j);</span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (cell != <span class=\"keyword\">null</span> &amp;&amp; cell.getCellType() == CellType.STRING) &#123;</span><br><span class=\"line\">                            String cellValue = cell.getStringCellValue();</span><br><span class=\"line\">                            <span class=\"comment\">// 获取到列表数据所在行</span></span><br><span class=\"line\">                            <span class=\"keyword\">if</span> (listStartRowNum == -<span class=\"number\">1</span> &amp;&amp; cellValue.matches(REG_LIST)) &#123;</span><br><span class=\"line\">                                listStartRowNum = i;</span><br><span class=\"line\">                            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                            Object newValue = cellValue;</span><br><span class=\"line\">                            Matcher matcher = PATTERN.matcher(cellValue);</span><br><span class=\"line\">                            <span class=\"keyword\">while</span> (matcher.find()) &#123;</span><br><span class=\"line\">                                String replaceExp = matcher.group();<span class=\"comment\">// 匹配到的表达式</span></span><br><span class=\"line\">                                String key = matcher.group(<span class=\"number\">1</span>);<span class=\"comment\">// 获取key</span></span><br><span class=\"line\">                                Object replaceValue = context.get(key);</span><br><span class=\"line\">                                <span class=\"keyword\">if</span> (replaceValue == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                                    replaceValue = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">                                &#125;</span><br><span class=\"line\">                                <span class=\"keyword\">if</span> (replaceExp.equals(cellValue)) &#123;<span class=\"comment\">// 单元格是一个表达式</span></span><br><span class=\"line\">                                    newValue = replaceValue;</span><br><span class=\"line\">                                &#125; <span class=\"keyword\">else</span> &#123;<span class=\"comment\">// 以字符串替换</span></span><br><span class=\"line\">                                    newValue = ((String) newValue).replace(replaceExp, replaceValue.toString());</span><br><span class=\"line\">                                &#125;</span><br><span class=\"line\">                            &#125;</span><br><span class=\"line\">                            setCellValue(cell, newValue);</span><br><span class=\"line\"></span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (-<span class=\"number\">1</span> != listStartRowNum) &#123;<span class=\"comment\">// 如果不为 -1 说明有需要循环的列表表达式</span></span><br><span class=\"line\">                Row listStartRow = sheet.getRow(listStartRowNum);</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (CollectionUtils.isEmpty(dataList)) &#123;<span class=\"comment\">// 列表数据为空，清空列表表达式行</span></span><br><span class=\"line\">                    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; listStartRow.getLastCellNum(); i++) &#123;</span><br><span class=\"line\">                        Cell cell = listStartRow.getCell(i);</span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (cell != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                            cell.setCellValue(<span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">int</span> lastCellNum = listStartRow.getLastCellNum();</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (listStartRowNum + <span class=\"number\">1</span> &lt;= sheet.getLastRowNum()) &#123;</span><br><span class=\"line\">                        sheet.shiftRows(listStartRowNum + <span class=\"number\">1</span>, sheet.getLastRowNum(), dataList.size(), <span class=\"keyword\">true</span>, <span class=\"keyword\">false</span>);<span class=\"comment\">// 列表数据行后面行下移，留出数据填充区域</span></span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; dataList.size(); i++) &#123;<span class=\"comment\">// 循环列表数据 生成行</span></span><br><span class=\"line\">                        JSONObject jsonObj  = (JSONObject) JSON.toJSON(dataList.get(i));</span><br><span class=\"line\">                        <span class=\"comment\">//Map&lt;String, Object&gt; map = dataList.get(i);// 一行数据</span></span><br><span class=\"line\">                        <span class=\"keyword\">int</span> newRowNum = listStartRowNum + i + <span class=\"number\">1</span>;<span class=\"comment\">// 保留表达式行</span></span><br><span class=\"line\">                        Row newRow = sheet.createRow(newRowNum);<span class=\"comment\">// 创建新行</span></span><br><span class=\"line\">                        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; lastCellNum; j++) &#123;<span class=\"comment\">// 循环遍历单元格</span></span><br><span class=\"line\">                            Cell cell = listStartRow.getCell(j);<span class=\"comment\">// 列表数据行</span></span><br><span class=\"line\"></span><br><span class=\"line\">                            <span class=\"comment\">// 填充数据</span></span><br><span class=\"line\">                            <span class=\"keyword\">if</span> (cell != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                                Cell newCell = newRow.createCell(j);</span><br><span class=\"line\">                                newCell.setCellStyle(cell.getCellStyle());<span class=\"comment\">// 设置单元格格式</span></span><br><span class=\"line\"></span><br><span class=\"line\">                                <span class=\"keyword\">if</span> (cell.getCellType() == CellType.STRING</span><br><span class=\"line\">                                        &amp;&amp; cell.getStringCellValue().matches(REG_LIST)) &#123;<span class=\"comment\">// 单元格是一个表达式</span></span><br><span class=\"line\">                                    String cellExp = cell.getStringCellValue();</span><br><span class=\"line\">                                    Matcher matcher = PATTERN_LIST.matcher(cellExp);</span><br><span class=\"line\">                                    matcher.find();</span><br><span class=\"line\">                                    String key = matcher.group(<span class=\"number\">1</span>);<span class=\"comment\">// 获取key</span></span><br><span class=\"line\">                                    Object newValue = jsonObj.get(key);</span><br><span class=\"line\">                                    <span class=\"keyword\">if</span> (newValue == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                                        newValue = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">                                    &#125;</span><br><span class=\"line\">                                    setCellValue(newCell, newValue);</span><br><span class=\"line\">                                &#125; <span class=\"keyword\">else</span> &#123;<span class=\"comment\">// 不是表达式复制单元格数据</span></span><br><span class=\"line\">                                    CellType cellType = cell.getCellType();</span><br><span class=\"line\">                                    <span class=\"keyword\">if</span> (cellType == CellType.NUMERIC) &#123;</span><br><span class=\"line\">                                        newCell.setCellValue(cell.getNumericCellValue());</span><br><span class=\"line\">                                    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (cellType == CellType.BOOLEAN) &#123;</span><br><span class=\"line\">                                        newCell.setCellValue(cell.getBooleanCellValue());</span><br><span class=\"line\">                                    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (cellType == CellType.STRING) &#123;</span><br><span class=\"line\">                                        newCell.setCellValue(cell.getStringCellValue());</span><br><span class=\"line\">                                    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (cellType == CellType.FORMULA) &#123;</span><br><span class=\"line\">                                        <span class=\"comment\">// 处理公式，待实现</span></span><br><span class=\"line\">                                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                                        newCell.setCellValue(cell.getStringCellValue());</span><br><span class=\"line\">                                    &#125;</span><br><span class=\"line\">                                &#125;</span><br><span class=\"line\">                            &#125;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    sheet.removeRow(listStartRow);<span class=\"comment\">// 删除list表达式行</span></span><br><span class=\"line\">                    sheet.shiftRows(listStartRowNum + <span class=\"number\">1</span>, sheet.getLastRowNum(), -<span class=\"number\">1</span>, <span class=\"keyword\">true</span>, <span class=\"keyword\">false</span>);<span class=\"comment\">// 数据区域上移一行，覆盖表达式行</span></span><br><span class=\"line\"></span><br><span class=\"line\">                    <span class=\"comment\">// 合并单元格处理</span></span><br><span class=\"line\">                    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; lastCellNum; i++) &#123;</span><br><span class=\"line\">                        CellRangeAddress mergedRangeAddress = getMergedRangeAddress(sheet, listStartRowNum, i);</span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (mergedRangeAddress != <span class=\"keyword\">null</span>) &#123;<span class=\"comment\">// 合并的单元格</span></span><br><span class=\"line\">                            i = mergedRangeAddress.getLastColumn();</span><br><span class=\"line\">                            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">1</span>; j &lt; dataList.size(); j++) &#123;</span><br><span class=\"line\">                                <span class=\"keyword\">int</span> newRowNum = listStartRowNum + j;</span><br><span class=\"line\">                                sheet.addMergedRegionUnsafe(<span class=\"keyword\">new</span> CellRangeAddress(newRowNum, newRowNum,</span><br><span class=\"line\">                                        mergedRangeAddress.getFirstColumn(), mergedRangeAddress.getLastColumn()));</span><br><span class=\"line\">                            &#125;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">// 公式生效</span></span><br><span class=\"line\">            sheet.setForceFormulaRecalculation(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">            sheet.getPrintSetup().setPaperSize(PrintSetup.A4_PAPERSIZE);</span><br><span class=\"line\">            sheet.getPrintSetup().setLandscape(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">            <span class=\"comment\">// FitHeight=1, 将所有行都缩放显示在一页上（设置1表示一页显示完，如果设置2表示分2页显示完）</span></span><br><span class=\"line\">            <span class=\"comment\">// FitWidth=1, 将所有列都缩放显示在一页上</span></span><br><span class=\"line\">            <span class=\"comment\">// 两个都等于1时，如果行数太多则会挤压列，一般来说只设置一个FitWidth=1，让行数自动换页</span></span><br><span class=\"line\">            <span class=\"comment\">// 要使这两个参数有效，则需要设置FitToPage=true</span></span><br><span class=\"line\">            sheet.setFitToPage(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">            sheet.getPrintSetup().setFitWidth((<span class=\"keyword\">short</span>) <span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"comment\">//          sheet.getPrintSetup().setFitHeight((short)1);</span></span><br><span class=\"line\">            <span class=\"comment\">// 是否显示自动换页符</span></span><br><span class=\"line\">            sheet.setAutobreaks(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">            ByteArrayOutputStream out = <span class=\"keyword\">new</span> ByteArrayOutputStream();</span><br><span class=\"line\">            workbook.write(out);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> out.toByteArray();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> ExcelException(<span class=\"string\">&quot;生成excel失败!&quot;</span>, e);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">setCellValue</span><span class=\"params\">(Cell cell, Object value)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (value <span class=\"keyword\">instanceof</span> Number) &#123;<span class=\"comment\">// 如果是数字类型的设置为数值</span></span><br><span class=\"line\">            cell.setCellValue(Double.parseDouble(value.toString()));</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (value <span class=\"keyword\">instanceof</span> Date) &#123;<span class=\"comment\">// 如果为时间类型的设置为时间</span></span><br><span class=\"line\">            cell.setCellValue((Date) value);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (value <span class=\"keyword\">instanceof</span> String) &#123;</span><br><span class=\"line\">            cell.setCellValue((String) value);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (value <span class=\"keyword\">instanceof</span> Boolean) &#123;</span><br><span class=\"line\">            cell.setCellValue((Boolean) value);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            cell.setCellValue(value.toString());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 获取指定行/列的合并单元格区域</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> sheet</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> row</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> column</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> CellRangeAddress 不是合并单元格返回null</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> CellRangeAddress <span class=\"title\">getMergedRangeAddress</span><span class=\"params\">(Sheet sheet, <span class=\"keyword\">int</span> row, <span class=\"keyword\">int</span> column)</span> </span>&#123;</span><br><span class=\"line\">        List&lt;CellRangeAddress&gt; mergedRegions = sheet.getMergedRegions();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (CellRangeAddress cellAddresses : mergedRegions) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (row &gt;= cellAddresses.getFirstRow() &amp;&amp; row &lt;= cellAddresses.getLastRow()</span><br><span class=\"line\">                    &amp;&amp; column &gt;= cellAddresses.getFirstColumn() &amp;&amp; column &lt;= cellAddresses.getLastColumn()) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> cellAddresses;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ExcelException</span> <span class=\"keyword\">extends</span> <span class=\"title\">RuntimeException</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">long</span> serialVersionUID = -<span class=\"number\">2772261598232964002L</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ExcelException</span><span class=\"params\">(String msg, Throwable e)</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">super</span>(msg, e);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ExcelException</span><span class=\"params\">(String msg)</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">super</span>(msg);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * Description: 1、通过浏览器以流的形式输出,为了处理中文表名问题.</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> bytes 文件对象</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> request</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> response</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> fileName 文件名</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">writeToResponse</span><span class=\"params\">(<span class=\"keyword\">byte</span>[] bytes, HttpServletRequest request, HttpServletResponse response, String fileName)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            String userAgent = request.getHeader(<span class=\"string\">&quot;User-Agent&quot;</span>);</span><br><span class=\"line\">            <span class=\"comment\">// 解决中文乱码问题</span></span><br><span class=\"line\">            String fileName1 =  fileName + <span class=\"string\">&quot;.xls&quot;</span>;</span><br><span class=\"line\">            String newFilename = URLEncoder.encode(fileName1, <span class=\"string\">&quot;UTF8&quot;</span>);</span><br><span class=\"line\">            <span class=\"comment\">// 如果没有userAgent，则默认使用IE的方式进行编码，因为毕竟IE还是占多数的</span></span><br><span class=\"line\">            String rtn = <span class=\"string\">&quot;filename=\\&quot;&quot;</span> + newFilename + <span class=\"string\">&quot;\\&quot;&quot;</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (userAgent != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                userAgent = userAgent.toLowerCase();</span><br><span class=\"line\">                <span class=\"comment\">// IE浏览器，只能采用URLEncoder编码</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (userAgent.indexOf(<span class=\"string\">&quot;IE&quot;</span>) != -<span class=\"number\">1</span>)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    rtn = <span class=\"string\">&quot;filename=\\&quot;&quot;</span> + newFilename + <span class=\"string\">&quot;\\&quot;&quot;</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"comment\">// Opera浏览器只能采用filename*</span></span><br><span class=\"line\">                <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (userAgent.indexOf(<span class=\"string\">&quot;OPERA&quot;</span>) != -<span class=\"number\">1</span>)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    rtn = <span class=\"string\">&quot;filename*=UTF-8&#x27;&#x27;&quot;</span> + newFilename;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"comment\">// Safari浏览器，只能采用ISO编码的中文输出</span></span><br><span class=\"line\">                <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (userAgent.indexOf(<span class=\"string\">&quot;SAFARI&quot;</span>) != -<span class=\"number\">1</span>)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    rtn = <span class=\"string\">&quot;filename=\\&quot;&quot;</span> + <span class=\"keyword\">new</span> String(fileName1.getBytes(<span class=\"string\">&quot;UTF-8&quot;</span>), <span class=\"string\">&quot;ISO8859-1&quot;</span>)</span><br><span class=\"line\">                            + <span class=\"string\">&quot;\\&quot;&quot;</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"comment\">// FireFox浏览器，可以使用MimeUtility或filename*或ISO编码的中文输出</span></span><br><span class=\"line\">                <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (userAgent.indexOf(<span class=\"string\">&quot;FIREFOX&quot;</span>) != -<span class=\"number\">1</span>)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    rtn = <span class=\"string\">&quot;filename*=UTF-8&#x27;&#x27;&quot;</span> + newFilename;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            String headStr = <span class=\"string\">&quot;attachment;  &quot;</span> + rtn;</span><br><span class=\"line\">            response.setContentType(<span class=\"string\">&quot;multipart/form-data&quot;</span>);</span><br><span class=\"line\">            response.setCharacterEncoding(<span class=\"string\">&quot;utf-8&quot;</span>);</span><br><span class=\"line\">            response.setHeader(<span class=\"string\">&quot;Content-Disposition&quot;</span>, headStr);</span><br><span class=\"line\">            <span class=\"comment\">// 响应到客户端</span></span><br><span class=\"line\">            OutputStream outputStream = response.getOutputStream();</span><br><span class=\"line\">            outputStream.write(bytes);</span><br><span class=\"line\">            outputStream.flush();</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (UnsupportedEncodingException e) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"模板制作\"><a href=\"#模板制作\" class=\"headerlink\" title=\"模板制作\"></a>模板制作</h2><p>制作模板时注意表格内数据与表头表尾数据变量命名区别，表格内数据变量前添加【.】用于标识表格数据。<br><img src=\"https://raw.githubusercontent.com/zhjAdm/ImageHosting/main/20211101104241.png\"></p>\n","site":{"data":{"styles":"/* build time:Thu May 11 2023 10:25:59 GMT+0800 (中国标准时间)*/\n.sidebar{box-shadow:none;background:0 0}body{background:url(/images/yourbackground.png);background-repeat:no-repeat;background-attachment:fixed;background-size:cover;background-position:50% 50%}.back-to-top.back-to-top-on{display:none}\n/* rebuild by neat */","variables":"/* build time:Thu May 11 2023 10:25:59 GMT+0800 (中国标准时间)*/\n\n/* rebuild by neat */"}},"length":9452,"excerpt":"","more":"<h1 id=\"Java通过模板导出Excel\"><a href=\"#Java通过模板导出Excel\" class=\"headerlink\" title=\"Java通过模板导出Excel\"></a>Java通过模板导出Excel</h1><h2 id=\"POI\"><a href=\"#POI\" class=\"headerlink\" title=\"POI\"></a>POI</h2><p>Apache POI是Apache软件基金会的开放源码库，POI提供API给Java程序对Microsoft Office格式文件读和写的功能。</p>\n<h2 id=\"HSSF和XSSF\"><a href=\"#HSSF和XSSF\" class=\"headerlink\" title=\"HSSF和XSSF\"></a>HSSF和XSSF</h2><p>针对不同版本的Excel，在POI中提供了HSSF和XSSF不同的包。<br>HSSF  － 提供读写Microsoft Excel XLS格式档案的功能。<br>XSSF  － 提供读写Microsoft Excel OOXML XLSX格式档案的功能。</p>\n<h2 id=\"相关依赖\"><a href=\"#相关依赖\" class=\"headerlink\" title=\"相关依赖\"></a>相关依赖</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.poi<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>poi<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>4.1.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.poi<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>poi-ooxml<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>4.1.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.poi<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>poi-ooxml-schemas<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>4.1.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"工具类\"><a href=\"#工具类\" class=\"headerlink\" title=\"工具类\"></a>工具类</h2><p>writeExcel()f方法根据模板生成Excel，writeToResponse()方法将生成的Excel写入response中返回前端下载。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ExcelUtils</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String REG = <span class=\"string\">&quot;\\\\&#123;([a-zA-Z_1-9]+)\\\\&#125;&quot;</span>;<span class=\"comment\">// 匹配&quot;&#123;exp&#125;&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String REG_LIST = <span class=\"string\">&quot;\\\\&#123;\\\\.([a-zA-Z_1-9]+)\\\\&#125;&quot;</span>;<span class=\"comment\">// 匹配&quot;&#123;.exp&#125;&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> Pattern PATTERN = Pattern.compile(REG);</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> Pattern PATTERN_LIST = Pattern.compile(REG_LIST);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"title\">ExcelUtils</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 根据模板生成Excel文件</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> templateFilePath 模版文件路径</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> context      表头或表尾数据集合</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> dataList     列表</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">byte</span>[] writeExcel(String templateFilePath, Map&lt;String, Object&gt; context,</span><br><span class=\"line\">                                    List&lt;?&gt; dataList) &#123;</span><br><span class=\"line\">       <span class=\"comment\">// File templateFile = null;</span></span><br><span class=\"line\">        ClassPathResource classPathResource = <span class=\"keyword\">new</span> ClassPathResource(templateFilePath);</span><br><span class=\"line\">        InputStream inputStream = <span class=\"keyword\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            inputStream = classPathResource.getInputStream();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> RuntimeException(<span class=\"string\">&quot;获取模板失败!&quot;</span>, e);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> (HSSFWorkbook workbook = <span class=\"keyword\">new</span> HSSFWorkbook(inputStream)) &#123;</span><br><span class=\"line\">            Sheet sheet = workbook.getSheetAt(<span class=\"number\">0</span>);<span class=\"comment\">// 获取配置文件sheet 页</span></span><br><span class=\"line\">            <span class=\"keyword\">int</span> listStartRowNum = -<span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = sheet.getFirstRowNum(); i &lt;= sheet.getLastRowNum(); i++) &#123;</span><br><span class=\"line\">                Row row = sheet.getRow(i);</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (row != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; row.getLastCellNum(); j++) &#123;</span><br><span class=\"line\">                        Cell cell = row.getCell(j);</span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (cell != <span class=\"keyword\">null</span> &amp;&amp; cell.getCellType() == CellType.STRING) &#123;</span><br><span class=\"line\">                            String cellValue = cell.getStringCellValue();</span><br><span class=\"line\">                            <span class=\"comment\">// 获取到列表数据所在行</span></span><br><span class=\"line\">                            <span class=\"keyword\">if</span> (listStartRowNum == -<span class=\"number\">1</span> &amp;&amp; cellValue.matches(REG_LIST)) &#123;</span><br><span class=\"line\">                                listStartRowNum = i;</span><br><span class=\"line\">                            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                            Object newValue = cellValue;</span><br><span class=\"line\">                            Matcher matcher = PATTERN.matcher(cellValue);</span><br><span class=\"line\">                            <span class=\"keyword\">while</span> (matcher.find()) &#123;</span><br><span class=\"line\">                                String replaceExp = matcher.group();<span class=\"comment\">// 匹配到的表达式</span></span><br><span class=\"line\">                                String key = matcher.group(<span class=\"number\">1</span>);<span class=\"comment\">// 获取key</span></span><br><span class=\"line\">                                Object replaceValue = context.get(key);</span><br><span class=\"line\">                                <span class=\"keyword\">if</span> (replaceValue == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                                    replaceValue = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">                                &#125;</span><br><span class=\"line\">                                <span class=\"keyword\">if</span> (replaceExp.equals(cellValue)) &#123;<span class=\"comment\">// 单元格是一个表达式</span></span><br><span class=\"line\">                                    newValue = replaceValue;</span><br><span class=\"line\">                                &#125; <span class=\"keyword\">else</span> &#123;<span class=\"comment\">// 以字符串替换</span></span><br><span class=\"line\">                                    newValue = ((String) newValue).replace(replaceExp, replaceValue.toString());</span><br><span class=\"line\">                                &#125;</span><br><span class=\"line\">                            &#125;</span><br><span class=\"line\">                            setCellValue(cell, newValue);</span><br><span class=\"line\"></span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (-<span class=\"number\">1</span> != listStartRowNum) &#123;<span class=\"comment\">// 如果不为 -1 说明有需要循环的列表表达式</span></span><br><span class=\"line\">                Row listStartRow = sheet.getRow(listStartRowNum);</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (CollectionUtils.isEmpty(dataList)) &#123;<span class=\"comment\">// 列表数据为空，清空列表表达式行</span></span><br><span class=\"line\">                    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; listStartRow.getLastCellNum(); i++) &#123;</span><br><span class=\"line\">                        Cell cell = listStartRow.getCell(i);</span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (cell != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                            cell.setCellValue(<span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">int</span> lastCellNum = listStartRow.getLastCellNum();</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (listStartRowNum + <span class=\"number\">1</span> &lt;= sheet.getLastRowNum()) &#123;</span><br><span class=\"line\">                        sheet.shiftRows(listStartRowNum + <span class=\"number\">1</span>, sheet.getLastRowNum(), dataList.size(), <span class=\"keyword\">true</span>, <span class=\"keyword\">false</span>);<span class=\"comment\">// 列表数据行后面行下移，留出数据填充区域</span></span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; dataList.size(); i++) &#123;<span class=\"comment\">// 循环列表数据 生成行</span></span><br><span class=\"line\">                        JSONObject jsonObj  = (JSONObject) JSON.toJSON(dataList.get(i));</span><br><span class=\"line\">                        <span class=\"comment\">//Map&lt;String, Object&gt; map = dataList.get(i);// 一行数据</span></span><br><span class=\"line\">                        <span class=\"keyword\">int</span> newRowNum = listStartRowNum + i + <span class=\"number\">1</span>;<span class=\"comment\">// 保留表达式行</span></span><br><span class=\"line\">                        Row newRow = sheet.createRow(newRowNum);<span class=\"comment\">// 创建新行</span></span><br><span class=\"line\">                        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; lastCellNum; j++) &#123;<span class=\"comment\">// 循环遍历单元格</span></span><br><span class=\"line\">                            Cell cell = listStartRow.getCell(j);<span class=\"comment\">// 列表数据行</span></span><br><span class=\"line\"></span><br><span class=\"line\">                            <span class=\"comment\">// 填充数据</span></span><br><span class=\"line\">                            <span class=\"keyword\">if</span> (cell != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                                Cell newCell = newRow.createCell(j);</span><br><span class=\"line\">                                newCell.setCellStyle(cell.getCellStyle());<span class=\"comment\">// 设置单元格格式</span></span><br><span class=\"line\"></span><br><span class=\"line\">                                <span class=\"keyword\">if</span> (cell.getCellType() == CellType.STRING</span><br><span class=\"line\">                                        &amp;&amp; cell.getStringCellValue().matches(REG_LIST)) &#123;<span class=\"comment\">// 单元格是一个表达式</span></span><br><span class=\"line\">                                    String cellExp = cell.getStringCellValue();</span><br><span class=\"line\">                                    Matcher matcher = PATTERN_LIST.matcher(cellExp);</span><br><span class=\"line\">                                    matcher.find();</span><br><span class=\"line\">                                    String key = matcher.group(<span class=\"number\">1</span>);<span class=\"comment\">// 获取key</span></span><br><span class=\"line\">                                    Object newValue = jsonObj.get(key);</span><br><span class=\"line\">                                    <span class=\"keyword\">if</span> (newValue == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                                        newValue = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">                                    &#125;</span><br><span class=\"line\">                                    setCellValue(newCell, newValue);</span><br><span class=\"line\">                                &#125; <span class=\"keyword\">else</span> &#123;<span class=\"comment\">// 不是表达式复制单元格数据</span></span><br><span class=\"line\">                                    CellType cellType = cell.getCellType();</span><br><span class=\"line\">                                    <span class=\"keyword\">if</span> (cellType == CellType.NUMERIC) &#123;</span><br><span class=\"line\">                                        newCell.setCellValue(cell.getNumericCellValue());</span><br><span class=\"line\">                                    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (cellType == CellType.BOOLEAN) &#123;</span><br><span class=\"line\">                                        newCell.setCellValue(cell.getBooleanCellValue());</span><br><span class=\"line\">                                    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (cellType == CellType.STRING) &#123;</span><br><span class=\"line\">                                        newCell.setCellValue(cell.getStringCellValue());</span><br><span class=\"line\">                                    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (cellType == CellType.FORMULA) &#123;</span><br><span class=\"line\">                                        <span class=\"comment\">// 处理公式，待实现</span></span><br><span class=\"line\">                                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                                        newCell.setCellValue(cell.getStringCellValue());</span><br><span class=\"line\">                                    &#125;</span><br><span class=\"line\">                                &#125;</span><br><span class=\"line\">                            &#125;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    sheet.removeRow(listStartRow);<span class=\"comment\">// 删除list表达式行</span></span><br><span class=\"line\">                    sheet.shiftRows(listStartRowNum + <span class=\"number\">1</span>, sheet.getLastRowNum(), -<span class=\"number\">1</span>, <span class=\"keyword\">true</span>, <span class=\"keyword\">false</span>);<span class=\"comment\">// 数据区域上移一行，覆盖表达式行</span></span><br><span class=\"line\"></span><br><span class=\"line\">                    <span class=\"comment\">// 合并单元格处理</span></span><br><span class=\"line\">                    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; lastCellNum; i++) &#123;</span><br><span class=\"line\">                        CellRangeAddress mergedRangeAddress = getMergedRangeAddress(sheet, listStartRowNum, i);</span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (mergedRangeAddress != <span class=\"keyword\">null</span>) &#123;<span class=\"comment\">// 合并的单元格</span></span><br><span class=\"line\">                            i = mergedRangeAddress.getLastColumn();</span><br><span class=\"line\">                            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">1</span>; j &lt; dataList.size(); j++) &#123;</span><br><span class=\"line\">                                <span class=\"keyword\">int</span> newRowNum = listStartRowNum + j;</span><br><span class=\"line\">                                sheet.addMergedRegionUnsafe(<span class=\"keyword\">new</span> CellRangeAddress(newRowNum, newRowNum,</span><br><span class=\"line\">                                        mergedRangeAddress.getFirstColumn(), mergedRangeAddress.getLastColumn()));</span><br><span class=\"line\">                            &#125;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">// 公式生效</span></span><br><span class=\"line\">            sheet.setForceFormulaRecalculation(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">            sheet.getPrintSetup().setPaperSize(PrintSetup.A4_PAPERSIZE);</span><br><span class=\"line\">            sheet.getPrintSetup().setLandscape(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">            <span class=\"comment\">// FitHeight=1, 将所有行都缩放显示在一页上（设置1表示一页显示完，如果设置2表示分2页显示完）</span></span><br><span class=\"line\">            <span class=\"comment\">// FitWidth=1, 将所有列都缩放显示在一页上</span></span><br><span class=\"line\">            <span class=\"comment\">// 两个都等于1时，如果行数太多则会挤压列，一般来说只设置一个FitWidth=1，让行数自动换页</span></span><br><span class=\"line\">            <span class=\"comment\">// 要使这两个参数有效，则需要设置FitToPage=true</span></span><br><span class=\"line\">            sheet.setFitToPage(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">            sheet.getPrintSetup().setFitWidth((<span class=\"keyword\">short</span>) <span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"comment\">//          sheet.getPrintSetup().setFitHeight((short)1);</span></span><br><span class=\"line\">            <span class=\"comment\">// 是否显示自动换页符</span></span><br><span class=\"line\">            sheet.setAutobreaks(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">            ByteArrayOutputStream out = <span class=\"keyword\">new</span> ByteArrayOutputStream();</span><br><span class=\"line\">            workbook.write(out);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> out.toByteArray();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> ExcelException(<span class=\"string\">&quot;生成excel失败!&quot;</span>, e);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">setCellValue</span><span class=\"params\">(Cell cell, Object value)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (value <span class=\"keyword\">instanceof</span> Number) &#123;<span class=\"comment\">// 如果是数字类型的设置为数值</span></span><br><span class=\"line\">            cell.setCellValue(Double.parseDouble(value.toString()));</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (value <span class=\"keyword\">instanceof</span> Date) &#123;<span class=\"comment\">// 如果为时间类型的设置为时间</span></span><br><span class=\"line\">            cell.setCellValue((Date) value);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (value <span class=\"keyword\">instanceof</span> String) &#123;</span><br><span class=\"line\">            cell.setCellValue((String) value);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (value <span class=\"keyword\">instanceof</span> Boolean) &#123;</span><br><span class=\"line\">            cell.setCellValue((Boolean) value);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            cell.setCellValue(value.toString());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 获取指定行/列的合并单元格区域</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> sheet</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> row</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> column</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> CellRangeAddress 不是合并单元格返回null</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> CellRangeAddress <span class=\"title\">getMergedRangeAddress</span><span class=\"params\">(Sheet sheet, <span class=\"keyword\">int</span> row, <span class=\"keyword\">int</span> column)</span> </span>&#123;</span><br><span class=\"line\">        List&lt;CellRangeAddress&gt; mergedRegions = sheet.getMergedRegions();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (CellRangeAddress cellAddresses : mergedRegions) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (row &gt;= cellAddresses.getFirstRow() &amp;&amp; row &lt;= cellAddresses.getLastRow()</span><br><span class=\"line\">                    &amp;&amp; column &gt;= cellAddresses.getFirstColumn() &amp;&amp; column &lt;= cellAddresses.getLastColumn()) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> cellAddresses;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ExcelException</span> <span class=\"keyword\">extends</span> <span class=\"title\">RuntimeException</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">long</span> serialVersionUID = -<span class=\"number\">2772261598232964002L</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ExcelException</span><span class=\"params\">(String msg, Throwable e)</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">super</span>(msg, e);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ExcelException</span><span class=\"params\">(String msg)</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">super</span>(msg);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * Description: 1、通过浏览器以流的形式输出,为了处理中文表名问题.</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> bytes 文件对象</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> request</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> response</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> fileName 文件名</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">writeToResponse</span><span class=\"params\">(<span class=\"keyword\">byte</span>[] bytes, HttpServletRequest request, HttpServletResponse response, String fileName)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            String userAgent = request.getHeader(<span class=\"string\">&quot;User-Agent&quot;</span>);</span><br><span class=\"line\">            <span class=\"comment\">// 解决中文乱码问题</span></span><br><span class=\"line\">            String fileName1 =  fileName + <span class=\"string\">&quot;.xls&quot;</span>;</span><br><span class=\"line\">            String newFilename = URLEncoder.encode(fileName1, <span class=\"string\">&quot;UTF8&quot;</span>);</span><br><span class=\"line\">            <span class=\"comment\">// 如果没有userAgent，则默认使用IE的方式进行编码，因为毕竟IE还是占多数的</span></span><br><span class=\"line\">            String rtn = <span class=\"string\">&quot;filename=\\&quot;&quot;</span> + newFilename + <span class=\"string\">&quot;\\&quot;&quot;</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (userAgent != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                userAgent = userAgent.toLowerCase();</span><br><span class=\"line\">                <span class=\"comment\">// IE浏览器，只能采用URLEncoder编码</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (userAgent.indexOf(<span class=\"string\">&quot;IE&quot;</span>) != -<span class=\"number\">1</span>)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    rtn = <span class=\"string\">&quot;filename=\\&quot;&quot;</span> + newFilename + <span class=\"string\">&quot;\\&quot;&quot;</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"comment\">// Opera浏览器只能采用filename*</span></span><br><span class=\"line\">                <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (userAgent.indexOf(<span class=\"string\">&quot;OPERA&quot;</span>) != -<span class=\"number\">1</span>)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    rtn = <span class=\"string\">&quot;filename*=UTF-8&#x27;&#x27;&quot;</span> + newFilename;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"comment\">// Safari浏览器，只能采用ISO编码的中文输出</span></span><br><span class=\"line\">                <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (userAgent.indexOf(<span class=\"string\">&quot;SAFARI&quot;</span>) != -<span class=\"number\">1</span>)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    rtn = <span class=\"string\">&quot;filename=\\&quot;&quot;</span> + <span class=\"keyword\">new</span> String(fileName1.getBytes(<span class=\"string\">&quot;UTF-8&quot;</span>), <span class=\"string\">&quot;ISO8859-1&quot;</span>)</span><br><span class=\"line\">                            + <span class=\"string\">&quot;\\&quot;&quot;</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"comment\">// FireFox浏览器，可以使用MimeUtility或filename*或ISO编码的中文输出</span></span><br><span class=\"line\">                <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (userAgent.indexOf(<span class=\"string\">&quot;FIREFOX&quot;</span>) != -<span class=\"number\">1</span>)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    rtn = <span class=\"string\">&quot;filename*=UTF-8&#x27;&#x27;&quot;</span> + newFilename;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            String headStr = <span class=\"string\">&quot;attachment;  &quot;</span> + rtn;</span><br><span class=\"line\">            response.setContentType(<span class=\"string\">&quot;multipart/form-data&quot;</span>);</span><br><span class=\"line\">            response.setCharacterEncoding(<span class=\"string\">&quot;utf-8&quot;</span>);</span><br><span class=\"line\">            response.setHeader(<span class=\"string\">&quot;Content-Disposition&quot;</span>, headStr);</span><br><span class=\"line\">            <span class=\"comment\">// 响应到客户端</span></span><br><span class=\"line\">            OutputStream outputStream = response.getOutputStream();</span><br><span class=\"line\">            outputStream.write(bytes);</span><br><span class=\"line\">            outputStream.flush();</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (UnsupportedEncodingException e) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"模板制作\"><a href=\"#模板制作\" class=\"headerlink\" title=\"模板制作\"></a>模板制作</h2><p>制作模板时注意表格内数据与表头表尾数据变量命名区别，表格内数据变量前添加【.】用于标识表格数据。<br><img src=\"https://raw.githubusercontent.com/zhjAdm/ImageHosting/main/20211101104241.png\"></p>\n"},{"title":"Linx命令","description":"记录常用Linux命令","abbrlink":57987,"date":"2023-03-09T15:15:55.000Z","_content":"\n# \n\n# Linux命令\n\n#### 后台运行\n\n```shell\nnohup 执行脚本 > 输出日志.log 2>&1 & \n```\n\n#### 添加可执行权限\n\n```shell\nchmod +x 文件\n```\n\n#### 查找指定进程\n\n```shell\n ps -aux | grep \"进程名\" \n```\n\n#### 压缩\n\n```shell\ntar czvf 压缩文件名.tar.gz 被压缩文件夹\n```\n\n#### 解压\n\n```shell\ntar zvxf 压缩文件名.tar.gz -C 目标文件夹\n```\n\n#### 从服务器上下载文件\n\n```shell\nscp 用户名@服务器地址:要下载的文件路径 保存文件的文件夹路径\n```\n\n#### 上传本地文件到服务器\n\n```shell\nscp 要上传的文件路径 用户名@服务器地址:服务器保存路径 \n```\n\n#### 从服务器下载整个目录\n\n```shell\nscp -r 用户名@服务器地址:要下载的服务器目录 保存下载的目录\n```\n\n#### 上传目录到服务器\n\n```shell\nscp  -r 要上传的目录 用户名@服务器地址:服务器的保存目录\n```\n","source":"_posts/Linx命令.md","raw":"---\ntitle: Linx命令\ntags:\n  - Linux\ncategories: Linux\ndescription: 记录常用Linux命令\nabbrlink: 57987\ndate: 2023-03-09 23:15:55\n---\n\n# \n\n# Linux命令\n\n#### 后台运行\n\n```shell\nnohup 执行脚本 > 输出日志.log 2>&1 & \n```\n\n#### 添加可执行权限\n\n```shell\nchmod +x 文件\n```\n\n#### 查找指定进程\n\n```shell\n ps -aux | grep \"进程名\" \n```\n\n#### 压缩\n\n```shell\ntar czvf 压缩文件名.tar.gz 被压缩文件夹\n```\n\n#### 解压\n\n```shell\ntar zvxf 压缩文件名.tar.gz -C 目标文件夹\n```\n\n#### 从服务器上下载文件\n\n```shell\nscp 用户名@服务器地址:要下载的文件路径 保存文件的文件夹路径\n```\n\n#### 上传本地文件到服务器\n\n```shell\nscp 要上传的文件路径 用户名@服务器地址:服务器保存路径 \n```\n\n#### 从服务器下载整个目录\n\n```shell\nscp -r 用户名@服务器地址:要下载的服务器目录 保存下载的目录\n```\n\n#### 上传目录到服务器\n\n```shell\nscp  -r 要上传的目录 用户名@服务器地址:服务器的保存目录\n```\n","slug":"Linx命令","published":1,"updated":"2023-03-21T09:23:13.697Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhiicn3i0007nypj2s32ct9g","content":"<h1 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h1><h1 id=\"Linux命令\"><a href=\"#Linux命令\" class=\"headerlink\" title=\"Linux命令\"></a>Linux命令</h1><h4 id=\"后台运行\"><a href=\"#后台运行\" class=\"headerlink\" title=\"后台运行\"></a>后台运行</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nohup 执行脚本 &gt; 输出日志.log 2&gt;&amp;1 &amp; </span><br></pre></td></tr></table></figure>\n\n<h4 id=\"添加可执行权限\"><a href=\"#添加可执行权限\" class=\"headerlink\" title=\"添加可执行权限\"></a>添加可执行权限</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod +x 文件</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"查找指定进程\"><a href=\"#查找指定进程\" class=\"headerlink\" title=\"查找指定进程\"></a>查找指定进程</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ps -aux | grep &quot;进程名&quot; </span><br></pre></td></tr></table></figure>\n\n<h4 id=\"压缩\"><a href=\"#压缩\" class=\"headerlink\" title=\"压缩\"></a>压缩</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar czvf 压缩文件名.tar.gz 被压缩文件夹</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"解压\"><a href=\"#解压\" class=\"headerlink\" title=\"解压\"></a>解压</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar zvxf 压缩文件名.tar.gz -C 目标文件夹</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"从服务器上下载文件\"><a href=\"#从服务器上下载文件\" class=\"headerlink\" title=\"从服务器上下载文件\"></a>从服务器上下载文件</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scp 用户名@服务器地址:要下载的文件路径 保存文件的文件夹路径</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"上传本地文件到服务器\"><a href=\"#上传本地文件到服务器\" class=\"headerlink\" title=\"上传本地文件到服务器\"></a>上传本地文件到服务器</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scp 要上传的文件路径 用户名@服务器地址:服务器保存路径 </span><br></pre></td></tr></table></figure>\n\n<h4 id=\"从服务器下载整个目录\"><a href=\"#从服务器下载整个目录\" class=\"headerlink\" title=\"从服务器下载整个目录\"></a>从服务器下载整个目录</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scp -r 用户名@服务器地址:要下载的服务器目录 保存下载的目录</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"上传目录到服务器\"><a href=\"#上传目录到服务器\" class=\"headerlink\" title=\"上传目录到服务器\"></a>上传目录到服务器</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scp  -r 要上传的目录 用户名@服务器地址:服务器的保存目录</span><br></pre></td></tr></table></figure>\n","site":{"data":{"styles":"/* build time:Thu May 11 2023 10:25:59 GMT+0800 (中国标准时间)*/\n.sidebar{box-shadow:none;background:0 0}body{background:url(/images/yourbackground.png);background-repeat:no-repeat;background-attachment:fixed;background-size:cover;background-position:50% 50%}.back-to-top.back-to-top-on{display:none}\n/* rebuild by neat */","variables":"/* build time:Thu May 11 2023 10:25:59 GMT+0800 (中国标准时间)*/\n\n/* rebuild by neat */"}},"length":316,"excerpt":"","more":"<h1 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h1><h1 id=\"Linux命令\"><a href=\"#Linux命令\" class=\"headerlink\" title=\"Linux命令\"></a>Linux命令</h1><h4 id=\"后台运行\"><a href=\"#后台运行\" class=\"headerlink\" title=\"后台运行\"></a>后台运行</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nohup 执行脚本 &gt; 输出日志.log 2&gt;&amp;1 &amp; </span><br></pre></td></tr></table></figure>\n\n<h4 id=\"添加可执行权限\"><a href=\"#添加可执行权限\" class=\"headerlink\" title=\"添加可执行权限\"></a>添加可执行权限</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod +x 文件</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"查找指定进程\"><a href=\"#查找指定进程\" class=\"headerlink\" title=\"查找指定进程\"></a>查找指定进程</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ps -aux | grep &quot;进程名&quot; </span><br></pre></td></tr></table></figure>\n\n<h4 id=\"压缩\"><a href=\"#压缩\" class=\"headerlink\" title=\"压缩\"></a>压缩</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar czvf 压缩文件名.tar.gz 被压缩文件夹</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"解压\"><a href=\"#解压\" class=\"headerlink\" title=\"解压\"></a>解压</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar zvxf 压缩文件名.tar.gz -C 目标文件夹</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"从服务器上下载文件\"><a href=\"#从服务器上下载文件\" class=\"headerlink\" title=\"从服务器上下载文件\"></a>从服务器上下载文件</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scp 用户名@服务器地址:要下载的文件路径 保存文件的文件夹路径</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"上传本地文件到服务器\"><a href=\"#上传本地文件到服务器\" class=\"headerlink\" title=\"上传本地文件到服务器\"></a>上传本地文件到服务器</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scp 要上传的文件路径 用户名@服务器地址:服务器保存路径 </span><br></pre></td></tr></table></figure>\n\n<h4 id=\"从服务器下载整个目录\"><a href=\"#从服务器下载整个目录\" class=\"headerlink\" title=\"从服务器下载整个目录\"></a>从服务器下载整个目录</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scp -r 用户名@服务器地址:要下载的服务器目录 保存下载的目录</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"上传目录到服务器\"><a href=\"#上传目录到服务器\" class=\"headerlink\" title=\"上传目录到服务器\"></a>上传目录到服务器</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scp  -r 要上传的目录 用户名@服务器地址:服务器的保存目录</span><br></pre></td></tr></table></figure>\n"},{"title":"Java中的异常（Error与Exception）","abbrlink":45192,"date":"2021-06-20T06:59:06.000Z","description":"Java中的异常常见的异常分类与处理机制","_content":"\n# 简介\n\n程序在运行时，发生不被期望的事件，它影响程序的正常执行，这被称为异常。Java中拥有自己的异常处理机制，当异常发生时能够按照代码预设的处理逻辑，来减少异常对后续程序运行影响，尽可能保证程序正常的运行。这些异常有的是因为用户错误引起，有的是程序错误引起的，还有其它一些是因为物理错误引起的。\n\n# Java中的异常体系\n\n为万物皆对象的Java中，异常同样也是作为一个对象处理。Throwable 是 Java 语言中所有```错误（Error）```和```异常（Exception）```的超类。在 Java 中只有 Throwable 类型的实例才可以被```抛出（throw）```或者```捕获（catch）```，它是异常处理机制的基本组成类型。\n![](https://raw.githubusercontent.com/zhjAdm/ImageHosting/main/20210620155311.png)\n\n### 1.Error\n\n无法被程序所处理的错误。例如，Java 虚拟机运行错误（Virtual MachineError）、虚拟机内存不够错误(OutOfMemoryError)、类定义错误（NoClassDefFoundError）等 。这些异常发生时，Java 虚拟机（JVM）一般会选择线程终止。\n\n### 2.Exception\n\n程序本身可以处理的异常，可以通过```catch```捕获。 ```Exception```又分为```受检查异常```(必须处理) 和```不受检查异常```(可以不处理)。\n\n##### 受检查异常\n\nJava代码在编译的过程中，如果没有被```try/catch```包围处理的话，就不会被编译通过。除了```RuntimeException```及其子类以外，其他的```Exception```类及其子类都属于受检查异常 。常见的受检查异常有： ```IO 相关的异常```、```ClassNotFoundException``` 、```SQLException```等等。\n\n##### 不受检查异常\n\nJava中即使我们不做处理同样可以编译通过。```RuntimeException```git及其子类都统称为非受检查异常，例如：```NullPointerException```、```NumberFormatException```（字符串转换为数字）、```ArrayIndexOutOfBoundsException```（数组越界）、```ClassCastException```（类型转换错误）、```ArithmeticException```（算术错误）等等。\n\n### 3.try-catch-finally\n\n```try```块：用于包裹可能发生异常的代码，用来捕获异常。后面通常跟着一个或者多个```catch```块，如果没有则必须有个```finally```块。\n\n```\n\n```","source":"_posts/Java中的异常（Error与Exception）.md","raw":"---\ntitle: Java中的异常（Error与Exception）\nabbrlink: 45192\ndate: 2021-06-20 14:59:06\ntags: [Java,异常]\ncategories: Java\ndescription: Java中的异常常见的异常分类与处理机制\n\n---\n\n# 简介\n\n程序在运行时，发生不被期望的事件，它影响程序的正常执行，这被称为异常。Java中拥有自己的异常处理机制，当异常发生时能够按照代码预设的处理逻辑，来减少异常对后续程序运行影响，尽可能保证程序正常的运行。这些异常有的是因为用户错误引起，有的是程序错误引起的，还有其它一些是因为物理错误引起的。\n\n# Java中的异常体系\n\n为万物皆对象的Java中，异常同样也是作为一个对象处理。Throwable 是 Java 语言中所有```错误（Error）```和```异常（Exception）```的超类。在 Java 中只有 Throwable 类型的实例才可以被```抛出（throw）```或者```捕获（catch）```，它是异常处理机制的基本组成类型。\n![](https://raw.githubusercontent.com/zhjAdm/ImageHosting/main/20210620155311.png)\n\n### 1.Error\n\n无法被程序所处理的错误。例如，Java 虚拟机运行错误（Virtual MachineError）、虚拟机内存不够错误(OutOfMemoryError)、类定义错误（NoClassDefFoundError）等 。这些异常发生时，Java 虚拟机（JVM）一般会选择线程终止。\n\n### 2.Exception\n\n程序本身可以处理的异常，可以通过```catch```捕获。 ```Exception```又分为```受检查异常```(必须处理) 和```不受检查异常```(可以不处理)。\n\n##### 受检查异常\n\nJava代码在编译的过程中，如果没有被```try/catch```包围处理的话，就不会被编译通过。除了```RuntimeException```及其子类以外，其他的```Exception```类及其子类都属于受检查异常 。常见的受检查异常有： ```IO 相关的异常```、```ClassNotFoundException``` 、```SQLException```等等。\n\n##### 不受检查异常\n\nJava中即使我们不做处理同样可以编译通过。```RuntimeException```git及其子类都统称为非受检查异常，例如：```NullPointerException```、```NumberFormatException```（字符串转换为数字）、```ArrayIndexOutOfBoundsException```（数组越界）、```ClassCastException```（类型转换错误）、```ArithmeticException```（算术错误）等等。\n\n### 3.try-catch-finally\n\n```try```块：用于包裹可能发生异常的代码，用来捕获异常。后面通常跟着一个或者多个```catch```块，如果没有则必须有个```finally```块。\n\n```\n\n```","slug":"Java中的异常（Error与Exception）","published":1,"updated":"2023-03-09T15:16:12.523Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhiicn3i0008nypj0i38eddf","content":"<h1 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h1><p>程序在运行时，发生不被期望的事件，它影响程序的正常执行，这被称为异常。Java中拥有自己的异常处理机制，当异常发生时能够按照代码预设的处理逻辑，来减少异常对后续程序运行影响，尽可能保证程序正常的运行。这些异常有的是因为用户错误引起，有的是程序错误引起的，还有其它一些是因为物理错误引起的。</p>\n<h1 id=\"Java中的异常体系\"><a href=\"#Java中的异常体系\" class=\"headerlink\" title=\"Java中的异常体系\"></a>Java中的异常体系</h1><p>为万物皆对象的Java中，异常同样也是作为一个对象处理。Throwable 是 Java 语言中所有<code>错误（Error）</code>和<code>异常（Exception）</code>的超类。在 Java 中只有 Throwable 类型的实例才可以被<code>抛出（throw）</code>或者<code>捕获（catch）</code>，它是异常处理机制的基本组成类型。<br><img src=\"https://raw.githubusercontent.com/zhjAdm/ImageHosting/main/20210620155311.png\"></p>\n<h3 id=\"1-Error\"><a href=\"#1-Error\" class=\"headerlink\" title=\"1.Error\"></a>1.Error</h3><p>无法被程序所处理的错误。例如，Java 虚拟机运行错误（Virtual MachineError）、虚拟机内存不够错误(OutOfMemoryError)、类定义错误（NoClassDefFoundError）等 。这些异常发生时，Java 虚拟机（JVM）一般会选择线程终止。</p>\n<h3 id=\"2-Exception\"><a href=\"#2-Exception\" class=\"headerlink\" title=\"2.Exception\"></a>2.Exception</h3><p>程序本身可以处理的异常，可以通过<code>catch</code>捕获。 <code>Exception</code>又分为<code>受检查异常</code>(必须处理) 和<code>不受检查异常</code>(可以不处理)。</p>\n<h5 id=\"受检查异常\"><a href=\"#受检查异常\" class=\"headerlink\" title=\"受检查异常\"></a>受检查异常</h5><p>Java代码在编译的过程中，如果没有被<code>try/catch</code>包围处理的话，就不会被编译通过。除了<code>RuntimeException</code>及其子类以外，其他的<code>Exception</code>类及其子类都属于受检查异常 。常见的受检查异常有： <code>IO 相关的异常</code>、<code>ClassNotFoundException</code> 、<code>SQLException</code>等等。</p>\n<h5 id=\"不受检查异常\"><a href=\"#不受检查异常\" class=\"headerlink\" title=\"不受检查异常\"></a>不受检查异常</h5><p>Java中即使我们不做处理同样可以编译通过。<code>RuntimeException</code>git及其子类都统称为非受检查异常，例如：<code>NullPointerException</code>、<code>NumberFormatException</code>（字符串转换为数字）、<code>ArrayIndexOutOfBoundsException</code>（数组越界）、<code>ClassCastException</code>（类型转换错误）、<code>ArithmeticException</code>（算术错误）等等。</p>\n<h3 id=\"3-try-catch-finally\"><a href=\"#3-try-catch-finally\" class=\"headerlink\" title=\"3.try-catch-finally\"></a>3.try-catch-finally</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>```</p>\n","site":{"data":{"styles":"/* build time:Thu May 11 2023 10:25:59 GMT+0800 (中国标准时间)*/\n.sidebar{box-shadow:none;background:0 0}body{background:url(/images/yourbackground.png);background-repeat:no-repeat;background-attachment:fixed;background-size:cover;background-position:50% 50%}.back-to-top.back-to-top-on{display:none}\n/* rebuild by neat */","variables":"/* build time:Thu May 11 2023 10:25:59 GMT+0800 (中国标准时间)*/\n\n/* rebuild by neat */"}},"length":897,"excerpt":"","more":"<h1 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h1><p>程序在运行时，发生不被期望的事件，它影响程序的正常执行，这被称为异常。Java中拥有自己的异常处理机制，当异常发生时能够按照代码预设的处理逻辑，来减少异常对后续程序运行影响，尽可能保证程序正常的运行。这些异常有的是因为用户错误引起，有的是程序错误引起的，还有其它一些是因为物理错误引起的。</p>\n<h1 id=\"Java中的异常体系\"><a href=\"#Java中的异常体系\" class=\"headerlink\" title=\"Java中的异常体系\"></a>Java中的异常体系</h1><p>为万物皆对象的Java中，异常同样也是作为一个对象处理。Throwable 是 Java 语言中所有<code>错误（Error）</code>和<code>异常（Exception）</code>的超类。在 Java 中只有 Throwable 类型的实例才可以被<code>抛出（throw）</code>或者<code>捕获（catch）</code>，它是异常处理机制的基本组成类型。<br><img src=\"https://raw.githubusercontent.com/zhjAdm/ImageHosting/main/20210620155311.png\"></p>\n<h3 id=\"1-Error\"><a href=\"#1-Error\" class=\"headerlink\" title=\"1.Error\"></a>1.Error</h3><p>无法被程序所处理的错误。例如，Java 虚拟机运行错误（Virtual MachineError）、虚拟机内存不够错误(OutOfMemoryError)、类定义错误（NoClassDefFoundError）等 。这些异常发生时，Java 虚拟机（JVM）一般会选择线程终止。</p>\n<h3 id=\"2-Exception\"><a href=\"#2-Exception\" class=\"headerlink\" title=\"2.Exception\"></a>2.Exception</h3><p>程序本身可以处理的异常，可以通过<code>catch</code>捕获。 <code>Exception</code>又分为<code>受检查异常</code>(必须处理) 和<code>不受检查异常</code>(可以不处理)。</p>\n<h5 id=\"受检查异常\"><a href=\"#受检查异常\" class=\"headerlink\" title=\"受检查异常\"></a>受检查异常</h5><p>Java代码在编译的过程中，如果没有被<code>try/catch</code>包围处理的话，就不会被编译通过。除了<code>RuntimeException</code>及其子类以外，其他的<code>Exception</code>类及其子类都属于受检查异常 。常见的受检查异常有： <code>IO 相关的异常</code>、<code>ClassNotFoundException</code> 、<code>SQLException</code>等等。</p>\n<h5 id=\"不受检查异常\"><a href=\"#不受检查异常\" class=\"headerlink\" title=\"不受检查异常\"></a>不受检查异常</h5><p>Java中即使我们不做处理同样可以编译通过。<code>RuntimeException</code>git及其子类都统称为非受检查异常，例如：<code>NullPointerException</code>、<code>NumberFormatException</code>（字符串转换为数字）、<code>ArrayIndexOutOfBoundsException</code>（数组越界）、<code>ClassCastException</code>（类型转换错误）、<code>ArithmeticException</code>（算术错误）等等。</p>\n<h3 id=\"3-try-catch-finally\"><a href=\"#3-try-catch-finally\" class=\"headerlink\" title=\"3.try-catch-finally\"></a>3.try-catch-finally</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>```</p>\n"},{"title":"初识Spring Security（一）","abbrlink":34298,"date":"2022-07-02T09:15:00.000Z","description":"Spring Boot集成Spring Security，配置文件详解。","_content":"\n## 相关依赖\n\n```xml\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-security</artifactId>\n        </dependency>\n```\n\n## Spring Securit配制文件SecurityConfig\n\n- 处理访问无权限是返回结果  \n  \n  ```Java\n  @Component\n  public class RestfulAccessDeniedHandler implements AccessDeniedHandler {\n    @Override\n    public void handle(HttpServletRequest request,\n                       HttpServletResponse response,\n                       AccessDeniedException e) throws IOException, ServletException {\n        response.setCharacterEncoding(\"UTF-8\");\n        response.setContentType(\"application/json\");\n        //Jackson核心对象\n        ObjectMapper mapper = new ObjectMapper();\n        response.getWriter().println(mapper.writeValueAsString(Result.forbidden(\"所请求资源，没有权限访问！\")));\n        response.getWriter().flush();\n    }\n  }\n  ```\n\n- 处理Token失效或未登录是返回结果  \n  \n  ```Java\n  @Component\n  public class RestAuthenticationEntryPoint implements AuthenticationEntryPoint {\n    @Override\n    public void commence(HttpServletRequest request, HttpServletResponse response, AuthenticationException authException) throws IOException, ServletException {\n        response.setCharacterEncoding(\"UTF-8\");\n        response.setContentType(\"application/json\");\n        //Jackson核心对象\n        ObjectMapper mapper = new ObjectMapper();\n        response.getWriter().println(mapper.writeValueAsString(Result.unauthorized(\"未登录或者token失效！\")));\n        response.getWriter().flush();\n    }\n  }\n  ```\n\n- 配制文件主要内容  \n    SecurityConfig接管Spring Security的配置，必须要继承WebSecurityConfigurerAdapter重写configure方法。并且通常添加@EnableWebSecurity注解开启方法过滤注解\n  \n  ```Java\n  @Override\n    protected void configure(HttpSecurity httpSecurity) throws Exception {\n        httpSecurity\n                .csrf().disable() //关闭CSRF\n                .sessionManagement()// 基于token，所以不需要session\n                .sessionCreationPolicy(SessionCreationPolicy.STATELESS)\n                .and()\n                .authorizeRequests()\n                // 允许对于网站静态资源的无授权访问\n                .antMatchers(HttpMethod.GET,\n                        \"/\",\n                        \"/*.html\",\n                        \"/favicon.ico\",\n                        \"/**/*.html\",\n                        \"/**/*.css\",\n                        \"/**/*.js\",\n                        \"/swagger-resources/**\",\n                        \"/v2/api-docs/**\"\n                )\n                .permitAll()\n                // 对登录注册要允许匿名访问\n                .antMatchers(\"/system/user/login\", \"/system/user/register\")\n                .permitAll()\n                //跨域请求会先进行一次options请求\n                .antMatchers(HttpMethod.OPTIONS)\n                .permitAll()\n                //允许访问druid监控页面，由于CSRF跨站点请求伪造(Cross—Site Request Forgery)的原因，会进不去druid监控页面\n                .antMatchers(\"/druid/*\")\n                .permitAll()\n                .anyRequest()// 除上面外的所有请求全部需要鉴权认证\n                .authenticated();\n        // 禁用缓存\n        httpSecurity.headers().cacheControl();\n        // 添加JWT filter\n        httpSecurity.addFilterBefore(jwtAuthenticationTokenFilter(), UsernamePasswordAuthenticationFilter.class);\n        // 添加自定义未授权和未登录结果返回\n        httpSecurity.exceptionHandling()\n                .accessDeniedHandler(restfulAccessDeniedHandler)\n                .authenticationEntryPoint(restAuthenticationEntryPoint);\n    }\n  ```\n\n- authenticationManager无法注入问题  \n  在项目起动过程时，报错AuthenticationManager无法注入问题。报错信息如下：\n  \n  ```\n  Description:\n  ```\n\nField userService in com.zhjAdm.system.user.service.impl.UserDetailsServiceImpl required a bean of type 'org.springframework.security.authentication.AuthenticationManager' that could not be found.\n\nThe injection point has the following annotations:\n    - @org.springframework.beans.factory.annotation.Autowired(required=true)\n\nAction:\n\nConsider defining a bean of type 'org.springframework.security.authentication.AuthenticationManager' in your configuration.\n\n```\n解决方案，在配制文件中添加：\n```java\n    @Bean\n    @Override\n    public AuthenticationManager authenticationManagerBean() throws Exception {\n        return super.authenticationManagerBean();\n    }\n```","source":"_posts/初识Spring-Security.md","raw":"---\ntitle: 初识Spring Security（一）\nabbrlink: 34298\ndate: 2022-07-02 17:15:00\ntags: [Java,Spring Security]\ncategories: Java\ndescription: Spring Boot集成Spring Security，配置文件详解。\n\n---\n\n## 相关依赖\n\n```xml\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-security</artifactId>\n        </dependency>\n```\n\n## Spring Securit配制文件SecurityConfig\n\n- 处理访问无权限是返回结果  \n  \n  ```Java\n  @Component\n  public class RestfulAccessDeniedHandler implements AccessDeniedHandler {\n    @Override\n    public void handle(HttpServletRequest request,\n                       HttpServletResponse response,\n                       AccessDeniedException e) throws IOException, ServletException {\n        response.setCharacterEncoding(\"UTF-8\");\n        response.setContentType(\"application/json\");\n        //Jackson核心对象\n        ObjectMapper mapper = new ObjectMapper();\n        response.getWriter().println(mapper.writeValueAsString(Result.forbidden(\"所请求资源，没有权限访问！\")));\n        response.getWriter().flush();\n    }\n  }\n  ```\n\n- 处理Token失效或未登录是返回结果  \n  \n  ```Java\n  @Component\n  public class RestAuthenticationEntryPoint implements AuthenticationEntryPoint {\n    @Override\n    public void commence(HttpServletRequest request, HttpServletResponse response, AuthenticationException authException) throws IOException, ServletException {\n        response.setCharacterEncoding(\"UTF-8\");\n        response.setContentType(\"application/json\");\n        //Jackson核心对象\n        ObjectMapper mapper = new ObjectMapper();\n        response.getWriter().println(mapper.writeValueAsString(Result.unauthorized(\"未登录或者token失效！\")));\n        response.getWriter().flush();\n    }\n  }\n  ```\n\n- 配制文件主要内容  \n    SecurityConfig接管Spring Security的配置，必须要继承WebSecurityConfigurerAdapter重写configure方法。并且通常添加@EnableWebSecurity注解开启方法过滤注解\n  \n  ```Java\n  @Override\n    protected void configure(HttpSecurity httpSecurity) throws Exception {\n        httpSecurity\n                .csrf().disable() //关闭CSRF\n                .sessionManagement()// 基于token，所以不需要session\n                .sessionCreationPolicy(SessionCreationPolicy.STATELESS)\n                .and()\n                .authorizeRequests()\n                // 允许对于网站静态资源的无授权访问\n                .antMatchers(HttpMethod.GET,\n                        \"/\",\n                        \"/*.html\",\n                        \"/favicon.ico\",\n                        \"/**/*.html\",\n                        \"/**/*.css\",\n                        \"/**/*.js\",\n                        \"/swagger-resources/**\",\n                        \"/v2/api-docs/**\"\n                )\n                .permitAll()\n                // 对登录注册要允许匿名访问\n                .antMatchers(\"/system/user/login\", \"/system/user/register\")\n                .permitAll()\n                //跨域请求会先进行一次options请求\n                .antMatchers(HttpMethod.OPTIONS)\n                .permitAll()\n                //允许访问druid监控页面，由于CSRF跨站点请求伪造(Cross—Site Request Forgery)的原因，会进不去druid监控页面\n                .antMatchers(\"/druid/*\")\n                .permitAll()\n                .anyRequest()// 除上面外的所有请求全部需要鉴权认证\n                .authenticated();\n        // 禁用缓存\n        httpSecurity.headers().cacheControl();\n        // 添加JWT filter\n        httpSecurity.addFilterBefore(jwtAuthenticationTokenFilter(), UsernamePasswordAuthenticationFilter.class);\n        // 添加自定义未授权和未登录结果返回\n        httpSecurity.exceptionHandling()\n                .accessDeniedHandler(restfulAccessDeniedHandler)\n                .authenticationEntryPoint(restAuthenticationEntryPoint);\n    }\n  ```\n\n- authenticationManager无法注入问题  \n  在项目起动过程时，报错AuthenticationManager无法注入问题。报错信息如下：\n  \n  ```\n  Description:\n  ```\n\nField userService in com.zhjAdm.system.user.service.impl.UserDetailsServiceImpl required a bean of type 'org.springframework.security.authentication.AuthenticationManager' that could not be found.\n\nThe injection point has the following annotations:\n    - @org.springframework.beans.factory.annotation.Autowired(required=true)\n\nAction:\n\nConsider defining a bean of type 'org.springframework.security.authentication.AuthenticationManager' in your configuration.\n\n```\n解决方案，在配制文件中添加：\n```java\n    @Bean\n    @Override\n    public AuthenticationManager authenticationManagerBean() throws Exception {\n        return super.authenticationManagerBean();\n    }\n```","slug":"初识Spring-Security","published":1,"updated":"2023-03-09T14:38:46.978Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhiicn3j0009nypj6e7fa1jj","content":"<h2 id=\"相关依赖\"><a href=\"#相关依赖\" class=\"headerlink\" title=\"相关依赖\"></a>相关依赖</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-security<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Spring-Securit配制文件SecurityConfig\"><a href=\"#Spring-Securit配制文件SecurityConfig\" class=\"headerlink\" title=\"Spring Securit配制文件SecurityConfig\"></a>Spring Securit配制文件SecurityConfig</h2><ul>\n<li><p>处理访问无权限是返回结果  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">RestfulAccessDeniedHandler</span> <span class=\"keyword\">implements</span> <span class=\"title\">AccessDeniedHandler</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">handle</span><span class=\"params\">(HttpServletRequest request,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                     HttpServletResponse response,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                     AccessDeniedException e)</span> <span class=\"keyword\">throws</span> IOException, ServletException </span>&#123;</span><br><span class=\"line\">      response.setCharacterEncoding(<span class=\"string\">&quot;UTF-8&quot;</span>);</span><br><span class=\"line\">      response.setContentType(<span class=\"string\">&quot;application/json&quot;</span>);</span><br><span class=\"line\">      <span class=\"comment\">//Jackson核心对象</span></span><br><span class=\"line\">      ObjectMapper mapper = <span class=\"keyword\">new</span> ObjectMapper();</span><br><span class=\"line\">      response.getWriter().println(mapper.writeValueAsString(Result.forbidden(<span class=\"string\">&quot;所请求资源，没有权限访问！&quot;</span>)));</span><br><span class=\"line\">      response.getWriter().flush();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>处理Token失效或未登录是返回结果  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">RestAuthenticationEntryPoint</span> <span class=\"keyword\">implements</span> <span class=\"title\">AuthenticationEntryPoint</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">commence</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response, AuthenticationException authException)</span> <span class=\"keyword\">throws</span> IOException, ServletException </span>&#123;</span><br><span class=\"line\">      response.setCharacterEncoding(<span class=\"string\">&quot;UTF-8&quot;</span>);</span><br><span class=\"line\">      response.setContentType(<span class=\"string\">&quot;application/json&quot;</span>);</span><br><span class=\"line\">      <span class=\"comment\">//Jackson核心对象</span></span><br><span class=\"line\">      ObjectMapper mapper = <span class=\"keyword\">new</span> ObjectMapper();</span><br><span class=\"line\">      response.getWriter().println(mapper.writeValueAsString(Result.unauthorized(<span class=\"string\">&quot;未登录或者token失效！&quot;</span>)));</span><br><span class=\"line\">      response.getWriter().flush();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>配制文件主要内容<br>  SecurityConfig接管Spring Security的配置，必须要继承WebSecurityConfigurerAdapter重写configure方法。并且通常添加@EnableWebSecurity注解开启方法过滤注解</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">configure</span><span class=\"params\">(HttpSecurity httpSecurity)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">      httpSecurity</span><br><span class=\"line\">              .csrf().disable() <span class=\"comment\">//关闭CSRF</span></span><br><span class=\"line\">              .sessionManagement()<span class=\"comment\">// 基于token，所以不需要session</span></span><br><span class=\"line\">              .sessionCreationPolicy(SessionCreationPolicy.STATELESS)</span><br><span class=\"line\">              .and()</span><br><span class=\"line\">              .authorizeRequests()</span><br><span class=\"line\">              <span class=\"comment\">// 允许对于网站静态资源的无授权访问</span></span><br><span class=\"line\">              .antMatchers(HttpMethod.GET,</span><br><span class=\"line\">                      <span class=\"string\">&quot;/&quot;</span>,</span><br><span class=\"line\">                      <span class=\"string\">&quot;/*.html&quot;</span>,</span><br><span class=\"line\">                      <span class=\"string\">&quot;/favicon.ico&quot;</span>,</span><br><span class=\"line\">                      <span class=\"string\">&quot;/**/*.html&quot;</span>,</span><br><span class=\"line\">                      <span class=\"string\">&quot;/**/*.css&quot;</span>,</span><br><span class=\"line\">                      <span class=\"string\">&quot;/**/*.js&quot;</span>,</span><br><span class=\"line\">                      <span class=\"string\">&quot;/swagger-resources/**&quot;</span>,</span><br><span class=\"line\">                      <span class=\"string\">&quot;/v2/api-docs/**&quot;</span></span><br><span class=\"line\">              )</span><br><span class=\"line\">              .permitAll()</span><br><span class=\"line\">              <span class=\"comment\">// 对登录注册要允许匿名访问</span></span><br><span class=\"line\">              .antMatchers(<span class=\"string\">&quot;/system/user/login&quot;</span>, <span class=\"string\">&quot;/system/user/register&quot;</span>)</span><br><span class=\"line\">              .permitAll()</span><br><span class=\"line\">              <span class=\"comment\">//跨域请求会先进行一次options请求</span></span><br><span class=\"line\">              .antMatchers(HttpMethod.OPTIONS)</span><br><span class=\"line\">              .permitAll()</span><br><span class=\"line\">              <span class=\"comment\">//允许访问druid监控页面，由于CSRF跨站点请求伪造(Cross—Site Request Forgery)的原因，会进不去druid监控页面</span></span><br><span class=\"line\">              .antMatchers(<span class=\"string\">&quot;/druid/*&quot;</span>)</span><br><span class=\"line\">              .permitAll()</span><br><span class=\"line\">              .anyRequest()<span class=\"comment\">// 除上面外的所有请求全部需要鉴权认证</span></span><br><span class=\"line\">              .authenticated();</span><br><span class=\"line\">      <span class=\"comment\">// 禁用缓存</span></span><br><span class=\"line\">      httpSecurity.headers().cacheControl();</span><br><span class=\"line\">      <span class=\"comment\">// 添加JWT filter</span></span><br><span class=\"line\">      httpSecurity.addFilterBefore(jwtAuthenticationTokenFilter(), UsernamePasswordAuthenticationFilter.class);</span><br><span class=\"line\">      <span class=\"comment\">// 添加自定义未授权和未登录结果返回</span></span><br><span class=\"line\">      httpSecurity.exceptionHandling()</span><br><span class=\"line\">              .accessDeniedHandler(restfulAccessDeniedHandler)</span><br><span class=\"line\">              .authenticationEntryPoint(restAuthenticationEntryPoint);</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>authenticationManager无法注入问题<br>在项目起动过程时，报错AuthenticationManager无法注入问题。报错信息如下：</p>\n<figure class=\"highlight avrasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">Description:</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<p>Field userService in com.zhjAdm.system.user.service.impl.UserDetailsServiceImpl required a bean of type ‘org.springframework.security.authentication.AuthenticationManager’ that could not be found.</p>\n<p>The injection point has the following annotations:<br>    - @org.springframework.beans.factory.annotation.Autowired(required=true)</p>\n<p>Action:</p>\n<p>Consider defining a bean of type ‘org.springframework.security.authentication.AuthenticationManager’ in your configuration.</p>\n<figure class=\"highlight aspectj\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">解决方案，在配制文件中添加：</span><br><span class=\"line\">```java</span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\">AuthenticationManager <span class=\"title\">authenticationManagerBean</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">return</span> <span class=\"keyword\">super</span>.<span class=\"title\">authenticationManagerBean</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>","site":{"data":{"styles":"/* build time:Thu May 11 2023 10:25:59 GMT+0800 (中国标准时间)*/\n.sidebar{box-shadow:none;background:0 0}body{background:url(/images/yourbackground.png);background-repeat:no-repeat;background-attachment:fixed;background-size:cover;background-position:50% 50%}.back-to-top.back-to-top-on{display:none}\n/* rebuild by neat */","variables":"/* build time:Thu May 11 2023 10:25:59 GMT+0800 (中国标准时间)*/\n\n/* rebuild by neat */"}},"length":3327,"excerpt":"","more":"<h2 id=\"相关依赖\"><a href=\"#相关依赖\" class=\"headerlink\" title=\"相关依赖\"></a>相关依赖</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-security<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Spring-Securit配制文件SecurityConfig\"><a href=\"#Spring-Securit配制文件SecurityConfig\" class=\"headerlink\" title=\"Spring Securit配制文件SecurityConfig\"></a>Spring Securit配制文件SecurityConfig</h2><ul>\n<li><p>处理访问无权限是返回结果  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">RestfulAccessDeniedHandler</span> <span class=\"keyword\">implements</span> <span class=\"title\">AccessDeniedHandler</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">handle</span><span class=\"params\">(HttpServletRequest request,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                     HttpServletResponse response,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                     AccessDeniedException e)</span> <span class=\"keyword\">throws</span> IOException, ServletException </span>&#123;</span><br><span class=\"line\">      response.setCharacterEncoding(<span class=\"string\">&quot;UTF-8&quot;</span>);</span><br><span class=\"line\">      response.setContentType(<span class=\"string\">&quot;application/json&quot;</span>);</span><br><span class=\"line\">      <span class=\"comment\">//Jackson核心对象</span></span><br><span class=\"line\">      ObjectMapper mapper = <span class=\"keyword\">new</span> ObjectMapper();</span><br><span class=\"line\">      response.getWriter().println(mapper.writeValueAsString(Result.forbidden(<span class=\"string\">&quot;所请求资源，没有权限访问！&quot;</span>)));</span><br><span class=\"line\">      response.getWriter().flush();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>处理Token失效或未登录是返回结果  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">RestAuthenticationEntryPoint</span> <span class=\"keyword\">implements</span> <span class=\"title\">AuthenticationEntryPoint</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">commence</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response, AuthenticationException authException)</span> <span class=\"keyword\">throws</span> IOException, ServletException </span>&#123;</span><br><span class=\"line\">      response.setCharacterEncoding(<span class=\"string\">&quot;UTF-8&quot;</span>);</span><br><span class=\"line\">      response.setContentType(<span class=\"string\">&quot;application/json&quot;</span>);</span><br><span class=\"line\">      <span class=\"comment\">//Jackson核心对象</span></span><br><span class=\"line\">      ObjectMapper mapper = <span class=\"keyword\">new</span> ObjectMapper();</span><br><span class=\"line\">      response.getWriter().println(mapper.writeValueAsString(Result.unauthorized(<span class=\"string\">&quot;未登录或者token失效！&quot;</span>)));</span><br><span class=\"line\">      response.getWriter().flush();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>配制文件主要内容<br>  SecurityConfig接管Spring Security的配置，必须要继承WebSecurityConfigurerAdapter重写configure方法。并且通常添加@EnableWebSecurity注解开启方法过滤注解</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">configure</span><span class=\"params\">(HttpSecurity httpSecurity)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">      httpSecurity</span><br><span class=\"line\">              .csrf().disable() <span class=\"comment\">//关闭CSRF</span></span><br><span class=\"line\">              .sessionManagement()<span class=\"comment\">// 基于token，所以不需要session</span></span><br><span class=\"line\">              .sessionCreationPolicy(SessionCreationPolicy.STATELESS)</span><br><span class=\"line\">              .and()</span><br><span class=\"line\">              .authorizeRequests()</span><br><span class=\"line\">              <span class=\"comment\">// 允许对于网站静态资源的无授权访问</span></span><br><span class=\"line\">              .antMatchers(HttpMethod.GET,</span><br><span class=\"line\">                      <span class=\"string\">&quot;/&quot;</span>,</span><br><span class=\"line\">                      <span class=\"string\">&quot;/*.html&quot;</span>,</span><br><span class=\"line\">                      <span class=\"string\">&quot;/favicon.ico&quot;</span>,</span><br><span class=\"line\">                      <span class=\"string\">&quot;/**/*.html&quot;</span>,</span><br><span class=\"line\">                      <span class=\"string\">&quot;/**/*.css&quot;</span>,</span><br><span class=\"line\">                      <span class=\"string\">&quot;/**/*.js&quot;</span>,</span><br><span class=\"line\">                      <span class=\"string\">&quot;/swagger-resources/**&quot;</span>,</span><br><span class=\"line\">                      <span class=\"string\">&quot;/v2/api-docs/**&quot;</span></span><br><span class=\"line\">              )</span><br><span class=\"line\">              .permitAll()</span><br><span class=\"line\">              <span class=\"comment\">// 对登录注册要允许匿名访问</span></span><br><span class=\"line\">              .antMatchers(<span class=\"string\">&quot;/system/user/login&quot;</span>, <span class=\"string\">&quot;/system/user/register&quot;</span>)</span><br><span class=\"line\">              .permitAll()</span><br><span class=\"line\">              <span class=\"comment\">//跨域请求会先进行一次options请求</span></span><br><span class=\"line\">              .antMatchers(HttpMethod.OPTIONS)</span><br><span class=\"line\">              .permitAll()</span><br><span class=\"line\">              <span class=\"comment\">//允许访问druid监控页面，由于CSRF跨站点请求伪造(Cross—Site Request Forgery)的原因，会进不去druid监控页面</span></span><br><span class=\"line\">              .antMatchers(<span class=\"string\">&quot;/druid/*&quot;</span>)</span><br><span class=\"line\">              .permitAll()</span><br><span class=\"line\">              .anyRequest()<span class=\"comment\">// 除上面外的所有请求全部需要鉴权认证</span></span><br><span class=\"line\">              .authenticated();</span><br><span class=\"line\">      <span class=\"comment\">// 禁用缓存</span></span><br><span class=\"line\">      httpSecurity.headers().cacheControl();</span><br><span class=\"line\">      <span class=\"comment\">// 添加JWT filter</span></span><br><span class=\"line\">      httpSecurity.addFilterBefore(jwtAuthenticationTokenFilter(), UsernamePasswordAuthenticationFilter.class);</span><br><span class=\"line\">      <span class=\"comment\">// 添加自定义未授权和未登录结果返回</span></span><br><span class=\"line\">      httpSecurity.exceptionHandling()</span><br><span class=\"line\">              .accessDeniedHandler(restfulAccessDeniedHandler)</span><br><span class=\"line\">              .authenticationEntryPoint(restAuthenticationEntryPoint);</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>authenticationManager无法注入问题<br>在项目起动过程时，报错AuthenticationManager无法注入问题。报错信息如下：</p>\n<figure class=\"highlight avrasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">Description:</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<p>Field userService in com.zhjAdm.system.user.service.impl.UserDetailsServiceImpl required a bean of type ‘org.springframework.security.authentication.AuthenticationManager’ that could not be found.</p>\n<p>The injection point has the following annotations:<br>    - @org.springframework.beans.factory.annotation.Autowired(required=true)</p>\n<p>Action:</p>\n<p>Consider defining a bean of type ‘org.springframework.security.authentication.AuthenticationManager’ in your configuration.</p>\n<figure class=\"highlight aspectj\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">解决方案，在配制文件中添加：</span><br><span class=\"line\">```java</span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\">AuthenticationManager <span class=\"title\">authenticationManagerBean</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">return</span> <span class=\"keyword\">super</span>.<span class=\"title\">authenticationManagerBean</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>"},{"title":"初识Spring Security（二)","abbrlink":48147,"date":"2022-07-02T13:26:10.000Z","description":"Spring Boot集成Spring Security，用户密码加密存储实现及用户登陆。","_content":"\n对于用户密码出于安全考虑需要加密存储，Spring Security提供了多种加密方式，官方推荐使用BCryptPasswordEncoder加密方式。其实BCryptPasswordEncoder的实现并非为一种加密算法，而是采用SHA-256 +随机盐+密钥对密码进行加密，SHA系列是Hash算法，其过程是不可逆的。用户注册时，使用SHA-256 +随机盐+密钥把用户输入的密码进行Hash处理，将得到的Hash值存入数据库。用户登陆时候采取同样的算法对密码进行Hash处理后于数据库中存储得密码Hash值进行比较。\n\n## SecurityUtils工具类\n\nSpring框架借助ThreadLocal来保存和传递用户登录信息。我们编写一个工具类方便的获取ThreadLocal中的用户信息名，以及用户密码的加密和比较工作\n\n```Java\npublic class SecurityUtils {\n    /**\n     * 用户ID\n     **/\n    public static String getUserId() {\n        try {\n            return getLoginUser().getUserId();\n        } catch (Exception e) {\n            throw new BusinessException(ResultEnum.USER_NOT_EXIST);\n        }\n    }\n    /**\n     * 获取部门ID\n     **/\n    public static String getOrganId() {\n        try {\n            return getLoginUser().getOrganId();\n        } catch (Exception e) {\n            throw new BusinessException(ResultEnum.USER_NOT_ORGAN);\n        }\n    }\n    /**\n     * 获取用户账户\n     **/\n    public static String getUsername() {\n        try {\n            return getLoginUser().getUsername();\n        } catch (Exception e) {\n            throw new BusinessException(ResultEnum.USER_NOT_ACCOUNT);\n        }\n    }\n    /**\n     * 获取用户\n     **/\n    public static SysUser getLoginUser() {\n        try {\n            return (SysUser) getAuthentication().getPrincipal();\n        } catch (Exception e) {\n            throw new BusinessException(ResultEnum.USER_NOT_EXIST);\n        }\n    }\n    /**\n     * 获取Authentication\n     */\n    public static Authentication getAuthentication() {\n        return SecurityContextHolder.getContext().getAuthentication();\n    }\n\n    /**\n     * 生成BCryptPasswordEncoder密码\n     *\n     * @param password 密码\n     * @return 加密字符串\n     */\n    public static String encryptPassword(String password) {\n\n        return \"{bcrypt}\" + new BCryptPasswordEncoder().encode(password);\n    }\n    /**\n     * 判断密码是否相同\n     *\n     * @param rawPassword     真实密码\n     * @param encodedPassword 加密后字符\n     * @return 结果\n     */\n    public static boolean matchesPassword(String rawPassword, String encodedPassword) {\n        BCryptPasswordEncoder passwordEncoder = new BCryptPasswordEncoder();\n        return passwordEncoder.matches(rawPassword, encodedPassword);\n    }\n    /**\n     * 是否为超级管理员\n     *\n     * @param userId 用户ID\n     * @return 结果\n     */\n    public static boolean isAdmin(Long userId) {\n        return userId != null && 1L == userId;\n    }\n}\n```\n\n## 用户注册\n\n用户注册对用户填写的密码使用**SecurityUtils.encryptPassword()**进行加密处理即可\n\n## 用户登陆流程\n\n1、登陆后台处理调用**authenticationManager.authenticate(new UsernamePasswordAuthenticationToken(username, password))**，该方法会去调用**UserDetailsServiceImpl.loadUserByUsername()**。  \n\n```Java\n@Override\npublic LoginUser authLogin(UserLoginVo userLoginVo) {\n    String username = userLoginVo.getUsername();\n    String password = userLoginVo.getPassword();\n    // 用户验证\n    Authentication authentication = null;\n    try {\n        // 该方法会去调用UserDetailsServiceImpl.loadUserByUsername\n        authentication = authenticationManager\n                .authenticate(new UsernamePasswordAuthenticationToken(username, password));\n    } catch (Exception e) {\n        throw new BusinessException(500,e.getMessage());\n    }\n    LoginUser loginUser = (LoginUser) authentication.getPrincipal();\n    // recordLoginInfo(loginUser.getUserId());\n    // 生成 token\n    String token = JwtTokenUtil.getRefreshToken(username, null);\n    // 用户信息\n    loginUser.setToken(tokenHead + token);\n    return loginUser;\n}\n```\n\n2、自定义验证类UserDetailsService 实现Security框架UserDetailsService的接口。\n\n```Java\n@Service\npublic class UserDetailsServiceImpl implements UserDetailsService {\nprivate static final Logger log = LoggerFactory.getLogger(UserDetailsServiceImpl.class);\n\n@Autowired\nprivate SysUserService userService;\n\n/* @Autowired\nprivate SysPermissionService permissionService;*/\n\n@Override\npublic UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {\n    SysUser user = userService.getUserByUsername(username);\n    if (user == null) {\n        log.info(\"登录用户：{} 不存在.\", username);\n        throw new BusinessException(\"登录用户：\" + username + \" 不存在\");\n    } else if (UserStatus.DELETED.getCode() == user.getDelFlag()) {\n        log.info(\"登录用户：{} 已被删除.\", username);\n        throw new BusinessException(\"对不起，您的账号：\" + username + \" 已被删除\");\n    } else if (UserStatus.DISABLE.getCode() == user.getUserState()) {\n        log.info(\"登录用户：{} 已被停用.\", username);\n        throw new BusinessException(\"对不起，您的账号：\" + username + \" 已停用\");\n    }\n    return createLoginUser(user);\n}\n\npublic UserDetails createLoginUser(SysUser user) {\n    return new LoginUser(user.getUserId(), user.getOrganId(), user);\n}\n}\n```\n\n3、我们自定义验证类UserDetailsService实现类中，需要实现的**loadUserByUsername**方法回返回一个**UserDetails**接口类，包含非安全相关的信息（如用户昵称，电话号码等），们只存储用户信息，这些信息随后被封装到Authentication对象中。所以我们可以创建其实现类。\n\n```Java\npublic class LoginUser implements UserDetails {\n    private static final long serialVersionUID = 1L;\n\n    /**\n     * 用户ID\n     */\n    private String userId;\n\n    /**\n     * 部门ID\n     */\n    private String deptId;\n\n    /**\n     * 用户唯一标识\n     */\n    private String token;\n\n    /**\n     * 登录时间\n     */\n    private String loginTime;\n\n    /**\n     * 过期时间\n     */\n    private String expireTime;\n\n    /**\n     * 登录IP地址\n     */\n    private String ipaddr;\n\n    /**\n     * 登录地点\n     */\n    private String loginLocation;\n\n    /**\n     * 浏览器类型\n     */\n    private String browser;\n\n    /**\n     * 操作系统\n     */\n    private String os;\n\n    /**\n     * 权限列表\n     */\n    private Set<String> permissions;\n\n    public LoginUser() {\n    }\n\n    public LoginUser(SysUser user, Set<String> permissions) {\n        this.user = user;\n        this.permissions = permissions;\n    }\n\n    public LoginUser(String userId, Long String, SysUser user, Set<String> permissions) {\n        this.userId = userId;\n        this.deptId = deptId;\n        this.user = user;\n        this.permissions = permissions;\n    }\n    public LoginUser(String userId, String deptId, SysUser user) {\n        this.userId = userId;\n        this.deptId = deptId;\n        this.user = user;\n    }\n\n    /**\n     * 用户信息\n     */\n    private SysUser user;\n\n    public String getDeptId() {\n        return deptId;\n    }\n\n    public void setDeptId(String deptId) {\n        this.deptId = deptId;\n    }\n\n    public String getToken() {\n        return token;\n    }\n\n    public void setToken(String token) {\n        this.token = token;\n    }\n\n    @Override\n    public Collection<? extends GrantedAuthority> getAuthorities() {\n        return null;\n    }\n\n    @Override\n    @JsonIgnore\n    public String getPassword() {\n        return user.getPassword();\n    }\n\n    @Override\n    public String getUsername() {\n        return user.getUsername();\n    }\n    /**\n     * 用户是否过期，没有过期就返回true\n     */\n    @Override\n    @JsonIgnore\n    public boolean isAccountNonExpired() {\n        return true;\n    }\n    /**\n     * 用户是否被锁定，锁定返回true。\n     */\n    @Override\n    @JsonIgnore\n    public boolean isAccountNonLocked() {\n        return true;\n    }\n    /**\n     * 用户凭证是否可用，可用返回true\n     */\n    @Override\n    @JsonIgnore\n    public boolean isCredentialsNonExpired() {\n        return true;\n    }\n    /**\n     * 用户是否启用了，启用了返回true\n     */\n    @Override\n    @JsonIgnore\n    public boolean isEnabled() {\n        return true;\n    }\n}\n```\n\n## 常见错误\n\n- There is no PasswordEncoder mapped for the id “null“ 问题的解决方法  \n  \n  - 错误  \n      登陆报错**There is no PasswordEncoder mapped for the id “null“**\n  \n  - 原因  \n      Spring Security5.x 对所配置的密码必须带上加密方式，如果没有带，就会解析不出来，所以抛错。\n  \n  - 解决 \n      储存密码是添加加密方式， 格式为{xxx}密码。  \n    \n    | 加密方式    | 原来security 4的密码格式 | 现在security 5的密码格式 |\n    | ------- | ----------------- | ----------------- |\n    | bcrypt  | password          | {bcrypt}password  |\n    | ldap    | password          | {ldap}password    |\n    | MD4     | password          | {MD4}password     |\n    | MD5     | password          | {MD5}password     |\n    | noop    | password          | {noop}password    |\n    | pbkdf2  | password          | {pbkdf2}password  |\n    | scrypt  | password          | {scrypt}password  |\n    | SHA-1   | password          | {SHA-1}password   |\n    | SHA-256 | password          | {SHA-256}password |\n    | sha256  | password          | {sha256}password  |\n","source":"_posts/初识Spring-Security（二.md","raw":"---\ntitle: 初识Spring Security（二)\nabbrlink: 48147\ndate: 2022-07-02 21:26:10\ntags: [Java,Spring Security]\ncategories: Java\ndescription: Spring Boot集成Spring Security，用户密码加密存储实现及用户登陆。\n---\n\n对于用户密码出于安全考虑需要加密存储，Spring Security提供了多种加密方式，官方推荐使用BCryptPasswordEncoder加密方式。其实BCryptPasswordEncoder的实现并非为一种加密算法，而是采用SHA-256 +随机盐+密钥对密码进行加密，SHA系列是Hash算法，其过程是不可逆的。用户注册时，使用SHA-256 +随机盐+密钥把用户输入的密码进行Hash处理，将得到的Hash值存入数据库。用户登陆时候采取同样的算法对密码进行Hash处理后于数据库中存储得密码Hash值进行比较。\n\n## SecurityUtils工具类\n\nSpring框架借助ThreadLocal来保存和传递用户登录信息。我们编写一个工具类方便的获取ThreadLocal中的用户信息名，以及用户密码的加密和比较工作\n\n```Java\npublic class SecurityUtils {\n    /**\n     * 用户ID\n     **/\n    public static String getUserId() {\n        try {\n            return getLoginUser().getUserId();\n        } catch (Exception e) {\n            throw new BusinessException(ResultEnum.USER_NOT_EXIST);\n        }\n    }\n    /**\n     * 获取部门ID\n     **/\n    public static String getOrganId() {\n        try {\n            return getLoginUser().getOrganId();\n        } catch (Exception e) {\n            throw new BusinessException(ResultEnum.USER_NOT_ORGAN);\n        }\n    }\n    /**\n     * 获取用户账户\n     **/\n    public static String getUsername() {\n        try {\n            return getLoginUser().getUsername();\n        } catch (Exception e) {\n            throw new BusinessException(ResultEnum.USER_NOT_ACCOUNT);\n        }\n    }\n    /**\n     * 获取用户\n     **/\n    public static SysUser getLoginUser() {\n        try {\n            return (SysUser) getAuthentication().getPrincipal();\n        } catch (Exception e) {\n            throw new BusinessException(ResultEnum.USER_NOT_EXIST);\n        }\n    }\n    /**\n     * 获取Authentication\n     */\n    public static Authentication getAuthentication() {\n        return SecurityContextHolder.getContext().getAuthentication();\n    }\n\n    /**\n     * 生成BCryptPasswordEncoder密码\n     *\n     * @param password 密码\n     * @return 加密字符串\n     */\n    public static String encryptPassword(String password) {\n\n        return \"{bcrypt}\" + new BCryptPasswordEncoder().encode(password);\n    }\n    /**\n     * 判断密码是否相同\n     *\n     * @param rawPassword     真实密码\n     * @param encodedPassword 加密后字符\n     * @return 结果\n     */\n    public static boolean matchesPassword(String rawPassword, String encodedPassword) {\n        BCryptPasswordEncoder passwordEncoder = new BCryptPasswordEncoder();\n        return passwordEncoder.matches(rawPassword, encodedPassword);\n    }\n    /**\n     * 是否为超级管理员\n     *\n     * @param userId 用户ID\n     * @return 结果\n     */\n    public static boolean isAdmin(Long userId) {\n        return userId != null && 1L == userId;\n    }\n}\n```\n\n## 用户注册\n\n用户注册对用户填写的密码使用**SecurityUtils.encryptPassword()**进行加密处理即可\n\n## 用户登陆流程\n\n1、登陆后台处理调用**authenticationManager.authenticate(new UsernamePasswordAuthenticationToken(username, password))**，该方法会去调用**UserDetailsServiceImpl.loadUserByUsername()**。  \n\n```Java\n@Override\npublic LoginUser authLogin(UserLoginVo userLoginVo) {\n    String username = userLoginVo.getUsername();\n    String password = userLoginVo.getPassword();\n    // 用户验证\n    Authentication authentication = null;\n    try {\n        // 该方法会去调用UserDetailsServiceImpl.loadUserByUsername\n        authentication = authenticationManager\n                .authenticate(new UsernamePasswordAuthenticationToken(username, password));\n    } catch (Exception e) {\n        throw new BusinessException(500,e.getMessage());\n    }\n    LoginUser loginUser = (LoginUser) authentication.getPrincipal();\n    // recordLoginInfo(loginUser.getUserId());\n    // 生成 token\n    String token = JwtTokenUtil.getRefreshToken(username, null);\n    // 用户信息\n    loginUser.setToken(tokenHead + token);\n    return loginUser;\n}\n```\n\n2、自定义验证类UserDetailsService 实现Security框架UserDetailsService的接口。\n\n```Java\n@Service\npublic class UserDetailsServiceImpl implements UserDetailsService {\nprivate static final Logger log = LoggerFactory.getLogger(UserDetailsServiceImpl.class);\n\n@Autowired\nprivate SysUserService userService;\n\n/* @Autowired\nprivate SysPermissionService permissionService;*/\n\n@Override\npublic UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {\n    SysUser user = userService.getUserByUsername(username);\n    if (user == null) {\n        log.info(\"登录用户：{} 不存在.\", username);\n        throw new BusinessException(\"登录用户：\" + username + \" 不存在\");\n    } else if (UserStatus.DELETED.getCode() == user.getDelFlag()) {\n        log.info(\"登录用户：{} 已被删除.\", username);\n        throw new BusinessException(\"对不起，您的账号：\" + username + \" 已被删除\");\n    } else if (UserStatus.DISABLE.getCode() == user.getUserState()) {\n        log.info(\"登录用户：{} 已被停用.\", username);\n        throw new BusinessException(\"对不起，您的账号：\" + username + \" 已停用\");\n    }\n    return createLoginUser(user);\n}\n\npublic UserDetails createLoginUser(SysUser user) {\n    return new LoginUser(user.getUserId(), user.getOrganId(), user);\n}\n}\n```\n\n3、我们自定义验证类UserDetailsService实现类中，需要实现的**loadUserByUsername**方法回返回一个**UserDetails**接口类，包含非安全相关的信息（如用户昵称，电话号码等），们只存储用户信息，这些信息随后被封装到Authentication对象中。所以我们可以创建其实现类。\n\n```Java\npublic class LoginUser implements UserDetails {\n    private static final long serialVersionUID = 1L;\n\n    /**\n     * 用户ID\n     */\n    private String userId;\n\n    /**\n     * 部门ID\n     */\n    private String deptId;\n\n    /**\n     * 用户唯一标识\n     */\n    private String token;\n\n    /**\n     * 登录时间\n     */\n    private String loginTime;\n\n    /**\n     * 过期时间\n     */\n    private String expireTime;\n\n    /**\n     * 登录IP地址\n     */\n    private String ipaddr;\n\n    /**\n     * 登录地点\n     */\n    private String loginLocation;\n\n    /**\n     * 浏览器类型\n     */\n    private String browser;\n\n    /**\n     * 操作系统\n     */\n    private String os;\n\n    /**\n     * 权限列表\n     */\n    private Set<String> permissions;\n\n    public LoginUser() {\n    }\n\n    public LoginUser(SysUser user, Set<String> permissions) {\n        this.user = user;\n        this.permissions = permissions;\n    }\n\n    public LoginUser(String userId, Long String, SysUser user, Set<String> permissions) {\n        this.userId = userId;\n        this.deptId = deptId;\n        this.user = user;\n        this.permissions = permissions;\n    }\n    public LoginUser(String userId, String deptId, SysUser user) {\n        this.userId = userId;\n        this.deptId = deptId;\n        this.user = user;\n    }\n\n    /**\n     * 用户信息\n     */\n    private SysUser user;\n\n    public String getDeptId() {\n        return deptId;\n    }\n\n    public void setDeptId(String deptId) {\n        this.deptId = deptId;\n    }\n\n    public String getToken() {\n        return token;\n    }\n\n    public void setToken(String token) {\n        this.token = token;\n    }\n\n    @Override\n    public Collection<? extends GrantedAuthority> getAuthorities() {\n        return null;\n    }\n\n    @Override\n    @JsonIgnore\n    public String getPassword() {\n        return user.getPassword();\n    }\n\n    @Override\n    public String getUsername() {\n        return user.getUsername();\n    }\n    /**\n     * 用户是否过期，没有过期就返回true\n     */\n    @Override\n    @JsonIgnore\n    public boolean isAccountNonExpired() {\n        return true;\n    }\n    /**\n     * 用户是否被锁定，锁定返回true。\n     */\n    @Override\n    @JsonIgnore\n    public boolean isAccountNonLocked() {\n        return true;\n    }\n    /**\n     * 用户凭证是否可用，可用返回true\n     */\n    @Override\n    @JsonIgnore\n    public boolean isCredentialsNonExpired() {\n        return true;\n    }\n    /**\n     * 用户是否启用了，启用了返回true\n     */\n    @Override\n    @JsonIgnore\n    public boolean isEnabled() {\n        return true;\n    }\n}\n```\n\n## 常见错误\n\n- There is no PasswordEncoder mapped for the id “null“ 问题的解决方法  \n  \n  - 错误  \n      登陆报错**There is no PasswordEncoder mapped for the id “null“**\n  \n  - 原因  \n      Spring Security5.x 对所配置的密码必须带上加密方式，如果没有带，就会解析不出来，所以抛错。\n  \n  - 解决 \n      储存密码是添加加密方式， 格式为{xxx}密码。  \n    \n    | 加密方式    | 原来security 4的密码格式 | 现在security 5的密码格式 |\n    | ------- | ----------------- | ----------------- |\n    | bcrypt  | password          | {bcrypt}password  |\n    | ldap    | password          | {ldap}password    |\n    | MD4     | password          | {MD4}password     |\n    | MD5     | password          | {MD5}password     |\n    | noop    | password          | {noop}password    |\n    | pbkdf2  | password          | {pbkdf2}password  |\n    | scrypt  | password          | {scrypt}password  |\n    | SHA-1   | password          | {SHA-1}password   |\n    | SHA-256 | password          | {SHA-256}password |\n    | sha256  | password          | {sha256}password  |\n","slug":"初识Spring-Security（二","published":1,"updated":"2023-03-09T15:13:40.042Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhiicn3j000dnypj9iqs5342","content":"<p>对于用户密码出于安全考虑需要加密存储，Spring Security提供了多种加密方式，官方推荐使用BCryptPasswordEncoder加密方式。其实BCryptPasswordEncoder的实现并非为一种加密算法，而是采用SHA-256 +随机盐+密钥对密码进行加密，SHA系列是Hash算法，其过程是不可逆的。用户注册时，使用SHA-256 +随机盐+密钥把用户输入的密码进行Hash处理，将得到的Hash值存入数据库。用户登陆时候采取同样的算法对密码进行Hash处理后于数据库中存储得密码Hash值进行比较。</p>\n<h2 id=\"SecurityUtils工具类\"><a href=\"#SecurityUtils工具类\" class=\"headerlink\" title=\"SecurityUtils工具类\"></a>SecurityUtils工具类</h2><p>Spring框架借助ThreadLocal来保存和传递用户登录信息。我们编写一个工具类方便的获取ThreadLocal中的用户信息名，以及用户密码的加密和比较工作</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SecurityUtils</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 用户ID</span></span><br><span class=\"line\"><span class=\"comment\">     **/</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title\">getUserId</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> getLoginUser().getUserId();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(ResultEnum.USER_NOT_EXIST);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 获取部门ID</span></span><br><span class=\"line\"><span class=\"comment\">     **/</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title\">getOrganId</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> getLoginUser().getOrganId();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(ResultEnum.USER_NOT_ORGAN);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 获取用户账户</span></span><br><span class=\"line\"><span class=\"comment\">     **/</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title\">getUsername</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> getLoginUser().getUsername();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(ResultEnum.USER_NOT_ACCOUNT);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 获取用户</span></span><br><span class=\"line\"><span class=\"comment\">     **/</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> SysUser <span class=\"title\">getLoginUser</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> (SysUser) getAuthentication().getPrincipal();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(ResultEnum.USER_NOT_EXIST);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 获取Authentication</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Authentication <span class=\"title\">getAuthentication</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> SecurityContextHolder.getContext().getAuthentication();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 生成BCryptPasswordEncoder密码</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> password 密码</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> 加密字符串</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title\">encryptPassword</span><span class=\"params\">(String password)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;&#123;bcrypt&#125;&quot;</span> + <span class=\"keyword\">new</span> BCryptPasswordEncoder().encode(password);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 判断密码是否相同</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> rawPassword     真实密码</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> encodedPassword 加密后字符</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> 结果</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">boolean</span> <span class=\"title\">matchesPassword</span><span class=\"params\">(String rawPassword, String encodedPassword)</span> </span>&#123;</span><br><span class=\"line\">        BCryptPasswordEncoder passwordEncoder = <span class=\"keyword\">new</span> BCryptPasswordEncoder();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> passwordEncoder.matches(rawPassword, encodedPassword);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 是否为超级管理员</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> userId 用户ID</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> 结果</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isAdmin</span><span class=\"params\">(Long userId)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> userId != <span class=\"keyword\">null</span> &amp;&amp; <span class=\"number\">1L</span> == userId;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"用户注册\"><a href=\"#用户注册\" class=\"headerlink\" title=\"用户注册\"></a>用户注册</h2><p>用户注册对用户填写的密码使用**SecurityUtils.encryptPassword()**进行加密处理即可</p>\n<h2 id=\"用户登陆流程\"><a href=\"#用户登陆流程\" class=\"headerlink\" title=\"用户登陆流程\"></a>用户登陆流程</h2><p>1、登陆后台处理调用**authenticationManager.authenticate(new UsernamePasswordAuthenticationToken(username, password))<strong>，该方法会去调用</strong>UserDetailsServiceImpl.loadUserByUsername()**。  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> LoginUser <span class=\"title\">authLogin</span><span class=\"params\">(UserLoginVo userLoginVo)</span> </span>&#123;</span><br><span class=\"line\">    String username = userLoginVo.getUsername();</span><br><span class=\"line\">    String password = userLoginVo.getPassword();</span><br><span class=\"line\">    <span class=\"comment\">// 用户验证</span></span><br><span class=\"line\">    Authentication authentication = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 该方法会去调用UserDetailsServiceImpl.loadUserByUsername</span></span><br><span class=\"line\">        authentication = authenticationManager</span><br><span class=\"line\">                .authenticate(<span class=\"keyword\">new</span> UsernamePasswordAuthenticationToken(username, password));</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"number\">500</span>,e.getMessage());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    LoginUser loginUser = (LoginUser) authentication.getPrincipal();</span><br><span class=\"line\">    <span class=\"comment\">// recordLoginInfo(loginUser.getUserId());</span></span><br><span class=\"line\">    <span class=\"comment\">// 生成 token</span></span><br><span class=\"line\">    String token = JwtTokenUtil.getRefreshToken(username, <span class=\"keyword\">null</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 用户信息</span></span><br><span class=\"line\">    loginUser.setToken(tokenHead + token);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> loginUser;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>2、自定义验证类UserDetailsService 实现Security框架UserDetailsService的接口。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Service</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UserDetailsServiceImpl</span> <span class=\"keyword\">implements</span> <span class=\"title\">UserDetailsService</span> </span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> Logger log = LoggerFactory.getLogger(UserDetailsServiceImpl.class);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Autowired</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> SysUserService userService;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* @Autowired</span></span><br><span class=\"line\"><span class=\"comment\">private SysPermissionService permissionService;*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> UserDetails <span class=\"title\">loadUserByUsername</span><span class=\"params\">(String username)</span> <span class=\"keyword\">throws</span> UsernameNotFoundException </span>&#123;</span><br><span class=\"line\">    SysUser user = userService.getUserByUsername(username);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (user == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;登录用户：&#123;&#125; 不存在.&quot;</span>, username);</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;登录用户：&quot;</span> + username + <span class=\"string\">&quot; 不存在&quot;</span>);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (UserStatus.DELETED.getCode() == user.getDelFlag()) &#123;</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;登录用户：&#123;&#125; 已被删除.&quot;</span>, username);</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;对不起，您的账号：&quot;</span> + username + <span class=\"string\">&quot; 已被删除&quot;</span>);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (UserStatus.DISABLE.getCode() == user.getUserState()) &#123;</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;登录用户：&#123;&#125; 已被停用.&quot;</span>, username);</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;对不起，您的账号：&quot;</span> + username + <span class=\"string\">&quot; 已停用&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> createLoginUser(user);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> UserDetails <span class=\"title\">createLoginUser</span><span class=\"params\">(SysUser user)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> LoginUser(user.getUserId(), user.getOrganId(), user);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>3、我们自定义验证类UserDetailsService实现类中，需要实现的<strong>loadUserByUsername</strong>方法回返回一个<strong>UserDetails</strong>接口类，包含非安全相关的信息（如用户昵称，电话号码等），们只存储用户信息，这些信息随后被封装到Authentication对象中。所以我们可以创建其实现类。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">LoginUser</span> <span class=\"keyword\">implements</span> <span class=\"title\">UserDetails</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">long</span> serialVersionUID = <span class=\"number\">1L</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 用户ID</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String userId;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 部门ID</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String deptId;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 用户唯一标识</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String token;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 登录时间</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String loginTime;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 过期时间</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String expireTime;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 登录IP地址</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String ipaddr;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 登录地点</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String loginLocation;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 浏览器类型</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String browser;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 操作系统</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String os;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 权限列表</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Set&lt;String&gt; permissions;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">LoginUser</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">LoginUser</span><span class=\"params\">(SysUser user, Set&lt;String&gt; permissions)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.user = user;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.permissions = permissions;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">LoginUser</span><span class=\"params\">(String userId, Long String, SysUser user, Set&lt;String&gt; permissions)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.userId = userId;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.deptId = deptId;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.user = user;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.permissions = permissions;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">LoginUser</span><span class=\"params\">(String userId, String deptId, SysUser user)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.userId = userId;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.deptId = deptId;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.user = user;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 用户信息</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> SysUser user;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getDeptId</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> deptId;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setDeptId</span><span class=\"params\">(String deptId)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.deptId = deptId;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getToken</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> token;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setToken</span><span class=\"params\">(String token)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.token = token;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Collection&lt;? extends GrantedAuthority&gt; getAuthorities() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"meta\">@JsonIgnore</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getPassword</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> user.getPassword();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getUsername</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> user.getUsername();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 用户是否过期，没有过期就返回true</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"meta\">@JsonIgnore</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isAccountNonExpired</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 用户是否被锁定，锁定返回true。</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"meta\">@JsonIgnore</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isAccountNonLocked</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 用户凭证是否可用，可用返回true</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"meta\">@JsonIgnore</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isCredentialsNonExpired</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 用户是否启用了，启用了返回true</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"meta\">@JsonIgnore</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isEnabled</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"常见错误\"><a href=\"#常见错误\" class=\"headerlink\" title=\"常见错误\"></a>常见错误</h2><ul>\n<li>There is no PasswordEncoder mapped for the id “null“ 问题的解决方法  <ul>\n<li><p>错误<br>  登陆报错<strong>There is no PasswordEncoder mapped for the id “null“</strong></p>\n</li>\n<li><p>原因<br>  Spring Security5.x 对所配置的密码必须带上加密方式，如果没有带，就会解析不出来，所以抛错。</p>\n</li>\n<li><p>解决<br>  储存密码是添加加密方式， 格式为{xxx}密码。  </p>\n<table>\n<thead>\n<tr>\n<th>加密方式</th>\n<th>原来security 4的密码格式</th>\n<th>现在security 5的密码格式</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>bcrypt</td>\n<td>password</td>\n<td>{bcrypt}password</td>\n</tr>\n<tr>\n<td>ldap</td>\n<td>password</td>\n<td>{ldap}password</td>\n</tr>\n<tr>\n<td>MD4</td>\n<td>password</td>\n<td>{MD4}password</td>\n</tr>\n<tr>\n<td>MD5</td>\n<td>password</td>\n<td>{MD5}password</td>\n</tr>\n<tr>\n<td>noop</td>\n<td>password</td>\n<td>{noop}password</td>\n</tr>\n<tr>\n<td>pbkdf2</td>\n<td>password</td>\n<td>{pbkdf2}password</td>\n</tr>\n<tr>\n<td>scrypt</td>\n<td>password</td>\n<td>{scrypt}password</td>\n</tr>\n<tr>\n<td>SHA-1</td>\n<td>password</td>\n<td>{SHA-1}password</td>\n</tr>\n<tr>\n<td>SHA-256</td>\n<td>password</td>\n<td>{SHA-256}password</td>\n</tr>\n<tr>\n<td>sha256</td>\n<td>password</td>\n<td>{sha256}password</td>\n</tr>\n</tbody></table>\n</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{"styles":"/* build time:Thu May 11 2023 10:25:59 GMT+0800 (中国标准时间)*/\n.sidebar{box-shadow:none;background:0 0}body{background:url(/images/yourbackground.png);background-repeat:no-repeat;background-attachment:fixed;background-size:cover;background-position:50% 50%}.back-to-top.back-to-top-on{display:none}\n/* rebuild by neat */","variables":"/* build time:Thu May 11 2023 10:25:59 GMT+0800 (中国标准时间)*/\n\n/* rebuild by neat */"}},"length":6923,"excerpt":"","more":"<p>对于用户密码出于安全考虑需要加密存储，Spring Security提供了多种加密方式，官方推荐使用BCryptPasswordEncoder加密方式。其实BCryptPasswordEncoder的实现并非为一种加密算法，而是采用SHA-256 +随机盐+密钥对密码进行加密，SHA系列是Hash算法，其过程是不可逆的。用户注册时，使用SHA-256 +随机盐+密钥把用户输入的密码进行Hash处理，将得到的Hash值存入数据库。用户登陆时候采取同样的算法对密码进行Hash处理后于数据库中存储得密码Hash值进行比较。</p>\n<h2 id=\"SecurityUtils工具类\"><a href=\"#SecurityUtils工具类\" class=\"headerlink\" title=\"SecurityUtils工具类\"></a>SecurityUtils工具类</h2><p>Spring框架借助ThreadLocal来保存和传递用户登录信息。我们编写一个工具类方便的获取ThreadLocal中的用户信息名，以及用户密码的加密和比较工作</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SecurityUtils</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 用户ID</span></span><br><span class=\"line\"><span class=\"comment\">     **/</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title\">getUserId</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> getLoginUser().getUserId();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(ResultEnum.USER_NOT_EXIST);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 获取部门ID</span></span><br><span class=\"line\"><span class=\"comment\">     **/</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title\">getOrganId</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> getLoginUser().getOrganId();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(ResultEnum.USER_NOT_ORGAN);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 获取用户账户</span></span><br><span class=\"line\"><span class=\"comment\">     **/</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title\">getUsername</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> getLoginUser().getUsername();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(ResultEnum.USER_NOT_ACCOUNT);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 获取用户</span></span><br><span class=\"line\"><span class=\"comment\">     **/</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> SysUser <span class=\"title\">getLoginUser</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> (SysUser) getAuthentication().getPrincipal();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(ResultEnum.USER_NOT_EXIST);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 获取Authentication</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Authentication <span class=\"title\">getAuthentication</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> SecurityContextHolder.getContext().getAuthentication();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 生成BCryptPasswordEncoder密码</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> password 密码</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> 加密字符串</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title\">encryptPassword</span><span class=\"params\">(String password)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;&#123;bcrypt&#125;&quot;</span> + <span class=\"keyword\">new</span> BCryptPasswordEncoder().encode(password);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 判断密码是否相同</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> rawPassword     真实密码</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> encodedPassword 加密后字符</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> 结果</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">boolean</span> <span class=\"title\">matchesPassword</span><span class=\"params\">(String rawPassword, String encodedPassword)</span> </span>&#123;</span><br><span class=\"line\">        BCryptPasswordEncoder passwordEncoder = <span class=\"keyword\">new</span> BCryptPasswordEncoder();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> passwordEncoder.matches(rawPassword, encodedPassword);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 是否为超级管理员</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> userId 用户ID</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> 结果</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isAdmin</span><span class=\"params\">(Long userId)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> userId != <span class=\"keyword\">null</span> &amp;&amp; <span class=\"number\">1L</span> == userId;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"用户注册\"><a href=\"#用户注册\" class=\"headerlink\" title=\"用户注册\"></a>用户注册</h2><p>用户注册对用户填写的密码使用**SecurityUtils.encryptPassword()**进行加密处理即可</p>\n<h2 id=\"用户登陆流程\"><a href=\"#用户登陆流程\" class=\"headerlink\" title=\"用户登陆流程\"></a>用户登陆流程</h2><p>1、登陆后台处理调用**authenticationManager.authenticate(new UsernamePasswordAuthenticationToken(username, password))<strong>，该方法会去调用</strong>UserDetailsServiceImpl.loadUserByUsername()**。  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> LoginUser <span class=\"title\">authLogin</span><span class=\"params\">(UserLoginVo userLoginVo)</span> </span>&#123;</span><br><span class=\"line\">    String username = userLoginVo.getUsername();</span><br><span class=\"line\">    String password = userLoginVo.getPassword();</span><br><span class=\"line\">    <span class=\"comment\">// 用户验证</span></span><br><span class=\"line\">    Authentication authentication = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 该方法会去调用UserDetailsServiceImpl.loadUserByUsername</span></span><br><span class=\"line\">        authentication = authenticationManager</span><br><span class=\"line\">                .authenticate(<span class=\"keyword\">new</span> UsernamePasswordAuthenticationToken(username, password));</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"number\">500</span>,e.getMessage());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    LoginUser loginUser = (LoginUser) authentication.getPrincipal();</span><br><span class=\"line\">    <span class=\"comment\">// recordLoginInfo(loginUser.getUserId());</span></span><br><span class=\"line\">    <span class=\"comment\">// 生成 token</span></span><br><span class=\"line\">    String token = JwtTokenUtil.getRefreshToken(username, <span class=\"keyword\">null</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 用户信息</span></span><br><span class=\"line\">    loginUser.setToken(tokenHead + token);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> loginUser;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>2、自定义验证类UserDetailsService 实现Security框架UserDetailsService的接口。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Service</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UserDetailsServiceImpl</span> <span class=\"keyword\">implements</span> <span class=\"title\">UserDetailsService</span> </span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> Logger log = LoggerFactory.getLogger(UserDetailsServiceImpl.class);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Autowired</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> SysUserService userService;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* @Autowired</span></span><br><span class=\"line\"><span class=\"comment\">private SysPermissionService permissionService;*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> UserDetails <span class=\"title\">loadUserByUsername</span><span class=\"params\">(String username)</span> <span class=\"keyword\">throws</span> UsernameNotFoundException </span>&#123;</span><br><span class=\"line\">    SysUser user = userService.getUserByUsername(username);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (user == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;登录用户：&#123;&#125; 不存在.&quot;</span>, username);</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;登录用户：&quot;</span> + username + <span class=\"string\">&quot; 不存在&quot;</span>);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (UserStatus.DELETED.getCode() == user.getDelFlag()) &#123;</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;登录用户：&#123;&#125; 已被删除.&quot;</span>, username);</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;对不起，您的账号：&quot;</span> + username + <span class=\"string\">&quot; 已被删除&quot;</span>);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (UserStatus.DISABLE.getCode() == user.getUserState()) &#123;</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;登录用户：&#123;&#125; 已被停用.&quot;</span>, username);</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BusinessException(<span class=\"string\">&quot;对不起，您的账号：&quot;</span> + username + <span class=\"string\">&quot; 已停用&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> createLoginUser(user);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> UserDetails <span class=\"title\">createLoginUser</span><span class=\"params\">(SysUser user)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> LoginUser(user.getUserId(), user.getOrganId(), user);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>3、我们自定义验证类UserDetailsService实现类中，需要实现的<strong>loadUserByUsername</strong>方法回返回一个<strong>UserDetails</strong>接口类，包含非安全相关的信息（如用户昵称，电话号码等），们只存储用户信息，这些信息随后被封装到Authentication对象中。所以我们可以创建其实现类。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">LoginUser</span> <span class=\"keyword\">implements</span> <span class=\"title\">UserDetails</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">long</span> serialVersionUID = <span class=\"number\">1L</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 用户ID</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String userId;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 部门ID</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String deptId;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 用户唯一标识</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String token;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 登录时间</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String loginTime;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 过期时间</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String expireTime;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 登录IP地址</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String ipaddr;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 登录地点</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String loginLocation;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 浏览器类型</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String browser;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 操作系统</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String os;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 权限列表</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Set&lt;String&gt; permissions;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">LoginUser</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">LoginUser</span><span class=\"params\">(SysUser user, Set&lt;String&gt; permissions)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.user = user;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.permissions = permissions;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">LoginUser</span><span class=\"params\">(String userId, Long String, SysUser user, Set&lt;String&gt; permissions)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.userId = userId;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.deptId = deptId;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.user = user;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.permissions = permissions;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">LoginUser</span><span class=\"params\">(String userId, String deptId, SysUser user)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.userId = userId;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.deptId = deptId;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.user = user;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 用户信息</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> SysUser user;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getDeptId</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> deptId;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setDeptId</span><span class=\"params\">(String deptId)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.deptId = deptId;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getToken</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> token;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setToken</span><span class=\"params\">(String token)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.token = token;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Collection&lt;? extends GrantedAuthority&gt; getAuthorities() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"meta\">@JsonIgnore</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getPassword</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> user.getPassword();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getUsername</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> user.getUsername();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 用户是否过期，没有过期就返回true</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"meta\">@JsonIgnore</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isAccountNonExpired</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 用户是否被锁定，锁定返回true。</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"meta\">@JsonIgnore</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isAccountNonLocked</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 用户凭证是否可用，可用返回true</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"meta\">@JsonIgnore</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isCredentialsNonExpired</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 用户是否启用了，启用了返回true</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"meta\">@JsonIgnore</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isEnabled</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"常见错误\"><a href=\"#常见错误\" class=\"headerlink\" title=\"常见错误\"></a>常见错误</h2><ul>\n<li>There is no PasswordEncoder mapped for the id “null“ 问题的解决方法  <ul>\n<li><p>错误<br>  登陆报错<strong>There is no PasswordEncoder mapped for the id “null“</strong></p>\n</li>\n<li><p>原因<br>  Spring Security5.x 对所配置的密码必须带上加密方式，如果没有带，就会解析不出来，所以抛错。</p>\n</li>\n<li><p>解决<br>  储存密码是添加加密方式， 格式为{xxx}密码。  </p>\n<table>\n<thead>\n<tr>\n<th>加密方式</th>\n<th>原来security 4的密码格式</th>\n<th>现在security 5的密码格式</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>bcrypt</td>\n<td>password</td>\n<td>{bcrypt}password</td>\n</tr>\n<tr>\n<td>ldap</td>\n<td>password</td>\n<td>{ldap}password</td>\n</tr>\n<tr>\n<td>MD4</td>\n<td>password</td>\n<td>{MD4}password</td>\n</tr>\n<tr>\n<td>MD5</td>\n<td>password</td>\n<td>{MD5}password</td>\n</tr>\n<tr>\n<td>noop</td>\n<td>password</td>\n<td>{noop}password</td>\n</tr>\n<tr>\n<td>pbkdf2</td>\n<td>password</td>\n<td>{pbkdf2}password</td>\n</tr>\n<tr>\n<td>scrypt</td>\n<td>password</td>\n<td>{scrypt}password</td>\n</tr>\n<tr>\n<td>SHA-1</td>\n<td>password</td>\n<td>{SHA-1}password</td>\n</tr>\n<tr>\n<td>SHA-256</td>\n<td>password</td>\n<td>{SHA-256}password</td>\n</tr>\n<tr>\n<td>sha256</td>\n<td>password</td>\n<td>{sha256}password</td>\n</tr>\n</tbody></table>\n</li>\n</ul>\n</li>\n</ul>\n"},{"title":"图片旋转","description":"原始图片比例不同情况下图片横行展示，旋转保持原始比例","abbrlink":58969,"date":"2023-03-27T08:30:23.000Z","_content":"\n## 图片加载判断\n\n```javascript\naddImg = function (url) {\n        let img = new Image();\n        img.src = url;\n        let imgDivDom = $(\"#imgDiv\");\n        let height = imgDivDom.outerHeight(true)\n        let width = imgDivDom.outerWidth(true)\n        // 如果图片被缓存，则直接返回缓存数据\n        if (img.complete) {\n            imgDivDom.html('')\n            imgDivDom.append(img)\n            if (img.width > img.height) {\n                imgDivDom.children('img').css({\n                    \"margin\": \"0 auto\",\n                    \"height\": height + \"px\",\n                    \"width\": width + \"px\",\n                    \"object-fit\": \"contain\"\n                })\n            } else {\n                imgDivDom.children('img').css({\n                    \"display\": \"block\",\n                    \"margin\": \"0 auto\",\n                    \"height\": width + \"px\",\n                    \"width\": height + \"px\",\n                    \"object-fit\": \"contain\",\n                    \"transform\": \"rotate(90deg)\"\n                })\n            }\n\n        } else {\n            // 完全加载完毕的事件\n            img.onload = function () {\n                imgDivDom.html('')\n                imgDivDom.append(img)\n                if (img.width > img.height) {\n                    imgDivDom.children('img').css({\n                        \"margin\": \"0 auto\",\n                        \"height\": height + \"px\",\n                        \"width\": width + \"px\",\n                        \"object-fit\": \"contain\"\n                    })\n                } else {\n                    imgDivDom.children('img').css({\n                        \"display\": \"block\",\n                        \"margin\": \"0 auto\",\n                        \"height\": width + \"px\",\n                        \"width\": height + \"px\",\n                        \"object-fit\": \"contain\",\n                        \"transform\": \"rotate(90deg)\"\n                    })\n                }\n            }\n        }\n        img.onerror = function (){\n            imgDivDom.html('<div class=\"noImg\">暂无图片</div>')\n        }\n    }\n```\n\n父级元素样式\n\n```css\n    display: flex;\n    align-items: center;\n```\n","source":"_posts/图片旋转.md","raw":"---\ntitle: 图片旋转\ntags:\n  - css\n  - 滚动条\ncategories: 前端\ndescription: 原始图片比例不同情况下图片横行展示，旋转保持原始比例\nabbrlink: 58969\ndate: 2023-03-27 16:30:23\n---\n\n## 图片加载判断\n\n```javascript\naddImg = function (url) {\n        let img = new Image();\n        img.src = url;\n        let imgDivDom = $(\"#imgDiv\");\n        let height = imgDivDom.outerHeight(true)\n        let width = imgDivDom.outerWidth(true)\n        // 如果图片被缓存，则直接返回缓存数据\n        if (img.complete) {\n            imgDivDom.html('')\n            imgDivDom.append(img)\n            if (img.width > img.height) {\n                imgDivDom.children('img').css({\n                    \"margin\": \"0 auto\",\n                    \"height\": height + \"px\",\n                    \"width\": width + \"px\",\n                    \"object-fit\": \"contain\"\n                })\n            } else {\n                imgDivDom.children('img').css({\n                    \"display\": \"block\",\n                    \"margin\": \"0 auto\",\n                    \"height\": width + \"px\",\n                    \"width\": height + \"px\",\n                    \"object-fit\": \"contain\",\n                    \"transform\": \"rotate(90deg)\"\n                })\n            }\n\n        } else {\n            // 完全加载完毕的事件\n            img.onload = function () {\n                imgDivDom.html('')\n                imgDivDom.append(img)\n                if (img.width > img.height) {\n                    imgDivDom.children('img').css({\n                        \"margin\": \"0 auto\",\n                        \"height\": height + \"px\",\n                        \"width\": width + \"px\",\n                        \"object-fit\": \"contain\"\n                    })\n                } else {\n                    imgDivDom.children('img').css({\n                        \"display\": \"block\",\n                        \"margin\": \"0 auto\",\n                        \"height\": width + \"px\",\n                        \"width\": height + \"px\",\n                        \"object-fit\": \"contain\",\n                        \"transform\": \"rotate(90deg)\"\n                    })\n                }\n            }\n        }\n        img.onerror = function (){\n            imgDivDom.html('<div class=\"noImg\">暂无图片</div>')\n        }\n    }\n```\n\n父级元素样式\n\n```css\n    display: flex;\n    align-items: center;\n```\n","slug":"图片旋转","published":1,"updated":"2023-05-11T02:26:00.213Z","_id":"clhiicn3k000enypjcf5zatol","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"图片加载判断\"><a href=\"#图片加载判断\" class=\"headerlink\" title=\"图片加载判断\"></a>图片加载判断</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">addImg = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">url</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> img = <span class=\"keyword\">new</span> Image();</span><br><span class=\"line\">        img.src = url;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> imgDivDom = $(<span class=\"string\">&quot;#imgDiv&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">let</span> height = imgDivDom.outerHeight(<span class=\"literal\">true</span>)</span><br><span class=\"line\">        <span class=\"keyword\">let</span> width = imgDivDom.outerWidth(<span class=\"literal\">true</span>)</span><br><span class=\"line\">        <span class=\"comment\">// 如果图片被缓存，则直接返回缓存数据</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (img.complete) &#123;</span><br><span class=\"line\">            imgDivDom.html(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">            imgDivDom.append(img)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (img.width &gt; img.height) &#123;</span><br><span class=\"line\">                imgDivDom.children(<span class=\"string\">&#x27;img&#x27;</span>).css(&#123;</span><br><span class=\"line\">                    <span class=\"string\">&quot;margin&quot;</span>: <span class=\"string\">&quot;0 auto&quot;</span>,</span><br><span class=\"line\">                    <span class=\"string\">&quot;height&quot;</span>: height + <span class=\"string\">&quot;px&quot;</span>,</span><br><span class=\"line\">                    <span class=\"string\">&quot;width&quot;</span>: width + <span class=\"string\">&quot;px&quot;</span>,</span><br><span class=\"line\">                    <span class=\"string\">&quot;object-fit&quot;</span>: <span class=\"string\">&quot;contain&quot;</span></span><br><span class=\"line\">                &#125;)</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                imgDivDom.children(<span class=\"string\">&#x27;img&#x27;</span>).css(&#123;</span><br><span class=\"line\">                    <span class=\"string\">&quot;display&quot;</span>: <span class=\"string\">&quot;block&quot;</span>,</span><br><span class=\"line\">                    <span class=\"string\">&quot;margin&quot;</span>: <span class=\"string\">&quot;0 auto&quot;</span>,</span><br><span class=\"line\">                    <span class=\"string\">&quot;height&quot;</span>: width + <span class=\"string\">&quot;px&quot;</span>,</span><br><span class=\"line\">                    <span class=\"string\">&quot;width&quot;</span>: height + <span class=\"string\">&quot;px&quot;</span>,</span><br><span class=\"line\">                    <span class=\"string\">&quot;object-fit&quot;</span>: <span class=\"string\">&quot;contain&quot;</span>,</span><br><span class=\"line\">                    <span class=\"string\">&quot;transform&quot;</span>: <span class=\"string\">&quot;rotate(90deg)&quot;</span></span><br><span class=\"line\">                &#125;)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 完全加载完毕的事件</span></span><br><span class=\"line\">            img.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">                imgDivDom.html(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">                imgDivDom.append(img)</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (img.width &gt; img.height) &#123;</span><br><span class=\"line\">                    imgDivDom.children(<span class=\"string\">&#x27;img&#x27;</span>).css(&#123;</span><br><span class=\"line\">                        <span class=\"string\">&quot;margin&quot;</span>: <span class=\"string\">&quot;0 auto&quot;</span>,</span><br><span class=\"line\">                        <span class=\"string\">&quot;height&quot;</span>: height + <span class=\"string\">&quot;px&quot;</span>,</span><br><span class=\"line\">                        <span class=\"string\">&quot;width&quot;</span>: width + <span class=\"string\">&quot;px&quot;</span>,</span><br><span class=\"line\">                        <span class=\"string\">&quot;object-fit&quot;</span>: <span class=\"string\">&quot;contain&quot;</span></span><br><span class=\"line\">                    &#125;)</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    imgDivDom.children(<span class=\"string\">&#x27;img&#x27;</span>).css(&#123;</span><br><span class=\"line\">                        <span class=\"string\">&quot;display&quot;</span>: <span class=\"string\">&quot;block&quot;</span>,</span><br><span class=\"line\">                        <span class=\"string\">&quot;margin&quot;</span>: <span class=\"string\">&quot;0 auto&quot;</span>,</span><br><span class=\"line\">                        <span class=\"string\">&quot;height&quot;</span>: width + <span class=\"string\">&quot;px&quot;</span>,</span><br><span class=\"line\">                        <span class=\"string\">&quot;width&quot;</span>: height + <span class=\"string\">&quot;px&quot;</span>,</span><br><span class=\"line\">                        <span class=\"string\">&quot;object-fit&quot;</span>: <span class=\"string\">&quot;contain&quot;</span>,</span><br><span class=\"line\">                        <span class=\"string\">&quot;transform&quot;</span>: <span class=\"string\">&quot;rotate(90deg)&quot;</span></span><br><span class=\"line\">                    &#125;)</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        img.onerror = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">            imgDivDom.html(<span class=\"string\">&#x27;&lt;div class=&quot;noImg&quot;&gt;暂无图片&lt;/div&gt;&#x27;</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<p>父级元素样式</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\"><span class=\"attribute\">align-items</span>: center;</span><br></pre></td></tr></table></figure>\n","site":{"data":{"styles":"/* build time:Thu May 11 2023 10:25:59 GMT+0800 (中国标准时间)*/\n.sidebar{box-shadow:none;background:0 0}body{background:url(/images/yourbackground.png);background-repeat:no-repeat;background-attachment:fixed;background-size:cover;background-position:50% 50%}.back-to-top.back-to-top-on{display:none}\n/* rebuild by neat */","variables":"/* build time:Thu May 11 2023 10:25:59 GMT+0800 (中国标准时间)*/\n\n/* rebuild by neat */"}},"length":1766,"excerpt":"","more":"<h2 id=\"图片加载判断\"><a href=\"#图片加载判断\" class=\"headerlink\" title=\"图片加载判断\"></a>图片加载判断</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">addImg = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">url</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> img = <span class=\"keyword\">new</span> Image();</span><br><span class=\"line\">        img.src = url;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> imgDivDom = $(<span class=\"string\">&quot;#imgDiv&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">let</span> height = imgDivDom.outerHeight(<span class=\"literal\">true</span>)</span><br><span class=\"line\">        <span class=\"keyword\">let</span> width = imgDivDom.outerWidth(<span class=\"literal\">true</span>)</span><br><span class=\"line\">        <span class=\"comment\">// 如果图片被缓存，则直接返回缓存数据</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (img.complete) &#123;</span><br><span class=\"line\">            imgDivDom.html(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">            imgDivDom.append(img)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (img.width &gt; img.height) &#123;</span><br><span class=\"line\">                imgDivDom.children(<span class=\"string\">&#x27;img&#x27;</span>).css(&#123;</span><br><span class=\"line\">                    <span class=\"string\">&quot;margin&quot;</span>: <span class=\"string\">&quot;0 auto&quot;</span>,</span><br><span class=\"line\">                    <span class=\"string\">&quot;height&quot;</span>: height + <span class=\"string\">&quot;px&quot;</span>,</span><br><span class=\"line\">                    <span class=\"string\">&quot;width&quot;</span>: width + <span class=\"string\">&quot;px&quot;</span>,</span><br><span class=\"line\">                    <span class=\"string\">&quot;object-fit&quot;</span>: <span class=\"string\">&quot;contain&quot;</span></span><br><span class=\"line\">                &#125;)</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                imgDivDom.children(<span class=\"string\">&#x27;img&#x27;</span>).css(&#123;</span><br><span class=\"line\">                    <span class=\"string\">&quot;display&quot;</span>: <span class=\"string\">&quot;block&quot;</span>,</span><br><span class=\"line\">                    <span class=\"string\">&quot;margin&quot;</span>: <span class=\"string\">&quot;0 auto&quot;</span>,</span><br><span class=\"line\">                    <span class=\"string\">&quot;height&quot;</span>: width + <span class=\"string\">&quot;px&quot;</span>,</span><br><span class=\"line\">                    <span class=\"string\">&quot;width&quot;</span>: height + <span class=\"string\">&quot;px&quot;</span>,</span><br><span class=\"line\">                    <span class=\"string\">&quot;object-fit&quot;</span>: <span class=\"string\">&quot;contain&quot;</span>,</span><br><span class=\"line\">                    <span class=\"string\">&quot;transform&quot;</span>: <span class=\"string\">&quot;rotate(90deg)&quot;</span></span><br><span class=\"line\">                &#125;)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 完全加载完毕的事件</span></span><br><span class=\"line\">            img.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">                imgDivDom.html(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">                imgDivDom.append(img)</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (img.width &gt; img.height) &#123;</span><br><span class=\"line\">                    imgDivDom.children(<span class=\"string\">&#x27;img&#x27;</span>).css(&#123;</span><br><span class=\"line\">                        <span class=\"string\">&quot;margin&quot;</span>: <span class=\"string\">&quot;0 auto&quot;</span>,</span><br><span class=\"line\">                        <span class=\"string\">&quot;height&quot;</span>: height + <span class=\"string\">&quot;px&quot;</span>,</span><br><span class=\"line\">                        <span class=\"string\">&quot;width&quot;</span>: width + <span class=\"string\">&quot;px&quot;</span>,</span><br><span class=\"line\">                        <span class=\"string\">&quot;object-fit&quot;</span>: <span class=\"string\">&quot;contain&quot;</span></span><br><span class=\"line\">                    &#125;)</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    imgDivDom.children(<span class=\"string\">&#x27;img&#x27;</span>).css(&#123;</span><br><span class=\"line\">                        <span class=\"string\">&quot;display&quot;</span>: <span class=\"string\">&quot;block&quot;</span>,</span><br><span class=\"line\">                        <span class=\"string\">&quot;margin&quot;</span>: <span class=\"string\">&quot;0 auto&quot;</span>,</span><br><span class=\"line\">                        <span class=\"string\">&quot;height&quot;</span>: width + <span class=\"string\">&quot;px&quot;</span>,</span><br><span class=\"line\">                        <span class=\"string\">&quot;width&quot;</span>: height + <span class=\"string\">&quot;px&quot;</span>,</span><br><span class=\"line\">                        <span class=\"string\">&quot;object-fit&quot;</span>: <span class=\"string\">&quot;contain&quot;</span>,</span><br><span class=\"line\">                        <span class=\"string\">&quot;transform&quot;</span>: <span class=\"string\">&quot;rotate(90deg)&quot;</span></span><br><span class=\"line\">                    &#125;)</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        img.onerror = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">            imgDivDom.html(<span class=\"string\">&#x27;&lt;div class=&quot;noImg&quot;&gt;暂无图片&lt;/div&gt;&#x27;</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<p>父级元素样式</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\"><span class=\"attribute\">align-items</span>: center;</span><br></pre></td></tr></table></figure>\n"},{"title":"滚动条探索之美化","abbrlink":8599,"date":"2021-05-07T13:28:37.000Z","description":"针对多种浏览器下，滚动条样式的修改。","_content":" \n\n# webkit下css实现样式修改\n\n基于webkit内核的浏览器可通过-webkit-scrollbar***伪元素***实现对滚动条样式的控制。\n\n```css\n::-webkit-scrollbar — 整个滚动条.\n::-webkit-scrollbar-button — 滚动条上的按钮 (上下箭头).\n::-webkit-scrollbar-thumb — 滚动条上的滚动滑块.\n::-webkit-scrollbar-track — 滚动条轨道.\n::-webkit-scrollbar-track-piece — 滚动条没有滑块的轨道部分.\n::-webkit-scrollbar-corner — 当同时有垂直滚动条和水平滚动条时交汇的部分.\n::-webkit-resizer — 两个滚动条的交汇处上用于通过拖动调整元素大小的小控件\n```\n\n## 例子\n\n```css\n    ::-webkit-scrollbar{/*滚动条整体*/\n        width: 45px;\n    }\n    ::-webkit-scrollbar-thumb{/*滚动条里面的小方块*/\n        background: #666666;\n        border-radius: 45px;\n    }\n    ::-webkit-scrollbar-track{/*滚动条轨道的样式*/\n        background: #ccc;\n        border-radius: 5px;\n    }\n    ::-webkit-scrollbar-track-piece{/*滚动条没有滑块的轨道样式*/\n        background: rgb(1, 117, 133);\n        border-radius: 45px;\n    }\n```\n\n![1-1](https://raw.githubusercontent.com/zhjAdm/ImageHosting/main/1-1.png)\n::-webkit-scrollbar 为一切的基础，并且所有的伪元素后面可通过添加:vertical和:horizontal两个***伪类***来是定所调整的为纵向还是横向滚动条。\n\n# IE下css实现样式修改\n\nIE浏览器仅支持修改颜色，无法对滚动条的形状大小进行修改。\n\n```css\n    scrollbar-arrow-color: color; /*三角箭头的颜色*/\n    scrollbar-face-color: color; /*立体滚动条的颜色（包括箭头部分的背景色）*/\n    scrollbar-3dlight-color: color; /*立体滚动条亮边的颜色*/\n    scrollbar-highlight-color: color; /*滚动条的高亮颜色（左阴影？）*/\n    scrollbar-shadow-color: color; /*立体滚动条阴影的颜色*/\n    scrollbar-darkshadow-color: color; /*立体滚动条外阴影的颜色*/\n    scrollbar-track-color: color; /*立体滚动条背景颜色*/\n    scrollbar-base-color:color; /*滚动条的基色*/\n```\n\n# NiceScroll插件实现滚动条美化\n\n### 介绍\n\n基于jQuery实现的滚动条插件，无需额外的css启用只需一行代码，灵活方便可完全自定义滚动条的样式。几乎兼容全部的浏览器，同时支持触摸事件。\n\n### 用法\n\n引入**jQuery**和**nicescroll**\n\n```html\n<div class=\"boxscroll\">\n    <div class=\"contentscroll\"></div>\n</div>\n```\n\n只需下面简单一行代码便可实现滚动条的开启,**nicescroll**不依赖原本浏览器样式。\n\n```js\n    $(\".boxscroll\").niceScroll();\n```\n\n效果如下：\n![](https://raw.githubusercontent.com/zhjAdm/ImageHosting/main/2021-05-18_20-05-41.png)\n\n修改样式也同样的方便，niceScroll()传入想修改的参数即可。\n\n```js\n    $(\".boxscroll\").niceScroll({cursorcolor:\"#F00\",cursoropacitymax:0.7});\n```\n\n![](https://raw.githubusercontent.com/zhjAdm/ImageHosting/main/2021-05-18_21-00-41.png)\n\n### 配置参数\n\n```js\n    cursorcolor: \"#424242\", // 滚动条光标的颜色 change cursor color in hex\n    cursoropacitymin: 0, // 滚动条在不激活状态下的透明度，默认是0 change opacity when cursor is inactive (scrollabar \"hidden\" state), range from 1 to 0\n    cursoropacitymax: 1, //滚动条在激活状态下的透明度，默认是1 change opacity when cursor is active (scrollabar \"visible\" state), range from 1 to 0\n    cursorwidth: \"5px\", // 滚动条宽度 cursor width in pixel (you can also write \"5px\")\n    cursorborder: \"1px solid #fff\", //用css定义滚动条的边框 css definition for cursor border\n    cursorborderradius: \"5px\", //滚动条的圆角半径 border radius in pixel for cursor\n    zindex: \"auto\" | <number>, //改变滚动条div的z-index的值 change z-index for scrollbar div\n    scrollspeed: 60, // 滚动速度\n    mousescrollstep: 40, //使用鼠标轮滚的时候的滚动速度 scrolling speed with mouse wheel (pixel)\n    touchbehavior: false, //在桌面电脑上启用光标拖动，就像触摸设备那样 enable cursor-drag scrolling like touch devices in desktop computer\n    hwacceleration: true, //如果设备支持，则启用硬件加速 use hardware accelerated scroll when supported\n    boxzoom: false, //给盒子的内容启用放大缩小功能 enable zoom for box content\n    dblclickzoom: true, //双击放大，在boxzoom=true的情况下 (only when boxzoom=true) zoom activated when double click on box\n    gesturezoom: true, //手势放大缩小，在boxzoom=true的情况下 (only when boxzoom=true and with touch devices) zoom activated when pinch out/in on box\n    grabcursorenabled: true //这个可以禁用\"grab\"鼠标光标 (only when touchbehavior=true) display \"grab\" icon\n    autohidemode: true, //设置在什么情况下隐藏scrollbar。 how hide the scrollbar works, possible values: \n      true | // 在不滚动情况下隐藏。 hide when no scrolling\n      \"cursor\" | //只隐藏光标 only cursor hidden\n      false | //始终不隐藏 do not hide,\n      \"leave\" | //只在鼠标离开内容区是隐藏 hide only if pointer leaves content\n      \"hidden\" | //使用隐藏 hide always\n      \"scroll\", //只在滚动的情况下显示，在不滚动的时候隐藏 show only on scroll          \n    background: \"\", //设置背景颜色 change css for rail background\n    iframeautoresize: true, //在iframe的load事件中自动设置大小 autoresize iframe on load event\n    cursorminheight: 32, //设置最小的光标高度 set the minimum cursor height (pixel)\n    preservenativescrolling: true, //这个设置通过事件冒泡的方式使你能够滚动原生的滚动条。 you can scroll native scrollable areas with mouse, bubbling mouse wheel event\n    railoffset: false, //设置轨道的上或者左的偏移 you can add offset top/left for rail position\n    bouncescroll: false, //启用向手机上面的那种滚动回弹 (only hw accell) enable scroll bouncing at the end of content as mobile-like \n    spacebarenabled: true, // enable page down scrolling when space bar has pressed\n    railpadding: { top: 0, right: 0, left: 0, bottom: 0 }, //设置轨道的内间距 set padding for rail bar\n    disableoutline: true, //在chrome浏览器上选择一个div使用nicescroll时禁用outline， for chrome browser, disable outline (orange highlight) when selecting a div with nicescroll\n    horizrailenabled: true, //设置是否处理水平滚动 nicescroll can manage horizontal scroll\n    railalign: right, //垂直对齐方式 alignment of vertical rail\n    railvalign: bottom, //水平对齐方式 alignment of horizontal rail\n    enabletranslate3d: true, //设置nicescroll是否使用css translate去滚动内容 nicescroll can use css translate to scroll content\n    enablemousewheel: true, //设置是否响应鼠标滚动事件 nicescroll can manage mouse wheel events\n    enablekeyboard: true, //设置是否响应键盘事件 nicescroll can manage keyboard events\n    smoothscroll: true, //使用平滑滚动 scroll with ease movement\n    sensitiverail: true, //在轨道上点击时是否滚动 click on rail make a scroll\n    enablemouselockapi: true, // can use mouse caption lock API (same issue on object dragging)\n    cursorfixedheight: false, //给光标设置固定的高度 set fixed height for cursor in pixel\n    hidecursordelay: 400, //设置隐藏光标的延迟时间，单位是毫秒 set the delay in microseconds to fading out scrollbars\n    directionlockdeadzone: 6, // dead zone in pixels for direction lock activation\n    nativeparentscrolling: true, //检测内容的底部和父节点是否允许滚动，像原生滚动条的实现方式 detect bottom of content and let parent to scroll, as native scroll does\n    enablescrollonselection: true, //在选择文字的时候自动滚动内容 enable auto-scrolling of content when selection text\n    cursordragspeed: 0.3, //当拖动光标时候的速度 speed of selection when dragged with cursor\n    rtlmode: \"auto\", //设置水平滚动div的起始边是左还是右 horizontal div scrolling starts at left side\n    cursordragontouch: false, //设置在触摸模式下，是否可以拖动光标就可以滚动 drag cursor in touch / touchbehavior mode also\n    oneaxismousemode: \"auto\", //设置鼠标滚轮在只有水平模式的情况下是否可用 it permits horizontal scrolling with mousewheel on horizontal only content, if false (vertical-only) mousewheel don't scroll horizontally, if value is auto detects two-axis mouse\n    scriptpath: \"\" //设置box模式下图标的路径，设成\"\"表示和script是同一个路径 define custom path for boxmode icons (\"\" => same script path)\n    preventmultitouchscrolling: true //防止在多点触摸情况下滚动 prevent scrolling on multitouch events\n    disablemutationobserver: false //稳定滚动条 force MutationObserver disabled\n```","source":"_posts/滚动条探索之美化.md","raw":"---\n\ntitle: 滚动条探索之美化\nabbrlink: 8599\ndate: 2021-05-07 21:28:37\ntags: [css,滚动条]\ncategories: 前端\ndescription: 针对多种浏览器下，滚动条样式的修改。\n\n--- \n\n# webkit下css实现样式修改\n\n基于webkit内核的浏览器可通过-webkit-scrollbar***伪元素***实现对滚动条样式的控制。\n\n```css\n::-webkit-scrollbar — 整个滚动条.\n::-webkit-scrollbar-button — 滚动条上的按钮 (上下箭头).\n::-webkit-scrollbar-thumb — 滚动条上的滚动滑块.\n::-webkit-scrollbar-track — 滚动条轨道.\n::-webkit-scrollbar-track-piece — 滚动条没有滑块的轨道部分.\n::-webkit-scrollbar-corner — 当同时有垂直滚动条和水平滚动条时交汇的部分.\n::-webkit-resizer — 两个滚动条的交汇处上用于通过拖动调整元素大小的小控件\n```\n\n## 例子\n\n```css\n    ::-webkit-scrollbar{/*滚动条整体*/\n        width: 45px;\n    }\n    ::-webkit-scrollbar-thumb{/*滚动条里面的小方块*/\n        background: #666666;\n        border-radius: 45px;\n    }\n    ::-webkit-scrollbar-track{/*滚动条轨道的样式*/\n        background: #ccc;\n        border-radius: 5px;\n    }\n    ::-webkit-scrollbar-track-piece{/*滚动条没有滑块的轨道样式*/\n        background: rgb(1, 117, 133);\n        border-radius: 45px;\n    }\n```\n\n![1-1](https://raw.githubusercontent.com/zhjAdm/ImageHosting/main/1-1.png)\n::-webkit-scrollbar 为一切的基础，并且所有的伪元素后面可通过添加:vertical和:horizontal两个***伪类***来是定所调整的为纵向还是横向滚动条。\n\n# IE下css实现样式修改\n\nIE浏览器仅支持修改颜色，无法对滚动条的形状大小进行修改。\n\n```css\n    scrollbar-arrow-color: color; /*三角箭头的颜色*/\n    scrollbar-face-color: color; /*立体滚动条的颜色（包括箭头部分的背景色）*/\n    scrollbar-3dlight-color: color; /*立体滚动条亮边的颜色*/\n    scrollbar-highlight-color: color; /*滚动条的高亮颜色（左阴影？）*/\n    scrollbar-shadow-color: color; /*立体滚动条阴影的颜色*/\n    scrollbar-darkshadow-color: color; /*立体滚动条外阴影的颜色*/\n    scrollbar-track-color: color; /*立体滚动条背景颜色*/\n    scrollbar-base-color:color; /*滚动条的基色*/\n```\n\n# NiceScroll插件实现滚动条美化\n\n### 介绍\n\n基于jQuery实现的滚动条插件，无需额外的css启用只需一行代码，灵活方便可完全自定义滚动条的样式。几乎兼容全部的浏览器，同时支持触摸事件。\n\n### 用法\n\n引入**jQuery**和**nicescroll**\n\n```html\n<div class=\"boxscroll\">\n    <div class=\"contentscroll\"></div>\n</div>\n```\n\n只需下面简单一行代码便可实现滚动条的开启,**nicescroll**不依赖原本浏览器样式。\n\n```js\n    $(\".boxscroll\").niceScroll();\n```\n\n效果如下：\n![](https://raw.githubusercontent.com/zhjAdm/ImageHosting/main/2021-05-18_20-05-41.png)\n\n修改样式也同样的方便，niceScroll()传入想修改的参数即可。\n\n```js\n    $(\".boxscroll\").niceScroll({cursorcolor:\"#F00\",cursoropacitymax:0.7});\n```\n\n![](https://raw.githubusercontent.com/zhjAdm/ImageHosting/main/2021-05-18_21-00-41.png)\n\n### 配置参数\n\n```js\n    cursorcolor: \"#424242\", // 滚动条光标的颜色 change cursor color in hex\n    cursoropacitymin: 0, // 滚动条在不激活状态下的透明度，默认是0 change opacity when cursor is inactive (scrollabar \"hidden\" state), range from 1 to 0\n    cursoropacitymax: 1, //滚动条在激活状态下的透明度，默认是1 change opacity when cursor is active (scrollabar \"visible\" state), range from 1 to 0\n    cursorwidth: \"5px\", // 滚动条宽度 cursor width in pixel (you can also write \"5px\")\n    cursorborder: \"1px solid #fff\", //用css定义滚动条的边框 css definition for cursor border\n    cursorborderradius: \"5px\", //滚动条的圆角半径 border radius in pixel for cursor\n    zindex: \"auto\" | <number>, //改变滚动条div的z-index的值 change z-index for scrollbar div\n    scrollspeed: 60, // 滚动速度\n    mousescrollstep: 40, //使用鼠标轮滚的时候的滚动速度 scrolling speed with mouse wheel (pixel)\n    touchbehavior: false, //在桌面电脑上启用光标拖动，就像触摸设备那样 enable cursor-drag scrolling like touch devices in desktop computer\n    hwacceleration: true, //如果设备支持，则启用硬件加速 use hardware accelerated scroll when supported\n    boxzoom: false, //给盒子的内容启用放大缩小功能 enable zoom for box content\n    dblclickzoom: true, //双击放大，在boxzoom=true的情况下 (only when boxzoom=true) zoom activated when double click on box\n    gesturezoom: true, //手势放大缩小，在boxzoom=true的情况下 (only when boxzoom=true and with touch devices) zoom activated when pinch out/in on box\n    grabcursorenabled: true //这个可以禁用\"grab\"鼠标光标 (only when touchbehavior=true) display \"grab\" icon\n    autohidemode: true, //设置在什么情况下隐藏scrollbar。 how hide the scrollbar works, possible values: \n      true | // 在不滚动情况下隐藏。 hide when no scrolling\n      \"cursor\" | //只隐藏光标 only cursor hidden\n      false | //始终不隐藏 do not hide,\n      \"leave\" | //只在鼠标离开内容区是隐藏 hide only if pointer leaves content\n      \"hidden\" | //使用隐藏 hide always\n      \"scroll\", //只在滚动的情况下显示，在不滚动的时候隐藏 show only on scroll          \n    background: \"\", //设置背景颜色 change css for rail background\n    iframeautoresize: true, //在iframe的load事件中自动设置大小 autoresize iframe on load event\n    cursorminheight: 32, //设置最小的光标高度 set the minimum cursor height (pixel)\n    preservenativescrolling: true, //这个设置通过事件冒泡的方式使你能够滚动原生的滚动条。 you can scroll native scrollable areas with mouse, bubbling mouse wheel event\n    railoffset: false, //设置轨道的上或者左的偏移 you can add offset top/left for rail position\n    bouncescroll: false, //启用向手机上面的那种滚动回弹 (only hw accell) enable scroll bouncing at the end of content as mobile-like \n    spacebarenabled: true, // enable page down scrolling when space bar has pressed\n    railpadding: { top: 0, right: 0, left: 0, bottom: 0 }, //设置轨道的内间距 set padding for rail bar\n    disableoutline: true, //在chrome浏览器上选择一个div使用nicescroll时禁用outline， for chrome browser, disable outline (orange highlight) when selecting a div with nicescroll\n    horizrailenabled: true, //设置是否处理水平滚动 nicescroll can manage horizontal scroll\n    railalign: right, //垂直对齐方式 alignment of vertical rail\n    railvalign: bottom, //水平对齐方式 alignment of horizontal rail\n    enabletranslate3d: true, //设置nicescroll是否使用css translate去滚动内容 nicescroll can use css translate to scroll content\n    enablemousewheel: true, //设置是否响应鼠标滚动事件 nicescroll can manage mouse wheel events\n    enablekeyboard: true, //设置是否响应键盘事件 nicescroll can manage keyboard events\n    smoothscroll: true, //使用平滑滚动 scroll with ease movement\n    sensitiverail: true, //在轨道上点击时是否滚动 click on rail make a scroll\n    enablemouselockapi: true, // can use mouse caption lock API (same issue on object dragging)\n    cursorfixedheight: false, //给光标设置固定的高度 set fixed height for cursor in pixel\n    hidecursordelay: 400, //设置隐藏光标的延迟时间，单位是毫秒 set the delay in microseconds to fading out scrollbars\n    directionlockdeadzone: 6, // dead zone in pixels for direction lock activation\n    nativeparentscrolling: true, //检测内容的底部和父节点是否允许滚动，像原生滚动条的实现方式 detect bottom of content and let parent to scroll, as native scroll does\n    enablescrollonselection: true, //在选择文字的时候自动滚动内容 enable auto-scrolling of content when selection text\n    cursordragspeed: 0.3, //当拖动光标时候的速度 speed of selection when dragged with cursor\n    rtlmode: \"auto\", //设置水平滚动div的起始边是左还是右 horizontal div scrolling starts at left side\n    cursordragontouch: false, //设置在触摸模式下，是否可以拖动光标就可以滚动 drag cursor in touch / touchbehavior mode also\n    oneaxismousemode: \"auto\", //设置鼠标滚轮在只有水平模式的情况下是否可用 it permits horizontal scrolling with mousewheel on horizontal only content, if false (vertical-only) mousewheel don't scroll horizontally, if value is auto detects two-axis mouse\n    scriptpath: \"\" //设置box模式下图标的路径，设成\"\"表示和script是同一个路径 define custom path for boxmode icons (\"\" => same script path)\n    preventmultitouchscrolling: true //防止在多点触摸情况下滚动 prevent scrolling on multitouch events\n    disablemutationobserver: false //稳定滚动条 force MutationObserver disabled\n```","slug":"滚动条探索之美化","published":1,"updated":"2023-03-09T14:46:11.741Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhiicn3k000inypjaruyb1ko","content":"<h1 id=\"webkit下css实现样式修改\"><a href=\"#webkit下css实现样式修改\" class=\"headerlink\" title=\"webkit下css实现样式修改\"></a>webkit下css实现样式修改</h1><p>基于webkit内核的浏览器可通过-webkit-scrollbar<em><strong>伪元素</strong></em>实现对滚动条样式的控制。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">::-webkit-scrollbar — 整个滚动条.</span><br><span class=\"line\">::-webkit-scrollbar-button — 滚动条上的按钮 (上下箭头).</span><br><span class=\"line\">::-webkit-scrollbar-thumb — 滚动条上的滚动滑块.</span><br><span class=\"line\">::-webkit-scrollbar-track — 滚动条轨道.</span><br><span class=\"line\">::-webkit-scrollbar-track-piece — 滚动条没有滑块的轨道部分.</span><br><span class=\"line\">::-webkit-scrollbar-corner — 当同时有垂直滚动条和水平滚动条时交汇的部分.</span><br><span class=\"line\">::-webkit-resizer — 两个滚动条的交汇处上用于通过拖动调整元素大小的小控件</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"例子\"><a href=\"#例子\" class=\"headerlink\" title=\"例子\"></a>例子</h2><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">::-webkit-scrollbar&#123;/*滚动条整体*/</span><br><span class=\"line\">    width: <span class=\"number\">45px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">::-webkit-scrollbar-thumb&#123;/*滚动条里面的小方块*/</span><br><span class=\"line\">    background: <span class=\"number\">#666666</span>;</span><br><span class=\"line\">    <span class=\"attribute\">border-radius</span>: <span class=\"number\">45px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">::-webkit-scrollbar-track&#123;/*滚动条轨道的样式*/</span><br><span class=\"line\">    background: <span class=\"number\">#ccc</span>;</span><br><span class=\"line\">    <span class=\"attribute\">border-radius</span>: <span class=\"number\">5px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">::-webkit-scrollbar-track-piece&#123;/*滚动条没有滑块的轨道样式*/</span><br><span class=\"line\">    background: <span class=\"built_in\">rgb</span>(<span class=\"number\">1</span>, <span class=\"number\">117</span>, <span class=\"number\">133</span>);</span><br><span class=\"line\">    <span class=\"attribute\">border-radius</span>: <span class=\"number\">45px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://raw.githubusercontent.com/zhjAdm/ImageHosting/main/1-1.png\" alt=\"1-1\"><br>::-webkit-scrollbar 为一切的基础，并且所有的伪元素后面可通过添加:vertical和:horizontal两个<em><strong>伪类</strong></em>来是定所调整的为纵向还是横向滚动条。</p>\n<h1 id=\"IE下css实现样式修改\"><a href=\"#IE下css实现样式修改\" class=\"headerlink\" title=\"IE下css实现样式修改\"></a>IE下css实现样式修改</h1><p>IE浏览器仅支持修改颜色，无法对滚动条的形状大小进行修改。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scrollbar-arrow-<span class=\"attribute\">color</span>: color; <span class=\"comment\">/*三角箭头的颜色*/</span></span><br><span class=\"line\">scrollbar-face-<span class=\"attribute\">color</span>: color; <span class=\"comment\">/*立体滚动条的颜色（包括箭头部分的背景色）*/</span></span><br><span class=\"line\">scrollbar-<span class=\"number\">3</span>dlight-<span class=\"attribute\">color</span>: color; <span class=\"comment\">/*立体滚动条亮边的颜色*/</span></span><br><span class=\"line\">scrollbar-highlight-<span class=\"attribute\">color</span>: color; <span class=\"comment\">/*滚动条的高亮颜色（左阴影？）*/</span></span><br><span class=\"line\">scrollbar-shadow-<span class=\"attribute\">color</span>: color; <span class=\"comment\">/*立体滚动条阴影的颜色*/</span></span><br><span class=\"line\">scrollbar-darkshadow-<span class=\"attribute\">color</span>: color; <span class=\"comment\">/*立体滚动条外阴影的颜色*/</span></span><br><span class=\"line\">scrollbar-track-<span class=\"attribute\">color</span>: color; <span class=\"comment\">/*立体滚动条背景颜色*/</span></span><br><span class=\"line\">scrollbar-base-<span class=\"attribute\">color</span>:color; <span class=\"comment\">/*滚动条的基色*/</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"NiceScroll插件实现滚动条美化\"><a href=\"#NiceScroll插件实现滚动条美化\" class=\"headerlink\" title=\"NiceScroll插件实现滚动条美化\"></a>NiceScroll插件实现滚动条美化</h1><h3 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h3><p>基于jQuery实现的滚动条插件，无需额外的css启用只需一行代码，灵活方便可完全自定义滚动条的样式。几乎兼容全部的浏览器，同时支持触摸事件。</p>\n<h3 id=\"用法\"><a href=\"#用法\" class=\"headerlink\" title=\"用法\"></a>用法</h3><p>引入<strong>jQuery</strong>和<strong>nicescroll</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;boxscroll&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;contentscroll&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>只需下面简单一行代码便可实现滚动条的开启,<strong>nicescroll</strong>不依赖原本浏览器样式。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">&quot;.boxscroll&quot;</span>).niceScroll();</span><br></pre></td></tr></table></figure>\n\n<p>效果如下：<br><img src=\"https://raw.githubusercontent.com/zhjAdm/ImageHosting/main/2021-05-18_20-05-41.png\"></p>\n<p>修改样式也同样的方便，niceScroll()传入想修改的参数即可。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">&quot;.boxscroll&quot;</span>).niceScroll(&#123;<span class=\"attr\">cursorcolor</span>:<span class=\"string\">&quot;#F00&quot;</span>,<span class=\"attr\">cursoropacitymax</span>:<span class=\"number\">0.7</span>&#125;);</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://raw.githubusercontent.com/zhjAdm/ImageHosting/main/2021-05-18_21-00-41.png\"></p>\n<h3 id=\"配置参数\"><a href=\"#配置参数\" class=\"headerlink\" title=\"配置参数\"></a>配置参数</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cursorcolor: <span class=\"string\">&quot;#424242&quot;</span>, <span class=\"comment\">// 滚动条光标的颜色 change cursor color in hex</span></span><br><span class=\"line\">cursoropacitymin: <span class=\"number\">0</span>, <span class=\"comment\">// 滚动条在不激活状态下的透明度，默认是0 change opacity when cursor is inactive (scrollabar &quot;hidden&quot; state), range from 1 to 0</span></span><br><span class=\"line\">cursoropacitymax: <span class=\"number\">1</span>, <span class=\"comment\">//滚动条在激活状态下的透明度，默认是1 change opacity when cursor is active (scrollabar &quot;visible&quot; state), range from 1 to 0</span></span><br><span class=\"line\">cursorwidth: <span class=\"string\">&quot;5px&quot;</span>, <span class=\"comment\">// 滚动条宽度 cursor width in pixel (you can also write &quot;5px&quot;)</span></span><br><span class=\"line\">cursorborder: <span class=\"string\">&quot;1px solid #fff&quot;</span>, <span class=\"comment\">//用css定义滚动条的边框 css definition for cursor border</span></span><br><span class=\"line\">cursorborderradius: <span class=\"string\">&quot;5px&quot;</span>, <span class=\"comment\">//滚动条的圆角半径 border radius in pixel for cursor</span></span><br><span class=\"line\">zindex: <span class=\"string\">&quot;auto&quot;</span> | &lt;number&gt;, <span class=\"comment\">//改变滚动条div的z-index的值 change z-index for scrollbar div</span></span><br><span class=\"line\">scrollspeed: <span class=\"number\">60</span>, <span class=\"comment\">// 滚动速度</span></span><br><span class=\"line\">mousescrollstep: <span class=\"number\">40</span>, <span class=\"comment\">//使用鼠标轮滚的时候的滚动速度 scrolling speed with mouse wheel (pixel)</span></span><br><span class=\"line\">touchbehavior: <span class=\"literal\">false</span>, <span class=\"comment\">//在桌面电脑上启用光标拖动，就像触摸设备那样 enable cursor-drag scrolling like touch devices in desktop computer</span></span><br><span class=\"line\">hwacceleration: <span class=\"literal\">true</span>, <span class=\"comment\">//如果设备支持，则启用硬件加速 use hardware accelerated scroll when supported</span></span><br><span class=\"line\">boxzoom: <span class=\"literal\">false</span>, <span class=\"comment\">//给盒子的内容启用放大缩小功能 enable zoom for box content</span></span><br><span class=\"line\">dblclickzoom: <span class=\"literal\">true</span>, <span class=\"comment\">//双击放大，在boxzoom=true的情况下 (only when boxzoom=true) zoom activated when double click on box</span></span><br><span class=\"line\">gesturezoom: <span class=\"literal\">true</span>, <span class=\"comment\">//手势放大缩小，在boxzoom=true的情况下 (only when boxzoom=true and with touch devices) zoom activated when pinch out/in on box</span></span><br><span class=\"line\">grabcursorenabled: <span class=\"literal\">true</span> <span class=\"comment\">//这个可以禁用&quot;grab&quot;鼠标光标 (only when touchbehavior=true) display &quot;grab&quot; icon</span></span><br><span class=\"line\">autohidemode: <span class=\"literal\">true</span>, <span class=\"comment\">//设置在什么情况下隐藏scrollbar。 how hide the scrollbar works, possible values: </span></span><br><span class=\"line\">  <span class=\"literal\">true</span> | <span class=\"comment\">// 在不滚动情况下隐藏。 hide when no scrolling</span></span><br><span class=\"line\">  <span class=\"string\">&quot;cursor&quot;</span> | <span class=\"comment\">//只隐藏光标 only cursor hidden</span></span><br><span class=\"line\">  <span class=\"literal\">false</span> | <span class=\"comment\">//始终不隐藏 do not hide,</span></span><br><span class=\"line\">  <span class=\"string\">&quot;leave&quot;</span> | <span class=\"comment\">//只在鼠标离开内容区是隐藏 hide only if pointer leaves content</span></span><br><span class=\"line\">  <span class=\"string\">&quot;hidden&quot;</span> | <span class=\"comment\">//使用隐藏 hide always</span></span><br><span class=\"line\">  <span class=\"string\">&quot;scroll&quot;</span>, <span class=\"comment\">//只在滚动的情况下显示，在不滚动的时候隐藏 show only on scroll          </span></span><br><span class=\"line\">background: <span class=\"string\">&quot;&quot;</span>, <span class=\"comment\">//设置背景颜色 change css for rail background</span></span><br><span class=\"line\">iframeautoresize: <span class=\"literal\">true</span>, <span class=\"comment\">//在iframe的load事件中自动设置大小 autoresize iframe on load event</span></span><br><span class=\"line\">cursorminheight: <span class=\"number\">32</span>, <span class=\"comment\">//设置最小的光标高度 set the minimum cursor height (pixel)</span></span><br><span class=\"line\">preservenativescrolling: <span class=\"literal\">true</span>, <span class=\"comment\">//这个设置通过事件冒泡的方式使你能够滚动原生的滚动条。 you can scroll native scrollable areas with mouse, bubbling mouse wheel event</span></span><br><span class=\"line\">railoffset: <span class=\"literal\">false</span>, <span class=\"comment\">//设置轨道的上或者左的偏移 you can add offset top/left for rail position</span></span><br><span class=\"line\">bouncescroll: <span class=\"literal\">false</span>, <span class=\"comment\">//启用向手机上面的那种滚动回弹 (only hw accell) enable scroll bouncing at the end of content as mobile-like </span></span><br><span class=\"line\">spacebarenabled: <span class=\"literal\">true</span>, <span class=\"comment\">// enable page down scrolling when space bar has pressed</span></span><br><span class=\"line\">railpadding: &#123; <span class=\"attr\">top</span>: <span class=\"number\">0</span>, <span class=\"attr\">right</span>: <span class=\"number\">0</span>, <span class=\"attr\">left</span>: <span class=\"number\">0</span>, <span class=\"attr\">bottom</span>: <span class=\"number\">0</span> &#125;, <span class=\"comment\">//设置轨道的内间距 set padding for rail bar</span></span><br><span class=\"line\">disableoutline: <span class=\"literal\">true</span>, <span class=\"comment\">//在chrome浏览器上选择一个div使用nicescroll时禁用outline， for chrome browser, disable outline (orange highlight) when selecting a div with nicescroll</span></span><br><span class=\"line\">horizrailenabled: <span class=\"literal\">true</span>, <span class=\"comment\">//设置是否处理水平滚动 nicescroll can manage horizontal scroll</span></span><br><span class=\"line\">railalign: right, <span class=\"comment\">//垂直对齐方式 alignment of vertical rail</span></span><br><span class=\"line\">railvalign: bottom, <span class=\"comment\">//水平对齐方式 alignment of horizontal rail</span></span><br><span class=\"line\">enabletranslate3d: <span class=\"literal\">true</span>, <span class=\"comment\">//设置nicescroll是否使用css translate去滚动内容 nicescroll can use css translate to scroll content</span></span><br><span class=\"line\">enablemousewheel: <span class=\"literal\">true</span>, <span class=\"comment\">//设置是否响应鼠标滚动事件 nicescroll can manage mouse wheel events</span></span><br><span class=\"line\">enablekeyboard: <span class=\"literal\">true</span>, <span class=\"comment\">//设置是否响应键盘事件 nicescroll can manage keyboard events</span></span><br><span class=\"line\">smoothscroll: <span class=\"literal\">true</span>, <span class=\"comment\">//使用平滑滚动 scroll with ease movement</span></span><br><span class=\"line\">sensitiverail: <span class=\"literal\">true</span>, <span class=\"comment\">//在轨道上点击时是否滚动 click on rail make a scroll</span></span><br><span class=\"line\">enablemouselockapi: <span class=\"literal\">true</span>, <span class=\"comment\">// can use mouse caption lock API (same issue on object dragging)</span></span><br><span class=\"line\">cursorfixedheight: <span class=\"literal\">false</span>, <span class=\"comment\">//给光标设置固定的高度 set fixed height for cursor in pixel</span></span><br><span class=\"line\">hidecursordelay: <span class=\"number\">400</span>, <span class=\"comment\">//设置隐藏光标的延迟时间，单位是毫秒 set the delay in microseconds to fading out scrollbars</span></span><br><span class=\"line\">directionlockdeadzone: <span class=\"number\">6</span>, <span class=\"comment\">// dead zone in pixels for direction lock activation</span></span><br><span class=\"line\">nativeparentscrolling: <span class=\"literal\">true</span>, <span class=\"comment\">//检测内容的底部和父节点是否允许滚动，像原生滚动条的实现方式 detect bottom of content and let parent to scroll, as native scroll does</span></span><br><span class=\"line\">enablescrollonselection: <span class=\"literal\">true</span>, <span class=\"comment\">//在选择文字的时候自动滚动内容 enable auto-scrolling of content when selection text</span></span><br><span class=\"line\">cursordragspeed: <span class=\"number\">0.3</span>, <span class=\"comment\">//当拖动光标时候的速度 speed of selection when dragged with cursor</span></span><br><span class=\"line\">rtlmode: <span class=\"string\">&quot;auto&quot;</span>, <span class=\"comment\">//设置水平滚动div的起始边是左还是右 horizontal div scrolling starts at left side</span></span><br><span class=\"line\">cursordragontouch: <span class=\"literal\">false</span>, <span class=\"comment\">//设置在触摸模式下，是否可以拖动光标就可以滚动 drag cursor in touch / touchbehavior mode also</span></span><br><span class=\"line\">oneaxismousemode: <span class=\"string\">&quot;auto&quot;</span>, <span class=\"comment\">//设置鼠标滚轮在只有水平模式的情况下是否可用 it permits horizontal scrolling with mousewheel on horizontal only content, if false (vertical-only) mousewheel don&#x27;t scroll horizontally, if value is auto detects two-axis mouse</span></span><br><span class=\"line\">scriptpath: <span class=\"string\">&quot;&quot;</span> <span class=\"comment\">//设置box模式下图标的路径，设成&quot;&quot;表示和script是同一个路径 define custom path for boxmode icons (&quot;&quot; =&gt; same script path)</span></span><br><span class=\"line\">preventmultitouchscrolling: <span class=\"literal\">true</span> <span class=\"comment\">//防止在多点触摸情况下滚动 prevent scrolling on multitouch events</span></span><br><span class=\"line\">disablemutationobserver: <span class=\"literal\">false</span> <span class=\"comment\">//稳定滚动条 force MutationObserver disabled</span></span><br></pre></td></tr></table></figure>","site":{"data":{"styles":"/* build time:Thu May 11 2023 10:25:59 GMT+0800 (中国标准时间)*/\n.sidebar{box-shadow:none;background:0 0}body{background:url(/images/yourbackground.png);background-repeat:no-repeat;background-attachment:fixed;background-size:cover;background-position:50% 50%}.back-to-top.back-to-top-on{display:none}\n/* rebuild by neat */","variables":"/* build time:Thu May 11 2023 10:25:59 GMT+0800 (中国标准时间)*/\n\n/* rebuild by neat */"}},"length":5850,"excerpt":"","more":"<h1 id=\"webkit下css实现样式修改\"><a href=\"#webkit下css实现样式修改\" class=\"headerlink\" title=\"webkit下css实现样式修改\"></a>webkit下css实现样式修改</h1><p>基于webkit内核的浏览器可通过-webkit-scrollbar<em><strong>伪元素</strong></em>实现对滚动条样式的控制。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">::-webkit-scrollbar — 整个滚动条.</span><br><span class=\"line\">::-webkit-scrollbar-button — 滚动条上的按钮 (上下箭头).</span><br><span class=\"line\">::-webkit-scrollbar-thumb — 滚动条上的滚动滑块.</span><br><span class=\"line\">::-webkit-scrollbar-track — 滚动条轨道.</span><br><span class=\"line\">::-webkit-scrollbar-track-piece — 滚动条没有滑块的轨道部分.</span><br><span class=\"line\">::-webkit-scrollbar-corner — 当同时有垂直滚动条和水平滚动条时交汇的部分.</span><br><span class=\"line\">::-webkit-resizer — 两个滚动条的交汇处上用于通过拖动调整元素大小的小控件</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"例子\"><a href=\"#例子\" class=\"headerlink\" title=\"例子\"></a>例子</h2><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">::-webkit-scrollbar&#123;/*滚动条整体*/</span><br><span class=\"line\">    width: <span class=\"number\">45px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">::-webkit-scrollbar-thumb&#123;/*滚动条里面的小方块*/</span><br><span class=\"line\">    background: <span class=\"number\">#666666</span>;</span><br><span class=\"line\">    <span class=\"attribute\">border-radius</span>: <span class=\"number\">45px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">::-webkit-scrollbar-track&#123;/*滚动条轨道的样式*/</span><br><span class=\"line\">    background: <span class=\"number\">#ccc</span>;</span><br><span class=\"line\">    <span class=\"attribute\">border-radius</span>: <span class=\"number\">5px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">::-webkit-scrollbar-track-piece&#123;/*滚动条没有滑块的轨道样式*/</span><br><span class=\"line\">    background: <span class=\"built_in\">rgb</span>(<span class=\"number\">1</span>, <span class=\"number\">117</span>, <span class=\"number\">133</span>);</span><br><span class=\"line\">    <span class=\"attribute\">border-radius</span>: <span class=\"number\">45px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://raw.githubusercontent.com/zhjAdm/ImageHosting/main/1-1.png\" alt=\"1-1\"><br>::-webkit-scrollbar 为一切的基础，并且所有的伪元素后面可通过添加:vertical和:horizontal两个<em><strong>伪类</strong></em>来是定所调整的为纵向还是横向滚动条。</p>\n<h1 id=\"IE下css实现样式修改\"><a href=\"#IE下css实现样式修改\" class=\"headerlink\" title=\"IE下css实现样式修改\"></a>IE下css实现样式修改</h1><p>IE浏览器仅支持修改颜色，无法对滚动条的形状大小进行修改。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scrollbar-arrow-<span class=\"attribute\">color</span>: color; <span class=\"comment\">/*三角箭头的颜色*/</span></span><br><span class=\"line\">scrollbar-face-<span class=\"attribute\">color</span>: color; <span class=\"comment\">/*立体滚动条的颜色（包括箭头部分的背景色）*/</span></span><br><span class=\"line\">scrollbar-<span class=\"number\">3</span>dlight-<span class=\"attribute\">color</span>: color; <span class=\"comment\">/*立体滚动条亮边的颜色*/</span></span><br><span class=\"line\">scrollbar-highlight-<span class=\"attribute\">color</span>: color; <span class=\"comment\">/*滚动条的高亮颜色（左阴影？）*/</span></span><br><span class=\"line\">scrollbar-shadow-<span class=\"attribute\">color</span>: color; <span class=\"comment\">/*立体滚动条阴影的颜色*/</span></span><br><span class=\"line\">scrollbar-darkshadow-<span class=\"attribute\">color</span>: color; <span class=\"comment\">/*立体滚动条外阴影的颜色*/</span></span><br><span class=\"line\">scrollbar-track-<span class=\"attribute\">color</span>: color; <span class=\"comment\">/*立体滚动条背景颜色*/</span></span><br><span class=\"line\">scrollbar-base-<span class=\"attribute\">color</span>:color; <span class=\"comment\">/*滚动条的基色*/</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"NiceScroll插件实现滚动条美化\"><a href=\"#NiceScroll插件实现滚动条美化\" class=\"headerlink\" title=\"NiceScroll插件实现滚动条美化\"></a>NiceScroll插件实现滚动条美化</h1><h3 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h3><p>基于jQuery实现的滚动条插件，无需额外的css启用只需一行代码，灵活方便可完全自定义滚动条的样式。几乎兼容全部的浏览器，同时支持触摸事件。</p>\n<h3 id=\"用法\"><a href=\"#用法\" class=\"headerlink\" title=\"用法\"></a>用法</h3><p>引入<strong>jQuery</strong>和<strong>nicescroll</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;boxscroll&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;contentscroll&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>只需下面简单一行代码便可实现滚动条的开启,<strong>nicescroll</strong>不依赖原本浏览器样式。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">&quot;.boxscroll&quot;</span>).niceScroll();</span><br></pre></td></tr></table></figure>\n\n<p>效果如下：<br><img src=\"https://raw.githubusercontent.com/zhjAdm/ImageHosting/main/2021-05-18_20-05-41.png\"></p>\n<p>修改样式也同样的方便，niceScroll()传入想修改的参数即可。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">&quot;.boxscroll&quot;</span>).niceScroll(&#123;<span class=\"attr\">cursorcolor</span>:<span class=\"string\">&quot;#F00&quot;</span>,<span class=\"attr\">cursoropacitymax</span>:<span class=\"number\">0.7</span>&#125;);</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://raw.githubusercontent.com/zhjAdm/ImageHosting/main/2021-05-18_21-00-41.png\"></p>\n<h3 id=\"配置参数\"><a href=\"#配置参数\" class=\"headerlink\" title=\"配置参数\"></a>配置参数</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cursorcolor: <span class=\"string\">&quot;#424242&quot;</span>, <span class=\"comment\">// 滚动条光标的颜色 change cursor color in hex</span></span><br><span class=\"line\">cursoropacitymin: <span class=\"number\">0</span>, <span class=\"comment\">// 滚动条在不激活状态下的透明度，默认是0 change opacity when cursor is inactive (scrollabar &quot;hidden&quot; state), range from 1 to 0</span></span><br><span class=\"line\">cursoropacitymax: <span class=\"number\">1</span>, <span class=\"comment\">//滚动条在激活状态下的透明度，默认是1 change opacity when cursor is active (scrollabar &quot;visible&quot; state), range from 1 to 0</span></span><br><span class=\"line\">cursorwidth: <span class=\"string\">&quot;5px&quot;</span>, <span class=\"comment\">// 滚动条宽度 cursor width in pixel (you can also write &quot;5px&quot;)</span></span><br><span class=\"line\">cursorborder: <span class=\"string\">&quot;1px solid #fff&quot;</span>, <span class=\"comment\">//用css定义滚动条的边框 css definition for cursor border</span></span><br><span class=\"line\">cursorborderradius: <span class=\"string\">&quot;5px&quot;</span>, <span class=\"comment\">//滚动条的圆角半径 border radius in pixel for cursor</span></span><br><span class=\"line\">zindex: <span class=\"string\">&quot;auto&quot;</span> | &lt;number&gt;, <span class=\"comment\">//改变滚动条div的z-index的值 change z-index for scrollbar div</span></span><br><span class=\"line\">scrollspeed: <span class=\"number\">60</span>, <span class=\"comment\">// 滚动速度</span></span><br><span class=\"line\">mousescrollstep: <span class=\"number\">40</span>, <span class=\"comment\">//使用鼠标轮滚的时候的滚动速度 scrolling speed with mouse wheel (pixel)</span></span><br><span class=\"line\">touchbehavior: <span class=\"literal\">false</span>, <span class=\"comment\">//在桌面电脑上启用光标拖动，就像触摸设备那样 enable cursor-drag scrolling like touch devices in desktop computer</span></span><br><span class=\"line\">hwacceleration: <span class=\"literal\">true</span>, <span class=\"comment\">//如果设备支持，则启用硬件加速 use hardware accelerated scroll when supported</span></span><br><span class=\"line\">boxzoom: <span class=\"literal\">false</span>, <span class=\"comment\">//给盒子的内容启用放大缩小功能 enable zoom for box content</span></span><br><span class=\"line\">dblclickzoom: <span class=\"literal\">true</span>, <span class=\"comment\">//双击放大，在boxzoom=true的情况下 (only when boxzoom=true) zoom activated when double click on box</span></span><br><span class=\"line\">gesturezoom: <span class=\"literal\">true</span>, <span class=\"comment\">//手势放大缩小，在boxzoom=true的情况下 (only when boxzoom=true and with touch devices) zoom activated when pinch out/in on box</span></span><br><span class=\"line\">grabcursorenabled: <span class=\"literal\">true</span> <span class=\"comment\">//这个可以禁用&quot;grab&quot;鼠标光标 (only when touchbehavior=true) display &quot;grab&quot; icon</span></span><br><span class=\"line\">autohidemode: <span class=\"literal\">true</span>, <span class=\"comment\">//设置在什么情况下隐藏scrollbar。 how hide the scrollbar works, possible values: </span></span><br><span class=\"line\">  <span class=\"literal\">true</span> | <span class=\"comment\">// 在不滚动情况下隐藏。 hide when no scrolling</span></span><br><span class=\"line\">  <span class=\"string\">&quot;cursor&quot;</span> | <span class=\"comment\">//只隐藏光标 only cursor hidden</span></span><br><span class=\"line\">  <span class=\"literal\">false</span> | <span class=\"comment\">//始终不隐藏 do not hide,</span></span><br><span class=\"line\">  <span class=\"string\">&quot;leave&quot;</span> | <span class=\"comment\">//只在鼠标离开内容区是隐藏 hide only if pointer leaves content</span></span><br><span class=\"line\">  <span class=\"string\">&quot;hidden&quot;</span> | <span class=\"comment\">//使用隐藏 hide always</span></span><br><span class=\"line\">  <span class=\"string\">&quot;scroll&quot;</span>, <span class=\"comment\">//只在滚动的情况下显示，在不滚动的时候隐藏 show only on scroll          </span></span><br><span class=\"line\">background: <span class=\"string\">&quot;&quot;</span>, <span class=\"comment\">//设置背景颜色 change css for rail background</span></span><br><span class=\"line\">iframeautoresize: <span class=\"literal\">true</span>, <span class=\"comment\">//在iframe的load事件中自动设置大小 autoresize iframe on load event</span></span><br><span class=\"line\">cursorminheight: <span class=\"number\">32</span>, <span class=\"comment\">//设置最小的光标高度 set the minimum cursor height (pixel)</span></span><br><span class=\"line\">preservenativescrolling: <span class=\"literal\">true</span>, <span class=\"comment\">//这个设置通过事件冒泡的方式使你能够滚动原生的滚动条。 you can scroll native scrollable areas with mouse, bubbling mouse wheel event</span></span><br><span class=\"line\">railoffset: <span class=\"literal\">false</span>, <span class=\"comment\">//设置轨道的上或者左的偏移 you can add offset top/left for rail position</span></span><br><span class=\"line\">bouncescroll: <span class=\"literal\">false</span>, <span class=\"comment\">//启用向手机上面的那种滚动回弹 (only hw accell) enable scroll bouncing at the end of content as mobile-like </span></span><br><span class=\"line\">spacebarenabled: <span class=\"literal\">true</span>, <span class=\"comment\">// enable page down scrolling when space bar has pressed</span></span><br><span class=\"line\">railpadding: &#123; <span class=\"attr\">top</span>: <span class=\"number\">0</span>, <span class=\"attr\">right</span>: <span class=\"number\">0</span>, <span class=\"attr\">left</span>: <span class=\"number\">0</span>, <span class=\"attr\">bottom</span>: <span class=\"number\">0</span> &#125;, <span class=\"comment\">//设置轨道的内间距 set padding for rail bar</span></span><br><span class=\"line\">disableoutline: <span class=\"literal\">true</span>, <span class=\"comment\">//在chrome浏览器上选择一个div使用nicescroll时禁用outline， for chrome browser, disable outline (orange highlight) when selecting a div with nicescroll</span></span><br><span class=\"line\">horizrailenabled: <span class=\"literal\">true</span>, <span class=\"comment\">//设置是否处理水平滚动 nicescroll can manage horizontal scroll</span></span><br><span class=\"line\">railalign: right, <span class=\"comment\">//垂直对齐方式 alignment of vertical rail</span></span><br><span class=\"line\">railvalign: bottom, <span class=\"comment\">//水平对齐方式 alignment of horizontal rail</span></span><br><span class=\"line\">enabletranslate3d: <span class=\"literal\">true</span>, <span class=\"comment\">//设置nicescroll是否使用css translate去滚动内容 nicescroll can use css translate to scroll content</span></span><br><span class=\"line\">enablemousewheel: <span class=\"literal\">true</span>, <span class=\"comment\">//设置是否响应鼠标滚动事件 nicescroll can manage mouse wheel events</span></span><br><span class=\"line\">enablekeyboard: <span class=\"literal\">true</span>, <span class=\"comment\">//设置是否响应键盘事件 nicescroll can manage keyboard events</span></span><br><span class=\"line\">smoothscroll: <span class=\"literal\">true</span>, <span class=\"comment\">//使用平滑滚动 scroll with ease movement</span></span><br><span class=\"line\">sensitiverail: <span class=\"literal\">true</span>, <span class=\"comment\">//在轨道上点击时是否滚动 click on rail make a scroll</span></span><br><span class=\"line\">enablemouselockapi: <span class=\"literal\">true</span>, <span class=\"comment\">// can use mouse caption lock API (same issue on object dragging)</span></span><br><span class=\"line\">cursorfixedheight: <span class=\"literal\">false</span>, <span class=\"comment\">//给光标设置固定的高度 set fixed height for cursor in pixel</span></span><br><span class=\"line\">hidecursordelay: <span class=\"number\">400</span>, <span class=\"comment\">//设置隐藏光标的延迟时间，单位是毫秒 set the delay in microseconds to fading out scrollbars</span></span><br><span class=\"line\">directionlockdeadzone: <span class=\"number\">6</span>, <span class=\"comment\">// dead zone in pixels for direction lock activation</span></span><br><span class=\"line\">nativeparentscrolling: <span class=\"literal\">true</span>, <span class=\"comment\">//检测内容的底部和父节点是否允许滚动，像原生滚动条的实现方式 detect bottom of content and let parent to scroll, as native scroll does</span></span><br><span class=\"line\">enablescrollonselection: <span class=\"literal\">true</span>, <span class=\"comment\">//在选择文字的时候自动滚动内容 enable auto-scrolling of content when selection text</span></span><br><span class=\"line\">cursordragspeed: <span class=\"number\">0.3</span>, <span class=\"comment\">//当拖动光标时候的速度 speed of selection when dragged with cursor</span></span><br><span class=\"line\">rtlmode: <span class=\"string\">&quot;auto&quot;</span>, <span class=\"comment\">//设置水平滚动div的起始边是左还是右 horizontal div scrolling starts at left side</span></span><br><span class=\"line\">cursordragontouch: <span class=\"literal\">false</span>, <span class=\"comment\">//设置在触摸模式下，是否可以拖动光标就可以滚动 drag cursor in touch / touchbehavior mode also</span></span><br><span class=\"line\">oneaxismousemode: <span class=\"string\">&quot;auto&quot;</span>, <span class=\"comment\">//设置鼠标滚轮在只有水平模式的情况下是否可用 it permits horizontal scrolling with mousewheel on horizontal only content, if false (vertical-only) mousewheel don&#x27;t scroll horizontally, if value is auto detects two-axis mouse</span></span><br><span class=\"line\">scriptpath: <span class=\"string\">&quot;&quot;</span> <span class=\"comment\">//设置box模式下图标的路径，设成&quot;&quot;表示和script是同一个路径 define custom path for boxmode icons (&quot;&quot; =&gt; same script path)</span></span><br><span class=\"line\">preventmultitouchscrolling: <span class=\"literal\">true</span> <span class=\"comment\">//防止在多点触摸情况下滚动 prevent scrolling on multitouch events</span></span><br><span class=\"line\">disablemutationobserver: <span class=\"literal\">false</span> <span class=\"comment\">//稳定滚动条 force MutationObserver disabled</span></span><br></pre></td></tr></table></figure>"}],"PostAsset":[],"PostCategory":[{"post_id":"clhiicn3d0001nypjgl7l2cak","category_id":"clhiicn3h0004nypj5vrw74dx","_id":"clhiicn3k000fnypj2odu4hfi"},{"post_id":"clhiicn3j000dnypj9iqs5342","category_id":"clhiicn3j000anypj44em5ga3","_id":"clhiicn3k000jnypjcjqzdq10"},{"post_id":"clhiicn3g0003nypj367edgp8","category_id":"clhiicn3j000anypj44em5ga3","_id":"clhiicn3l000mnypj152x1kwk"},{"post_id":"clhiicn3i0007nypj2s32ct9g","category_id":"clhiicn3k000gnypjbvtchqmc","_id":"clhiicn3l000qnypje5ei8bc6"},{"post_id":"clhiicn3i0008nypj0i38eddf","category_id":"clhiicn3j000anypj44em5ga3","_id":"clhiicn3l000unypjf3eg5vcq"},{"post_id":"clhiicn3j0009nypj6e7fa1jj","category_id":"clhiicn3j000anypj44em5ga3","_id":"clhiicn3m000wnypjbwi7f44l"},{"post_id":"clhiicn3k000enypjcf5zatol","category_id":"clhiicn3l000tnypj8vd08l4f","_id":"clhiicn3m0010nypjdmizbv7p"},{"post_id":"clhiicn3k000inypjaruyb1ko","category_id":"clhiicn3l000tnypj8vd08l4f","_id":"clhiicn3m0013nypjeh2hcgrl"}],"PostTag":[{"post_id":"clhiicn3d0001nypjgl7l2cak","tag_id":"clhiicn3h0005nypjghwn7ur3","_id":"clhiicn3j000cnypj2u3b26sj"},{"post_id":"clhiicn3g0003nypj367edgp8","tag_id":"clhiicn3j000bnypj0lwx3zl0","_id":"clhiicn3l000nnypjfdffedvm"},{"post_id":"clhiicn3g0003nypj367edgp8","tag_id":"clhiicn3k000hnypj9ec3f71x","_id":"clhiicn3l000onypj0txkfl5w"},{"post_id":"clhiicn3i0007nypj2s32ct9g","tag_id":"clhiicn3k000lnypj7vx16kcg","_id":"clhiicn3l000snypjg20ihr2c"},{"post_id":"clhiicn3i0008nypj0i38eddf","tag_id":"clhiicn3j000bnypj0lwx3zl0","_id":"clhiicn3m000znypj00bz5yih"},{"post_id":"clhiicn3i0008nypj0i38eddf","tag_id":"clhiicn3l000vnypj16xaf12d","_id":"clhiicn3m0011nypj2cfvf04j"},{"post_id":"clhiicn3j0009nypj6e7fa1jj","tag_id":"clhiicn3j000bnypj0lwx3zl0","_id":"clhiicn3m0015nypjg4ih1uy3"},{"post_id":"clhiicn3j0009nypj6e7fa1jj","tag_id":"clhiicn3m0012nypjhpucflyn","_id":"clhiicn3m0016nypj67qw5cgi"},{"post_id":"clhiicn3j000dnypj9iqs5342","tag_id":"clhiicn3j000bnypj0lwx3zl0","_id":"clhiicn3m0018nypjgl2e1nrl"},{"post_id":"clhiicn3j000dnypj9iqs5342","tag_id":"clhiicn3m0012nypjhpucflyn","_id":"clhiicn3m0019nypj6icdfsts"},{"post_id":"clhiicn3k000enypjcf5zatol","tag_id":"clhiicn3m0017nypj42z75edx","_id":"clhiicn3n001cnypj3iwe0ssh"},{"post_id":"clhiicn3k000enypjcf5zatol","tag_id":"clhiicn3n001anypjg0zv1u86","_id":"clhiicn3n001dnypj285c4eid"},{"post_id":"clhiicn3k000inypjaruyb1ko","tag_id":"clhiicn3m0017nypj42z75edx","_id":"clhiicn3n001fnypjfe0o2zbi"},{"post_id":"clhiicn3k000inypjaruyb1ko","tag_id":"clhiicn3n001anypjg0zv1u86","_id":"clhiicn3n001gnypj6w18fuup"}],"Tag":[{"name":"Docker","_id":"clhiicn3h0005nypjghwn7ur3"},{"name":"Java","_id":"clhiicn3j000bnypj0lwx3zl0"},{"name":"POI","_id":"clhiicn3k000hnypj9ec3f71x"},{"name":"Linux","_id":"clhiicn3k000lnypj7vx16kcg"},{"name":"异常","_id":"clhiicn3l000vnypj16xaf12d"},{"name":"Spring Security","_id":"clhiicn3m0012nypjhpucflyn"},{"name":"css","_id":"clhiicn3m0017nypj42z75edx"},{"name":"滚动条","_id":"clhiicn3n001anypjg0zv1u86"}]}}